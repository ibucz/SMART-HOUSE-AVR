
smarthome529.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002500  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000003e4  00800060  00002500  00002594  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000051  00800444  00800444  00002978  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002978  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  000029e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004342  00000000  00000000  00002c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e2f  00000000  00000000  00006f8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002533  00000000  00000000  00007dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005d4  00000000  00000000  0000a2f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a5e  00000000  00000000  0000a8c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000025a9  00000000  00000000  0000b322  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000d8cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	14 e0       	ldi	r17, 0x04	; 4
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 34       	cpi	r26, 0x44	; 68
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	a4 e4       	ldi	r26, 0x44	; 68
      7a:	b4 e0       	ldi	r27, 0x04	; 4
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 39       	cpi	r26, 0x95	; 149
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9b 0d 	call	0x1b36	; 0x1b36 <main>
      8a:	0c 94 7e 12 	jmp	0x24fc	; 0x24fc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Keypad_init>:
 */
/*Keypad initialization*/
void Keypad_init(void)
 {
	/*configure Keypad columns as outputs others as inputs*/
	KEYPAD_PORT_DIR=0x00;
      92:	1a ba       	out	0x1a, r1	; 26
	KEYPAD_PORT_DIR2=0xF0;
      94:	80 ef       	ldi	r24, 0xF0	; 240
      96:	84 bb       	out	0x14, r24	; 20
	//DDRC=0xf0

	/*Pull up resistors for all rows*/
	SET_BIT(KEYPAD_PORT_OUT,FIRST_ROW);
      98:	8b b3       	in	r24, 0x1b	; 27
      9a:	81 60       	ori	r24, 0x01	; 1
      9c:	8b bb       	out	0x1b, r24	; 27
	SET_BIT(KEYPAD_PORT_OUT,SECOND_ROW);
      9e:	8b b3       	in	r24, 0x1b	; 27
      a0:	82 60       	ori	r24, 0x02	; 2
      a2:	8b bb       	out	0x1b, r24	; 27
	SET_BIT(KEYPAD_PORT_OUT,THIRD_ROW);
      a4:	8b b3       	in	r24, 0x1b	; 27
      a6:	84 60       	ori	r24, 0x04	; 4
      a8:	8b bb       	out	0x1b, r24	; 27
	SET_BIT(KEYPAD_PORT_OUT,FOURTH_ROW);
      aa:	8b b3       	in	r24, 0x1b	; 27
      ac:	88 60       	ori	r24, 0x08	; 8
      ae:	8b bb       	out	0x1b, r24	; 27

	SET_BIT(KEYPAD_PORT_OUT2,FIRST_COL);
      b0:	85 b3       	in	r24, 0x15	; 21
      b2:	80 61       	ori	r24, 0x10	; 16
      b4:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
      b6:	85 b3       	in	r24, 0x15	; 21
      b8:	80 62       	ori	r24, 0x20	; 32
      ba:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
      bc:	85 b3       	in	r24, 0x15	; 21
      be:	80 64       	ori	r24, 0x40	; 64
      c0:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
      c2:	85 b3       	in	r24, 0x15	; 21
      c4:	80 68       	ori	r24, 0x80	; 128
      c6:	85 bb       	out	0x15, r24	; 21
      c8:	08 95       	ret

000000ca <Keypad_get_pressed_key>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ca:	81 ee       	ldi	r24, 0xE1	; 225
      cc:	94 e0       	ldi	r25, 0x04	; 4
      ce:	01 97       	sbiw	r24, 0x01	; 1
      d0:	f1 f7       	brne	.-4      	; 0xce <Keypad_get_pressed_key+0x4>
      d2:	00 c0       	rjmp	.+0      	; 0xd4 <Keypad_get_pressed_key+0xa>
      d4:	00 00       	nop
	uint8 KeyPressed=0;

	/*First column */
	_delay_ms(5);

	CLEAR_BIT(KEYPAD_PORT_OUT2,FIRST_COL);
      d6:	85 b3       	in	r24, 0x15	; 21
      d8:	8f 7e       	andi	r24, 0xEF	; 239
      da:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
      dc:	85 b3       	in	r24, 0x15	; 21
      de:	80 62       	ori	r24, 0x20	; 32
      e0:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
      e2:	85 b3       	in	r24, 0x15	; 21
      e4:	80 64       	ori	r24, 0x40	; 64
      e6:	85 bb       	out	0x15, r24	; 21
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
      e8:	85 b3       	in	r24, 0x15	; 21
      ea:	80 68       	ori	r24, 0x80	; 128
      ec:	85 bb       	out	0x15, r24	; 21
      ee:	e1 ee       	ldi	r30, 0xE1	; 225
      f0:	f4 e0       	ldi	r31, 0x04	; 4
      f2:	31 97       	sbiw	r30, 0x01	; 1
      f4:	f1 f7       	brne	.-4      	; 0xf2 <Keypad_get_pressed_key+0x28>
      f6:	00 c0       	rjmp	.+0      	; 0xf8 <Keypad_get_pressed_key+0x2e>
      f8:	00 00       	nop
	_delay_ms(5); //Configuration Stability

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='7';}
      fa:	c8 9b       	sbis	0x19, 0	; 25
      fc:	08 c0       	rjmp	.+16     	; 0x10e <Keypad_get_pressed_key+0x44>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='4';}
      fe:	c9 9b       	sbis	0x19, 1	; 25
     100:	08 c0       	rjmp	.+16     	; 0x112 <Keypad_get_pressed_key+0x48>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='1';}
     102:	ca 9b       	sbis	0x19, 2	; 25
     104:	08 c0       	rjmp	.+16     	; 0x116 <Keypad_get_pressed_key+0x4c>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='*';}
     106:	cb 9b       	sbis	0x19, 3	; 25
     108:	08 c0       	rjmp	.+16     	; 0x11a <Keypad_get_pressed_key+0x50>

 }
/*Scanning any pressed key */
uint8 Keypad_get_pressed_key(void)
{
	uint8 KeyPressed=0;
     10a:	80 e0       	ldi	r24, 0x00	; 0
     10c:	07 c0       	rjmp	.+14     	; 0x11c <Keypad_get_pressed_key+0x52>
	SET_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
	_delay_ms(5); //Configuration Stability

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='7';}
     10e:	87 e3       	ldi	r24, 0x37	; 55
     110:	05 c0       	rjmp	.+10     	; 0x11c <Keypad_get_pressed_key+0x52>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='4';}
     112:	84 e3       	ldi	r24, 0x34	; 52
     114:	03 c0       	rjmp	.+6      	; 0x11c <Keypad_get_pressed_key+0x52>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='1';}
     116:	81 e3       	ldi	r24, 0x31	; 49
     118:	01 c0       	rjmp	.+2      	; 0x11c <Keypad_get_pressed_key+0x52>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='*';}
     11a:	8a e2       	ldi	r24, 0x2A	; 42

	/*Second column */
	SET_BIT(KEYPAD_PORT_OUT2,FIRST_COL);
     11c:	95 b3       	in	r25, 0x15	; 21
     11e:	90 61       	ori	r25, 0x10	; 16
     120:	95 bb       	out	0x15, r25	; 21
	CLEAR_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
     122:	95 b3       	in	r25, 0x15	; 21
     124:	9f 7d       	andi	r25, 0xDF	; 223
     126:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
     128:	95 b3       	in	r25, 0x15	; 21
     12a:	90 64       	ori	r25, 0x40	; 64
     12c:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
     12e:	95 b3       	in	r25, 0x15	; 21
     130:	90 68       	ori	r25, 0x80	; 128
     132:	95 bb       	out	0x15, r25	; 21
     134:	e1 ee       	ldi	r30, 0xE1	; 225
     136:	f4 e0       	ldi	r31, 0x04	; 4
     138:	31 97       	sbiw	r30, 0x01	; 1
     13a:	f1 f7       	brne	.-4      	; 0x138 <Keypad_get_pressed_key+0x6e>
     13c:	00 c0       	rjmp	.+0      	; 0x13e <Keypad_get_pressed_key+0x74>
     13e:	00 00       	nop

	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='8';}
     140:	c8 9b       	sbis	0x19, 0	; 25
     142:	07 c0       	rjmp	.+14     	; 0x152 <Keypad_get_pressed_key+0x88>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='5';}
     144:	c9 9b       	sbis	0x19, 1	; 25
     146:	07 c0       	rjmp	.+14     	; 0x156 <Keypad_get_pressed_key+0x8c>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='2';}
     148:	ca 9b       	sbis	0x19, 2	; 25
     14a:	07 c0       	rjmp	.+14     	; 0x15a <Keypad_get_pressed_key+0x90>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='0';}
     14c:	cb 9b       	sbis	0x19, 3	; 25
     14e:	07 c0       	rjmp	.+14     	; 0x15e <Keypad_get_pressed_key+0x94>
     150:	07 c0       	rjmp	.+14     	; 0x160 <Keypad_get_pressed_key+0x96>
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);

	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='8';}
     152:	88 e3       	ldi	r24, 0x38	; 56
     154:	05 c0       	rjmp	.+10     	; 0x160 <Keypad_get_pressed_key+0x96>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='5';}
     156:	85 e3       	ldi	r24, 0x35	; 53
     158:	03 c0       	rjmp	.+6      	; 0x160 <Keypad_get_pressed_key+0x96>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='2';}
     15a:	82 e3       	ldi	r24, 0x32	; 50
     15c:	01 c0       	rjmp	.+2      	; 0x160 <Keypad_get_pressed_key+0x96>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='0';}
     15e:	80 e3       	ldi	r24, 0x30	; 48

	/*Third column */
	SET_BIT(KEYPAD_PORT_OUT2,FIRST_COL);
     160:	95 b3       	in	r25, 0x15	; 21
     162:	90 61       	ori	r25, 0x10	; 16
     164:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
     166:	95 b3       	in	r25, 0x15	; 21
     168:	90 62       	ori	r25, 0x20	; 32
     16a:	95 bb       	out	0x15, r25	; 21
	CLEAR_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
     16c:	95 b3       	in	r25, 0x15	; 21
     16e:	9f 7b       	andi	r25, 0xBF	; 191
     170:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
     172:	95 b3       	in	r25, 0x15	; 21
     174:	90 68       	ori	r25, 0x80	; 128
     176:	95 bb       	out	0x15, r25	; 21
     178:	e1 ee       	ldi	r30, 0xE1	; 225
     17a:	f4 e0       	ldi	r31, 0x04	; 4
     17c:	31 97       	sbiw	r30, 0x01	; 1
     17e:	f1 f7       	brne	.-4      	; 0x17c <Keypad_get_pressed_key+0xb2>
     180:	00 c0       	rjmp	.+0      	; 0x182 <Keypad_get_pressed_key+0xb8>
     182:	00 00       	nop


	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='9';}
     184:	c8 9b       	sbis	0x19, 0	; 25
     186:	07 c0       	rjmp	.+14     	; 0x196 <Keypad_get_pressed_key+0xcc>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='6';}
     188:	c9 9b       	sbis	0x19, 1	; 25
     18a:	07 c0       	rjmp	.+14     	; 0x19a <Keypad_get_pressed_key+0xd0>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='3';}
     18c:	ca 9b       	sbis	0x19, 2	; 25
     18e:	07 c0       	rjmp	.+14     	; 0x19e <Keypad_get_pressed_key+0xd4>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='#';}
     190:	cb 9b       	sbis	0x19, 3	; 25
     192:	07 c0       	rjmp	.+14     	; 0x1a2 <Keypad_get_pressed_key+0xd8>
     194:	07 c0       	rjmp	.+14     	; 0x1a4 <Keypad_get_pressed_key+0xda>
	SET_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);


	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='9';}
     196:	89 e3       	ldi	r24, 0x39	; 57
     198:	05 c0       	rjmp	.+10     	; 0x1a4 <Keypad_get_pressed_key+0xda>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='6';}
     19a:	86 e3       	ldi	r24, 0x36	; 54
     19c:	03 c0       	rjmp	.+6      	; 0x1a4 <Keypad_get_pressed_key+0xda>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='3';}
     19e:	83 e3       	ldi	r24, 0x33	; 51
     1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <Keypad_get_pressed_key+0xda>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='#';}
     1a2:	83 e2       	ldi	r24, 0x23	; 35

	/*Fourth column */
	SET_BIT(KEYPAD_PORT_OUT2,FIRST_COL);
     1a4:	95 b3       	in	r25, 0x15	; 21
     1a6:	90 61       	ori	r25, 0x10	; 16
     1a8:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,SECOND_COL);
     1aa:	95 b3       	in	r25, 0x15	; 21
     1ac:	90 62       	ori	r25, 0x20	; 32
     1ae:	95 bb       	out	0x15, r25	; 21
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
     1b0:	95 b3       	in	r25, 0x15	; 21
     1b2:	90 64       	ori	r25, 0x40	; 64
     1b4:	95 bb       	out	0x15, r25	; 21
	CLEAR_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);
     1b6:	95 b3       	in	r25, 0x15	; 21
     1b8:	9f 77       	andi	r25, 0x7F	; 127
     1ba:	95 bb       	out	0x15, r25	; 21
     1bc:	e1 ee       	ldi	r30, 0xE1	; 225
     1be:	f4 e0       	ldi	r31, 0x04	; 4
     1c0:	31 97       	sbiw	r30, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <Keypad_get_pressed_key+0xf6>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <Keypad_get_pressed_key+0xfc>
     1c6:	00 00       	nop

	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='+';}
     1c8:	c8 9b       	sbis	0x19, 0	; 25
     1ca:	07 c0       	rjmp	.+14     	; 0x1da <Keypad_get_pressed_key+0x110>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='-';}
     1cc:	c9 9b       	sbis	0x19, 1	; 25
     1ce:	07 c0       	rjmp	.+14     	; 0x1de <Keypad_get_pressed_key+0x114>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='*';}
     1d0:	ca 9b       	sbis	0x19, 2	; 25
     1d2:	07 c0       	rjmp	.+14     	; 0x1e2 <Keypad_get_pressed_key+0x118>
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='/';}
     1d4:	cb 9b       	sbis	0x19, 3	; 25
     1d6:	07 c0       	rjmp	.+14     	; 0x1e6 <Keypad_get_pressed_key+0x11c>
     1d8:	08 95       	ret
	SET_BIT(KEYPAD_PORT_OUT2,THIRD_COL);
	CLEAR_BIT(KEYPAD_PORT_OUT2,FOURTH_COL);

	_delay_ms(5);

	if(BIT_CLEARED(KEYPAD_PORT_IN,FIRST_ROW)){KeyPressed='+';}
     1da:	8b e2       	ldi	r24, 0x2B	; 43
     1dc:	08 95       	ret
	else if(BIT_CLEARED(KEYPAD_PORT_IN,SECOND_ROW)){KeyPressed='-';}
     1de:	8d e2       	ldi	r24, 0x2D	; 45
     1e0:	08 95       	ret
	else if(BIT_CLEARED(KEYPAD_PORT_IN,THIRD_ROW)){KeyPressed='*';}
     1e2:	8a e2       	ldi	r24, 0x2A	; 42
     1e4:	08 95       	ret
	else if(BIT_CLEARED(KEYPAD_PORT_IN,FOURTH_ROW)){KeyPressed='/';}
     1e6:	8f e2       	ldi	r24, 0x2F	; 47


return KeyPressed;
}
     1e8:	08 95       	ret

000001ea <LCD_Send_Command>:
/*Sending A command to the LCD */
void LCD_Send_Command(unsigned char command)
{


	LCD_CTRL_PORT &=~(1<<RS); // command mode
     1ea:	92 b3       	in	r25, 0x12	; 18
     1ec:	9f 7b       	andi	r25, 0xBF	; 191
     1ee:	92 bb       	out	0x12, r25	; 18
     1f0:	e9 ef       	ldi	r30, 0xF9	; 249
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	31 97       	sbiw	r30, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <LCD_Send_Command+0xa>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <LCD_Send_Command+0x10>
     1fa:	00 00       	nop
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
     1fc:	92 b3       	in	r25, 0x12	; 18
     1fe:	90 68       	ori	r25, 0x80	; 128
     200:	92 bb       	out	0x12, r25	; 18
     202:	e9 ef       	ldi	r30, 0xF9	; 249
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	31 97       	sbiw	r30, 0x01	; 1
     208:	f1 f7       	brne	.-4      	; 0x206 <LCD_Send_Command+0x1c>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <LCD_Send_Command+0x22>
     20c:	00 00       	nop
	_delay_ms(1);
	LCD_DATA_PORT =((command>>4)&0x0F);
     20e:	98 2f       	mov	r25, r24
     210:	92 95       	swap	r25
     212:	9f 70       	andi	r25, 0x0F	; 15
     214:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL_PORT &=~(1<<E);
     216:	92 b3       	in	r25, 0x12	; 18
     218:	9f 77       	andi	r25, 0x7F	; 127
     21a:	92 bb       	out	0x12, r25	; 18
     21c:	e9 ef       	ldi	r30, 0xF9	; 249
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	31 97       	sbiw	r30, 0x01	; 1
     222:	f1 f7       	brne	.-4      	; 0x220 <LCD_Send_Command+0x36>
     224:	00 c0       	rjmp	.+0      	; 0x226 <LCD_Send_Command+0x3c>
     226:	00 00       	nop
	_delay_ms(1);

	LCD_CTRL_PORT &=~(1<<RS); // command mode
     228:	92 b3       	in	r25, 0x12	; 18
     22a:	9f 7b       	andi	r25, 0xBF	; 191
     22c:	92 bb       	out	0x12, r25	; 18
	LCD_CTRL_PORT |=(1<<E);
     22e:	92 b3       	in	r25, 0x12	; 18
     230:	90 68       	ori	r25, 0x80	; 128
     232:	92 bb       	out	0x12, r25	; 18
     234:	e9 ef       	ldi	r30, 0xF9	; 249
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <LCD_Send_Command+0x4e>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <LCD_Send_Command+0x54>
     23e:	00 00       	nop
	_delay_ms(1);
	LCD_DATA_PORT =((command)&0x0F);
     240:	8f 70       	andi	r24, 0x0F	; 15
     242:	88 bb       	out	0x18, r24	; 24
	LCD_CTRL_PORT &=~(1<<E);
     244:	82 b3       	in	r24, 0x12	; 18
     246:	8f 77       	andi	r24, 0x7F	; 127
     248:	82 bb       	out	0x12, r24	; 18
     24a:	89 ef       	ldi	r24, 0xF9	; 249
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	01 97       	sbiw	r24, 0x01	; 1
     250:	f1 f7       	brne	.-4      	; 0x24e <LCD_Send_Command+0x64>
     252:	00 c0       	rjmp	.+0      	; 0x254 <LCD_Send_Command+0x6a>
     254:	00 00       	nop
     256:	08 95       	ret

00000258 <LCD_Init>:
 */
#include "LCD.h"
/*LCD initialization & clearing*/
void LCD_Init(void)
{
	LCD_CTRL_PORT_DIR |=(1<<E)|(1<<RS);
     258:	81 b3       	in	r24, 0x11	; 17
     25a:	80 6c       	ori	r24, 0xC0	; 192
     25c:	81 bb       	out	0x11, r24	; 17

	LCD_DATA_PORT_DIR=0x0F;
     25e:	8f e0       	ldi	r24, 0x0F	; 15
     260:	87 bb       	out	0x17, r24	; 23
	LCD_Send_Command(ReturnHome);
     262:	82 e0       	ldi	r24, 0x02	; 2
     264:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>
	LCD_Send_Command(_4BIT_2LINE);
     268:	88 e2       	ldi	r24, 0x28	; 40
     26a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>

	LCD_Send_Command(CLEAR_DISPLAY);
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>
	LCD_Send_Command(DISPLAY_ON_CURSOR_OFF);
     274:	8c e0       	ldi	r24, 0x0C	; 12
     276:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>
     27a:	08 95       	ret

0000027c <LCD_Clear_Display>:

}
/*LCD Clearing the display*/
void LCD_Clear_Display(void)
{
	LCD_Send_Command(CLEAR_DISPLAY);
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>
     282:	08 95       	ret

00000284 <LCD_Send_character>:
	LCD_CTRL_PORT &=~(1<<E);
	_delay_ms(1);

	/*LCD as 8bit mode*/
#elif LCD_BIT_MODE == 4
	LCD_CTRL_PORT |=(1<<RS); // Data mode
     284:	92 b3       	in	r25, 0x12	; 18
     286:	90 64       	ori	r25, 0x40	; 64
     288:	92 bb       	out	0x12, r25	; 18
     28a:	e9 ef       	ldi	r30, 0xF9	; 249
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	31 97       	sbiw	r30, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <LCD_Send_character+0xa>
     292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_Send_character+0x10>
     294:	00 00       	nop
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
     296:	92 b3       	in	r25, 0x12	; 18
     298:	90 68       	ori	r25, 0x80	; 128
     29a:	92 bb       	out	0x12, r25	; 18
     29c:	e9 ef       	ldi	r30, 0xF9	; 249
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	31 97       	sbiw	r30, 0x01	; 1
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <LCD_Send_character+0x1c>
     2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_Send_character+0x22>
     2a6:	00 00       	nop
	_delay_ms(1);
	LCD_DATA_PORT =((character>>4)& 0x0F);
     2a8:	98 2f       	mov	r25, r24
     2aa:	92 95       	swap	r25
     2ac:	9f 70       	andi	r25, 0x0F	; 15
     2ae:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL_PORT &=~(1<<E);
     2b0:	92 b3       	in	r25, 0x12	; 18
     2b2:	9f 77       	andi	r25, 0x7F	; 127
     2b4:	92 bb       	out	0x12, r25	; 18
     2b6:	e9 ef       	ldi	r30, 0xF9	; 249
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	31 97       	sbiw	r30, 0x01	; 1
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <LCD_Send_character+0x36>
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <LCD_Send_character+0x3c>
     2c0:	00 00       	nop
	_delay_ms(1);

	LCD_CTRL_PORT |=(1<<RS); // Data mode
     2c2:	92 b3       	in	r25, 0x12	; 18
     2c4:	90 64       	ori	r25, 0x40	; 64
     2c6:	92 bb       	out	0x12, r25	; 18
	LCD_CTRL_PORT |=(1<<E);
     2c8:	92 b3       	in	r25, 0x12	; 18
     2ca:	90 68       	ori	r25, 0x80	; 128
     2cc:	92 bb       	out	0x12, r25	; 18
     2ce:	e9 ef       	ldi	r30, 0xF9	; 249
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	31 97       	sbiw	r30, 0x01	; 1
     2d4:	f1 f7       	brne	.-4      	; 0x2d2 <LCD_Send_character+0x4e>
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <LCD_Send_character+0x54>
     2d8:	00 00       	nop
	_delay_ms(1);
	LCD_DATA_PORT =(character & 0x0F);
     2da:	8f 70       	andi	r24, 0x0F	; 15
     2dc:	88 bb       	out	0x18, r24	; 24
	LCD_CTRL_PORT &=~(1<<E);
     2de:	82 b3       	in	r24, 0x12	; 18
     2e0:	8f 77       	andi	r24, 0x7F	; 127
     2e2:	82 bb       	out	0x12, r24	; 18
     2e4:	89 ef       	ldi	r24, 0xF9	; 249
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LCD_Send_character+0x64>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LCD_Send_character+0x6a>
     2ee:	00 00       	nop
     2f0:	08 95       	ret

000002f2 <LCD_Send_String>:
#endif
}

/*LCD displaying a String*/
void LCD_Send_String(char *string)
{
     2f2:	0f 93       	push	r16
     2f4:	1f 93       	push	r17
     2f6:	cf 93       	push	r28
     2f8:	df 93       	push	r29
     2fa:	8c 01       	movw	r16, r24
	int i=0;
     2fc:	c0 e0       	ldi	r28, 0x00	; 0
     2fe:	d0 e0       	ldi	r29, 0x00	; 0
	while(string[i]!='\0')
     300:	03 c0       	rjmp	.+6      	; 0x308 <LCD_Send_String+0x16>
	{
		LCD_Send_character(string[i]);
     302:	0e 94 42 01 	call	0x284	; 0x284 <LCD_Send_character>
		i++;
     306:	21 96       	adiw	r28, 0x01	; 1

/*LCD displaying a String*/
void LCD_Send_String(char *string)
{
	int i=0;
	while(string[i]!='\0')
     308:	f8 01       	movw	r30, r16
     30a:	ec 0f       	add	r30, r28
     30c:	fd 1f       	adc	r31, r29
     30e:	80 81       	ld	r24, Z
     310:	81 11       	cpse	r24, r1
     312:	f7 cf       	rjmp	.-18     	; 0x302 <LCD_Send_String+0x10>
	{
		LCD_Send_character(string[i]);
		i++;
	}
}
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	1f 91       	pop	r17
     31a:	0f 91       	pop	r16
     31c:	08 95       	ret

0000031e <LCD_GoTO_Row_Column>:
/*set the cursor at certain location*/
void LCD_GoTO_Row_Column(char Row,char Column)
{
	unsigned char address=0;

	switch (Row)
     31e:	81 30       	cpi	r24, 0x01	; 1
     320:	39 f0       	breq	.+14     	; 0x330 <LCD_GoTO_Row_Column+0x12>
     322:	58 f0       	brcs	.+22     	; 0x33a <LCD_GoTO_Row_Column+0x1c>
     324:	82 30       	cpi	r24, 0x02	; 2
     326:	31 f0       	breq	.+12     	; 0x334 <LCD_GoTO_Row_Column+0x16>
     328:	83 30       	cpi	r24, 0x03	; 3
     32a:	31 f0       	breq	.+12     	; 0x338 <LCD_GoTO_Row_Column+0x1a>
}

/*set the cursor at certain location*/
void LCD_GoTO_Row_Column(char Row,char Column)
{
	unsigned char address=0;
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	05 c0       	rjmp	.+10     	; 0x33a <LCD_GoTO_Row_Column+0x1c>

	switch (Row)
	{
	case 0:address =(Column);break;
	case 1:address =(Column+0x40);break;
     330:	60 5c       	subi	r22, 0xC0	; 192
     332:	03 c0       	rjmp	.+6      	; 0x33a <LCD_GoTO_Row_Column+0x1c>
	case 2:address =(Column+0x10);break;
     334:	60 5f       	subi	r22, 0xF0	; 240
     336:	01 c0       	rjmp	.+2      	; 0x33a <LCD_GoTO_Row_Column+0x1c>
	case 3:address =(Column+0x50);break;
     338:	60 5b       	subi	r22, 0xB0	; 176
	}

	/* we need to apply the corresponding command 0b10000000+Address */
	LCD_Send_Command(address|(SET_CURSOR_LOCATION));
     33a:	86 2f       	mov	r24, r22
     33c:	80 68       	ori	r24, 0x80	; 128
     33e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_Send_Command>
     342:	08 95       	ret

00000344 <LCD_Send_String_Row_Column>:
}

/*lcd Send String at certain location*/
void LCD_Send_String_Row_Column(char Row,char Column,char *String)
{
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	ea 01       	movw	r28, r20
	LCD_GoTO_Row_Column(Row,Column);
     34a:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_GoTO_Row_Column>
	LCD_Send_String(String);
     34e:	ce 01       	movw	r24, r28
     350:	0e 94 79 01 	call	0x2f2	; 0x2f2 <LCD_Send_String>
}
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <LCD_IntToString>:
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     35a:	4a e0       	ldi	r20, 0x0A	; 10
     35c:	0e 94 49 12 	call	0x2492	; 0x2492 <__itoa_ncheck>
     360:	08 95       	ret

00000362 <menu_admin>:
		OCR1AH=0xff;  //  ocr1a ,  from data sheet, is top most value
		OCR1AL=0xff; //   ocr1a ,  from data sheet, is top most value
		// note: now frequency becomes 125000/(2^16)=1.907346 hz
		//that mean that output frqueny =1.907346 hz
		//speed of motor is slow
		CLEAR_BIT(DDRD,DDD5);
     362:	8c e6       	ldi	r24, 0x6C	; 108
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     36a:	89 e7       	ldi	r24, 0x79	; 121
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     372:	86 e8       	ldi	r24, 0x86	; 134
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     37a:	86 e9       	ldi	r24, 0x96	; 150
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     382:	87 ea       	ldi	r24, 0xA7	; 167
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     38a:	88 eb       	ldi	r24, 0xB8	; 184
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     392:	87 ec       	ldi	r24, 0xC7	; 199
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     39a:	8b ed       	ldi	r24, 0xDB	; 219
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     3a2:	08 95       	ret

000003a4 <menu_user>:
     3a4:	4b ee       	ldi	r20, 0xEB	; 235
     3a6:	50 e0       	ldi	r21, 0x00	; 0
     3a8:	60 e0       	ldi	r22, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     3b0:	42 ef       	ldi	r20, 0xF2	; 242
     3b2:	50 e0       	ldi	r21, 0x00	; 0
     3b4:	68 e0       	ldi	r22, 0x08	; 8
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     3bc:	47 ef       	ldi	r20, 0xF7	; 247
     3be:	50 e0       	ldi	r21, 0x00	; 0
     3c0:	60 e0       	ldi	r22, 0x00	; 0
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     3c8:	40 e0       	ldi	r20, 0x00	; 0
     3ca:	51 e0       	ldi	r21, 0x01	; 1
     3cc:	69 e0       	ldi	r22, 0x09	; 9
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     3d4:	08 95       	ret

000003d6 <gate_control>:
     3d6:	8f ef       	ldi	r24, 0xFF	; 255
     3d8:	87 bb       	out	0x17, r24	; 23
     3da:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
     3de:	47 e0       	ldi	r20, 0x07	; 7
     3e0:	51 e0       	ldi	r21, 0x01	; 1
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     3ea:	84 e1       	ldi	r24, 0x14	; 20
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     3f2:	88 b3       	in	r24, 0x18	; 24
     3f4:	ea e6       	ldi	r30, 0x6A	; 106
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	91 81       	ldd	r25, Z+1	; 0x01
     3fa:	8f 70       	andi	r24, 0x0F	; 15
     3fc:	89 2b       	or	r24, r25
     3fe:	88 bb       	out	0x18, r24	; 24
     400:	2f e3       	ldi	r18, 0x3F	; 63
     402:	82 e4       	ldi	r24, 0x42	; 66
     404:	9f e0       	ldi	r25, 0x0F	; 15
     406:	21 50       	subi	r18, 0x01	; 1
     408:	80 40       	sbci	r24, 0x00	; 0
     40a:	90 40       	sbci	r25, 0x00	; 0
     40c:	e1 f7       	brne	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     410:	00 00       	nop
     412:	88 b3       	in	r24, 0x18	; 24
     414:	90 81       	ld	r25, Z
     416:	8f 70       	andi	r24, 0x0F	; 15
     418:	89 2b       	or	r24, r25
     41a:	88 bb       	out	0x18, r24	; 24
     41c:	08 95       	ret

0000041e <names>:
     41e:	83 e3       	ldi	r24, 0x33	; 51
     420:	91 e0       	ldi	r25, 0x01	; 1
     422:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     426:	82 e4       	ldi	r24, 0x42	; 66
     428:	91 e0       	ldi	r25, 0x01	; 1
     42a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     42e:	08 95       	ret

00000430 <write_eeprom_pass_admin>:
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	8c 01       	movw	r16, r24
     438:	c0 e0       	ldi	r28, 0x00	; 0
     43a:	0a c0       	rjmp	.+20     	; 0x450 <write_eeprom_pass_admin+0x20>
     43c:	f8 01       	movw	r30, r16
     43e:	ec 0f       	add	r30, r28
     440:	f1 1d       	adc	r31, r1
     442:	66 e0       	ldi	r22, 0x06	; 6
     444:	6c 0f       	add	r22, r28
     446:	40 81       	ld	r20, Z
     448:	80 ea       	ldi	r24, 0xA0	; 160
     44a:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     44e:	cf 5f       	subi	r28, 0xFF	; 255
     450:	c4 30       	cpi	r28, 0x04	; 4
     452:	a0 f3       	brcs	.-24     	; 0x43c <write_eeprom_pass_admin+0xc>
     454:	cf 91       	pop	r28
     456:	1f 91       	pop	r17
     458:	0f 91       	pop	r16
     45a:	08 95       	ret

0000045c <write_eeprom_name_admin>:
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	8c 01       	movw	r16, r24
     464:	c0 e0       	ldi	r28, 0x00	; 0
     466:	06 c0       	rjmp	.+12     	; 0x474 <write_eeprom_name_admin+0x18>
     468:	62 e0       	ldi	r22, 0x02	; 2
     46a:	6c 0f       	add	r22, r28
     46c:	80 ea       	ldi	r24, 0xA0	; 160
     46e:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     472:	cf 5f       	subi	r28, 0xFF	; 255
     474:	f8 01       	movw	r30, r16
     476:	ec 0f       	add	r30, r28
     478:	f1 1d       	adc	r31, r1
     47a:	40 81       	ld	r20, Z
     47c:	41 11       	cpse	r20, r1
     47e:	f4 cf       	rjmp	.-24     	; 0x468 <write_eeprom_name_admin+0xc>
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <admin_init>:
     488:	82 e6       	ldi	r24, 0x62	; 98
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	0e 94 2e 02 	call	0x45c	; 0x45c <write_eeprom_name_admin>
     490:	86 e6       	ldi	r24, 0x66	; 102
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 18 02 	call	0x430	; 0x430 <write_eeprom_pass_admin>
     498:	08 95       	ret

0000049a <recieve_string>:
     49a:	ef 92       	push	r14
     49c:	ff 92       	push	r15
     49e:	0f 93       	push	r16
     4a0:	1f 93       	push	r17
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	1f 92       	push	r1
     4a8:	cd b7       	in	r28, 0x3d	; 61
     4aa:	de b7       	in	r29, 0x3e	; 62
     4ac:	7c 01       	movw	r14, r24
     4ae:	19 82       	std	Y+1, r1	; 0x01
     4b0:	00 e0       	ldi	r16, 0x00	; 0
     4b2:	10 e0       	ldi	r17, 0x00	; 0
     4b4:	13 c0       	rjmp	.+38     	; 0x4dc <recieve_string+0x42>
     4b6:	ce 01       	movw	r24, r28
     4b8:	01 96       	adiw	r24, 0x01	; 1
     4ba:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
     4be:	99 81       	ldd	r25, Y+1	; 0x01
     4c0:	9d 30       	cpi	r25, 0x0D	; 13
     4c2:	79 f0       	breq	.+30     	; 0x4e2 <recieve_string+0x48>
     4c4:	80 91 55 04 	lds	r24, 0x0455	; 0x800455 <name_length_count>
     4c8:	8f 5f       	subi	r24, 0xFF	; 255
     4ca:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <name_length_count>
     4ce:	f7 01       	movw	r30, r14
     4d0:	e0 0f       	add	r30, r16
     4d2:	f1 1f       	adc	r31, r17
     4d4:	90 83       	st	Z, r25
     4d6:	19 82       	std	Y+1, r1	; 0x01
     4d8:	0f 5f       	subi	r16, 0xFF	; 255
     4da:	1f 4f       	sbci	r17, 0xFF	; 255
     4dc:	04 30       	cpi	r16, 0x04	; 4
     4de:	11 05       	cpc	r17, r1
     4e0:	54 f3       	brlt	.-44     	; 0x4b6 <recieve_string+0x1c>
     4e2:	0f 90       	pop	r0
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	08 95       	ret

000004f2 <add_user>:
     4f2:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <count_users>
     4f6:	80 33       	cpi	r24, 0x30	; 48
     4f8:	09 f0       	breq	.+2      	; 0x4fc <add_user+0xa>
     4fa:	54 c0       	rjmp	.+168    	; 0x5a4 <add_user+0xb2>
     4fc:	80 e5       	ldi	r24, 0x50	; 80
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     504:	89 e8       	ldi	r24, 0x89	; 137
     506:	94 e0       	ldi	r25, 0x04	; 4
     508:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     50c:	0e c0       	rjmp	.+28     	; 0x52a <add_user+0x38>
     50e:	e6 2f       	mov	r30, r22
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	e7 57       	subi	r30, 0x77	; 119
     514:	fb 4f       	sbci	r31, 0xFB	; 251
     516:	66 5f       	subi	r22, 0xF6	; 246
     518:	40 81       	ld	r20, Z
     51a:	80 ea       	ldi	r24, 0xA0	; 160
     51c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     520:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     524:	8f 5f       	subi	r24, 0xFF	; 255
     526:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     52a:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     52e:	64 30       	cpi	r22, 0x04	; 4
     530:	70 f3       	brcs	.-36     	; 0x50e <add_user+0x1c>
     532:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     536:	89 e9       	ldi	r24, 0x99	; 153
     538:	92 e0       	ldi	r25, 0x02	; 2
     53a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     53e:	2f e5       	ldi	r18, 0x5F	; 95
     540:	8a ee       	ldi	r24, 0xEA	; 234
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	21 50       	subi	r18, 0x01	; 1
     546:	80 40       	sbci	r24, 0x00	; 0
     548:	90 40       	sbci	r25, 0x00	; 0
     54a:	e1 f7       	brne	.-8      	; 0x544 <add_user+0x52>
     54c:	00 c0       	rjmp	.+0      	; 0x54e <add_user+0x5c>
     54e:	00 00       	nop
     550:	85 e6       	ldi	r24, 0x65	; 101
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     558:	83 e6       	ldi	r24, 0x63	; 99
     55a:	94 e0       	ldi	r25, 0x04	; 4
     55c:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     560:	0e c0       	rjmp	.+28     	; 0x57e <add_user+0x8c>
     562:	e6 2f       	mov	r30, r22
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	ed 59       	subi	r30, 0x9D	; 157
     568:	fb 4f       	sbci	r31, 0xFB	; 251
     56a:	62 5f       	subi	r22, 0xF2	; 242
     56c:	40 81       	ld	r20, Z
     56e:	80 ea       	ldi	r24, 0xA0	; 160
     570:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     574:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     578:	8f 5f       	subi	r24, 0xFF	; 255
     57a:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     57e:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     582:	64 30       	cpi	r22, 0x04	; 4
     584:	70 f3       	brcs	.-36     	; 0x562 <add_user+0x70>
     586:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     58a:	81 e3       	ldi	r24, 0x31	; 49
     58c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
     590:	41 e3       	ldi	r20, 0x31	; 49
     592:	60 e0       	ldi	r22, 0x00	; 0
     594:	80 ea       	ldi	r24, 0xA0	; 160
     596:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     59a:	89 e9       	ldi	r24, 0x99	; 153
     59c:	92 e0       	ldi	r25, 0x02	; 2
     59e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     5a2:	08 95       	ret
     5a4:	81 33       	cpi	r24, 0x31	; 49
     5a6:	09 f0       	breq	.+2      	; 0x5aa <add_user+0xb8>
     5a8:	54 c0       	rjmp	.+168    	; 0x652 <add_user+0x160>
     5aa:	86 e8       	ldi	r24, 0x86	; 134
     5ac:	91 e0       	ldi	r25, 0x01	; 1
     5ae:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     5b2:	81 e9       	ldi	r24, 0x91	; 145
     5b4:	94 e0       	ldi	r25, 0x04	; 4
     5b6:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     5ba:	0e c0       	rjmp	.+28     	; 0x5d8 <add_user+0xe6>
     5bc:	e6 2f       	mov	r30, r22
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	ef 56       	subi	r30, 0x6F	; 111
     5c2:	fb 4f       	sbci	r31, 0xFB	; 251
     5c4:	6e 5e       	subi	r22, 0xEE	; 238
     5c6:	40 81       	ld	r20, Z
     5c8:	80 ea       	ldi	r24, 0xA0	; 160
     5ca:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     5ce:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     5d2:	8f 5f       	subi	r24, 0xFF	; 255
     5d4:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     5d8:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     5dc:	64 30       	cpi	r22, 0x04	; 4
     5de:	70 f3       	brcs	.-36     	; 0x5bc <add_user+0xca>
     5e0:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     5e4:	89 e9       	ldi	r24, 0x99	; 153
     5e6:	92 e0       	ldi	r25, 0x02	; 2
     5e8:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     5ec:	2f e5       	ldi	r18, 0x5F	; 95
     5ee:	8a ee       	ldi	r24, 0xEA	; 234
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	21 50       	subi	r18, 0x01	; 1
     5f4:	80 40       	sbci	r24, 0x00	; 0
     5f6:	90 40       	sbci	r25, 0x00	; 0
     5f8:	e1 f7       	brne	.-8      	; 0x5f2 <add_user+0x100>
     5fa:	00 c0       	rjmp	.+0      	; 0x5fc <add_user+0x10a>
     5fc:	00 00       	nop
     5fe:	8b e9       	ldi	r24, 0x9B	; 155
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     606:	80 e7       	ldi	r24, 0x70	; 112
     608:	94 e0       	ldi	r25, 0x04	; 4
     60a:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     60e:	0e c0       	rjmp	.+28     	; 0x62c <add_user+0x13a>
     610:	e6 2f       	mov	r30, r22
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	e0 59       	subi	r30, 0x90	; 144
     616:	fb 4f       	sbci	r31, 0xFB	; 251
     618:	6a 5e       	subi	r22, 0xEA	; 234
     61a:	40 81       	ld	r20, Z
     61c:	80 ea       	ldi	r24, 0xA0	; 160
     61e:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     622:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     626:	8f 5f       	subi	r24, 0xFF	; 255
     628:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     62c:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     630:	64 30       	cpi	r22, 0x04	; 4
     632:	70 f3       	brcs	.-36     	; 0x610 <add_user+0x11e>
     634:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     638:	82 e3       	ldi	r24, 0x32	; 50
     63a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
     63e:	42 e3       	ldi	r20, 0x32	; 50
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	80 ea       	ldi	r24, 0xA0	; 160
     644:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     648:	89 e9       	ldi	r24, 0x99	; 153
     64a:	92 e0       	ldi	r25, 0x02	; 2
     64c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     650:	08 95       	ret
     652:	82 33       	cpi	r24, 0x32	; 50
     654:	09 f0       	breq	.+2      	; 0x658 <add_user+0x166>
     656:	54 c0       	rjmp	.+168    	; 0x700 <add_user+0x20e>
     658:	8c eb       	ldi	r24, 0xBC	; 188
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     660:	88 e7       	ldi	r24, 0x78	; 120
     662:	94 e0       	ldi	r25, 0x04	; 4
     664:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     668:	0e c0       	rjmp	.+28     	; 0x686 <add_user+0x194>
     66a:	e6 2f       	mov	r30, r22
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	e8 58       	subi	r30, 0x88	; 136
     670:	fb 4f       	sbci	r31, 0xFB	; 251
     672:	66 5e       	subi	r22, 0xE6	; 230
     674:	40 81       	ld	r20, Z
     676:	80 ea       	ldi	r24, 0xA0	; 160
     678:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     67c:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     680:	8f 5f       	subi	r24, 0xFF	; 255
     682:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     686:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     68a:	64 30       	cpi	r22, 0x04	; 4
     68c:	70 f3       	brcs	.-36     	; 0x66a <add_user+0x178>
     68e:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     692:	89 e9       	ldi	r24, 0x99	; 153
     694:	92 e0       	ldi	r25, 0x02	; 2
     696:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     69a:	2f e5       	ldi	r18, 0x5F	; 95
     69c:	8a ee       	ldi	r24, 0xEA	; 234
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	21 50       	subi	r18, 0x01	; 1
     6a2:	80 40       	sbci	r24, 0x00	; 0
     6a4:	90 40       	sbci	r25, 0x00	; 0
     6a6:	e1 f7       	brne	.-8      	; 0x6a0 <add_user+0x1ae>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <add_user+0x1b8>
     6aa:	00 00       	nop
     6ac:	81 ed       	ldi	r24, 0xD1	; 209
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     6b4:	84 e7       	ldi	r24, 0x74	; 116
     6b6:	94 e0       	ldi	r25, 0x04	; 4
     6b8:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     6bc:	0e c0       	rjmp	.+28     	; 0x6da <add_user+0x1e8>
     6be:	e6 2f       	mov	r30, r22
     6c0:	f0 e0       	ldi	r31, 0x00	; 0
     6c2:	ec 58       	subi	r30, 0x8C	; 140
     6c4:	fb 4f       	sbci	r31, 0xFB	; 251
     6c6:	62 5e       	subi	r22, 0xE2	; 226
     6c8:	40 81       	ld	r20, Z
     6ca:	80 ea       	ldi	r24, 0xA0	; 160
     6cc:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     6d0:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <digit_1>
     6d4:	8f 5f       	subi	r24, 0xFF	; 255
     6d6:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <digit_1>
     6da:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <digit_1>
     6de:	64 30       	cpi	r22, 0x04	; 4
     6e0:	70 f3       	brcs	.-36     	; 0x6be <add_user+0x1cc>
     6e2:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <digit_1>
     6e6:	83 e3       	ldi	r24, 0x33	; 51
     6e8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
     6ec:	43 e3       	ldi	r20, 0x33	; 51
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	80 ea       	ldi	r24, 0xA0	; 160
     6f2:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     6f6:	89 e9       	ldi	r24, 0x99	; 153
     6f8:	92 e0       	ldi	r25, 0x02	; 2
     6fa:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     6fe:	08 95       	ret
     700:	82 ef       	ldi	r24, 0xF2	; 242
     702:	91 e0       	ldi	r25, 0x01	; 1
     704:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     708:	89 e9       	ldi	r24, 0x99	; 153
     70a:	92 e0       	ldi	r25, 0x02	; 2
     70c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     710:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <admin_state>
     714:	08 95       	ret

00000716 <array_compare>:
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	dc 01       	movw	r26, r24
     71c:	c0 e0       	ldi	r28, 0x00	; 0
     71e:	d0 e0       	ldi	r29, 0x00	; 0
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	0d c0       	rjmp	.+26     	; 0x740 <array_compare+0x2a>
     726:	fd 01       	movw	r30, r26
     728:	e2 0f       	add	r30, r18
     72a:	f3 1f       	adc	r31, r19
     72c:	40 81       	ld	r20, Z
     72e:	fb 01       	movw	r30, r22
     730:	e2 0f       	add	r30, r18
     732:	f3 1f       	adc	r31, r19
     734:	90 81       	ld	r25, Z
     736:	49 13       	cpse	r20, r25
     738:	01 c0       	rjmp	.+2      	; 0x73c <array_compare+0x26>
     73a:	21 96       	adiw	r28, 0x01	; 1
     73c:	2f 5f       	subi	r18, 0xFF	; 255
     73e:	3f 4f       	sbci	r19, 0xFF	; 255
     740:	24 30       	cpi	r18, 0x04	; 4
     742:	31 05       	cpc	r19, r1
     744:	84 f3       	brlt	.-32     	; 0x726 <array_compare+0x10>
     746:	24 97       	sbiw	r28, 0x04	; 4
     748:	19 f4       	brne	.+6      	; 0x750 <array_compare+0x3a>
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	02 c0       	rjmp	.+4      	; 0x754 <array_compare+0x3e>
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	08 95       	ret

0000075a <remove_user_menu>:
     75a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     75e:	81 50       	subi	r24, 0x01	; 1
     760:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     764:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <digit_2>
     768:	81 e1       	ldi	r24, 0x11	; 17
     76a:	92 e0       	ldi	r25, 0x02	; 2
     76c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     770:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <total_users>
     774:	41 50       	subi	r20, 0x01	; 1
     776:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     77a:	40 33       	cpi	r20, 0x30	; 48
     77c:	41 f4       	brne	.+16     	; 0x78e <remove_user_menu+0x34>
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	80 ea       	ldi	r24, 0xA0	; 160
     782:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     786:	8a e2       	ldi	r24, 0x2A	; 42
     788:	92 e0       	ldi	r25, 0x02	; 2
     78a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     78e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <total_users>
     792:	81 33       	cpi	r24, 0x31	; 49
     794:	61 f4       	brne	.+24     	; 0x7ae <remove_user_menu+0x54>
     796:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
     79a:	41 e3       	ldi	r20, 0x31	; 49
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	80 ea       	ldi	r24, 0xA0	; 160
     7a0:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     7a4:	81 e4       	ldi	r24, 0x41	; 65
     7a6:	92 e0       	ldi	r25, 0x02	; 2
     7a8:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     7ac:	08 95       	ret
     7ae:	82 33       	cpi	r24, 0x32	; 50
     7b0:	59 f4       	brne	.+22     	; 0x7c8 <remove_user_menu+0x6e>
     7b2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
     7b6:	42 e3       	ldi	r20, 0x32	; 50
     7b8:	60 e0       	ldi	r22, 0x00	; 0
     7ba:	80 ea       	ldi	r24, 0xA0	; 160
     7bc:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     7c0:	88 e5       	ldi	r24, 0x58	; 88
     7c2:	92 e0       	ldi	r25, 0x02	; 2
     7c4:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     7c8:	08 95       	ret

000007ca <remove_user>:
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	28 97       	sbiw	r28, 0x08	; 8
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <total_users>
     7e2:	80 33       	cpi	r24, 0x30	; 48
     7e4:	59 f4       	brne	.+22     	; 0x7fc <remove_user+0x32>
     7e6:	8f e6       	ldi	r24, 0x6F	; 111
     7e8:	92 e0       	ldi	r25, 0x02	; 2
     7ea:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     7ee:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <total_users>
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	80 ea       	ldi	r24, 0xA0	; 160
     7f6:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     7fa:	b7 c0       	rjmp	.+366    	; 0x96a <__stack+0x10b>
     7fc:	84 e8       	ldi	r24, 0x84	; 132
     7fe:	92 e0       	ldi	r25, 0x02	; 2
     800:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     804:	ce 01       	movw	r24, r28
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     80c:	88 e9       	ldi	r24, 0x98	; 152
     80e:	92 e0       	ldi	r25, 0x02	; 2
     810:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     814:	8a ea       	ldi	r24, 0xAA	; 170
     816:	92 e0       	ldi	r25, 0x02	; 2
     818:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     81c:	ce 01       	movw	r24, r28
     81e:	05 96       	adiw	r24, 0x05	; 5
     820:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
     824:	88 e9       	ldi	r24, 0x98	; 152
     826:	92 e0       	ldi	r25, 0x02	; 2
     828:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     82c:	be 01       	movw	r22, r28
     82e:	6f 5f       	subi	r22, 0xFF	; 255
     830:	7f 4f       	sbci	r23, 0xFF	; 255
     832:	89 e8       	ldi	r24, 0x89	; 137
     834:	94 e0       	ldi	r25, 0x04	; 4
     836:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	61 f5       	brne	.+88     	; 0x896 <__stack+0x37>
     83e:	be 01       	movw	r22, r28
     840:	6b 5f       	subi	r22, 0xFB	; 251
     842:	7f 4f       	sbci	r23, 0xFF	; 255
     844:	83 e6       	ldi	r24, 0x63	; 99
     846:	94 e0       	ldi	r25, 0x04	; 4
     848:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     84c:	01 97       	sbiw	r24, 0x01	; 1
     84e:	19 f5       	brne	.+70     	; 0x896 <__stack+0x37>
     850:	1b c0       	rjmp	.+54     	; 0x888 <__stack+0x29>
     852:	66 5f       	subi	r22, 0xF6	; 246
     854:	4f ef       	ldi	r20, 0xFF	; 255
     856:	80 ea       	ldi	r24, 0xA0	; 160
     858:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     85c:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     860:	62 5f       	subi	r22, 0xF2	; 242
     862:	4f ef       	ldi	r20, 0xFF	; 255
     864:	80 ea       	ldi	r24, 0xA0	; 160
     866:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     86a:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <digit_2>
     86e:	28 2f       	mov	r18, r24
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	f9 01       	movw	r30, r18
     874:	e7 57       	subi	r30, 0x77	; 119
     876:	fb 4f       	sbci	r31, 0xFB	; 251
     878:	10 82       	st	Z, r1
     87a:	f9 01       	movw	r30, r18
     87c:	ed 59       	subi	r30, 0x9D	; 157
     87e:	fb 4f       	sbci	r31, 0xFB	; 251
     880:	10 82       	st	Z, r1
     882:	8f 5f       	subi	r24, 0xFF	; 255
     884:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <digit_2>
     888:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     88c:	64 30       	cpi	r22, 0x04	; 4
     88e:	08 f3       	brcs	.-62     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     890:	0e 94 ad 03 	call	0x75a	; 0x75a <remove_user_menu>
     894:	6a c0       	rjmp	.+212    	; 0x96a <__stack+0x10b>
     896:	61 e9       	ldi	r22, 0x91	; 145
     898:	74 e0       	ldi	r23, 0x04	; 4
     89a:	ce 01       	movw	r24, r28
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	59 f5       	brne	.+86     	; 0x8fc <__stack+0x9d>
     8a6:	60 e7       	ldi	r22, 0x70	; 112
     8a8:	74 e0       	ldi	r23, 0x04	; 4
     8aa:	ce 01       	movw	r24, r28
     8ac:	05 96       	adiw	r24, 0x05	; 5
     8ae:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	19 f5       	brne	.+70     	; 0x8fc <__stack+0x9d>
     8b6:	1b c0       	rjmp	.+54     	; 0x8ee <__stack+0x8f>
     8b8:	6e 5e       	subi	r22, 0xEE	; 238
     8ba:	4f ef       	ldi	r20, 0xFF	; 255
     8bc:	80 ea       	ldi	r24, 0xA0	; 160
     8be:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     8c2:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     8c6:	6a 5e       	subi	r22, 0xEA	; 234
     8c8:	4f ef       	ldi	r20, 0xFF	; 255
     8ca:	80 ea       	ldi	r24, 0xA0	; 160
     8cc:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     8d0:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <digit_2>
     8d4:	28 2f       	mov	r18, r24
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	f9 01       	movw	r30, r18
     8da:	ef 56       	subi	r30, 0x6F	; 111
     8dc:	fb 4f       	sbci	r31, 0xFB	; 251
     8de:	10 82       	st	Z, r1
     8e0:	f9 01       	movw	r30, r18
     8e2:	e0 59       	subi	r30, 0x90	; 144
     8e4:	fb 4f       	sbci	r31, 0xFB	; 251
     8e6:	10 82       	st	Z, r1
     8e8:	8f 5f       	subi	r24, 0xFF	; 255
     8ea:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <digit_2>
     8ee:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     8f2:	64 30       	cpi	r22, 0x04	; 4
     8f4:	08 f3       	brcs	.-62     	; 0x8b8 <__stack+0x59>
     8f6:	0e 94 ad 03 	call	0x75a	; 0x75a <remove_user_menu>
     8fa:	37 c0       	rjmp	.+110    	; 0x96a <__stack+0x10b>
     8fc:	68 e7       	ldi	r22, 0x78	; 120
     8fe:	74 e0       	ldi	r23, 0x04	; 4
     900:	ce 01       	movw	r24, r28
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	59 f5       	brne	.+86     	; 0x962 <__stack+0x103>
     90c:	64 e7       	ldi	r22, 0x74	; 116
     90e:	74 e0       	ldi	r23, 0x04	; 4
     910:	ce 01       	movw	r24, r28
     912:	05 96       	adiw	r24, 0x05	; 5
     914:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
     918:	01 97       	sbiw	r24, 0x01	; 1
     91a:	19 f5       	brne	.+70     	; 0x962 <__stack+0x103>
     91c:	1b c0       	rjmp	.+54     	; 0x954 <__stack+0xf5>
     91e:	66 5e       	subi	r22, 0xE6	; 230
     920:	4f ef       	ldi	r20, 0xFF	; 255
     922:	80 ea       	ldi	r24, 0xA0	; 160
     924:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     928:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     92c:	62 5e       	subi	r22, 0xE2	; 226
     92e:	4f ef       	ldi	r20, 0xFF	; 255
     930:	80 ea       	ldi	r24, 0xA0	; 160
     932:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     936:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <digit_2>
     93a:	28 2f       	mov	r18, r24
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	f9 01       	movw	r30, r18
     940:	e8 58       	subi	r30, 0x88	; 136
     942:	fb 4f       	sbci	r31, 0xFB	; 251
     944:	10 82       	st	Z, r1
     946:	f9 01       	movw	r30, r18
     948:	ec 58       	subi	r30, 0x8C	; 140
     94a:	fb 4f       	sbci	r31, 0xFB	; 251
     94c:	10 82       	st	Z, r1
     94e:	8f 5f       	subi	r24, 0xFF	; 255
     950:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <digit_2>
     954:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <digit_2>
     958:	64 30       	cpi	r22, 0x04	; 4
     95a:	08 f3       	brcs	.-62     	; 0x91e <__stack+0xbf>
     95c:	0e 94 ad 03 	call	0x75a	; 0x75a <remove_user_menu>
     960:	04 c0       	rjmp	.+8      	; 0x96a <__stack+0x10b>
     962:	8f eb       	ldi	r24, 0xBF	; 191
     964:	92 e0       	ldi	r25, 0x02	; 2
     966:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
     96a:	28 96       	adiw	r28, 0x08	; 8
     96c:	0f b6       	in	r0, 0x3f	; 63
     96e:	f8 94       	cli
     970:	de bf       	out	0x3e, r29	; 62
     972:	0f be       	out	0x3f, r0	; 63
     974:	cd bf       	out	0x3d, r28	; 61
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	08 95       	ret

0000097c <control_leds_admin>:
     97c:	1f 93       	push	r17
     97e:	cf 93       	push	r28
     980:	df 93       	push	r29
     982:	1f 92       	push	r1
     984:	cd b7       	in	r28, 0x3d	; 61
     986:	de b7       	in	r29, 0x3e	; 62
     988:	18 2f       	mov	r17, r24
     98a:	19 82       	std	Y+1, r1	; 0x01
     98c:	84 b3       	in	r24, 0x14	; 20
     98e:	8c 60       	ori	r24, 0x0C	; 12
     990:	84 bb       	out	0x14, r24	; 20
     992:	81 b3       	in	r24, 0x11	; 17
     994:	8c 60       	ori	r24, 0x0C	; 12
     996:	81 bb       	out	0x11, r24	; 17
     998:	8a b3       	in	r24, 0x1a	; 26
     99a:	80 68       	ori	r24, 0x80	; 128
     99c:	8a bb       	out	0x1a, r24	; 26
     99e:	87 ea       	ldi	r24, 0xA7	; 167
     9a0:	91 e6       	ldi	r25, 0x61	; 97
     9a2:	01 97       	sbiw	r24, 0x01	; 1
     9a4:	f1 f7       	brne	.-4      	; 0x9a2 <control_leds_admin+0x26>
     9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <control_leds_admin+0x2c>
     9a8:	00 00       	nop
     9aa:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
     9ae:	41 2f       	mov	r20, r17
     9b0:	6f e3       	ldi	r22, 0x3F	; 63
     9b2:	80 ea       	ldi	r24, 0xA0	; 160
     9b4:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     9b8:	4f e3       	ldi	r20, 0x3F	; 63
     9ba:	60 ea       	ldi	r22, 0xA0	; 160
     9bc:	ce 01       	movw	r24, r28
     9be:	01 96       	adiw	r24, 0x01	; 1
     9c0:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
     9c4:	89 81       	ldd	r24, Y+1	; 0x01
     9c6:	83 33       	cpi	r24, 0x33	; 51
     9c8:	09 f4       	brne	.+2      	; 0x9cc <control_leds_admin+0x50>
     9ca:	5d c0       	rjmp	.+186    	; 0xa86 <control_leds_admin+0x10a>
     9cc:	28 f4       	brcc	.+10     	; 0x9d8 <control_leds_admin+0x5c>
     9ce:	81 33       	cpi	r24, 0x31	; 49
     9d0:	51 f0       	breq	.+20     	; 0x9e6 <control_leds_admin+0x6a>
     9d2:	82 33       	cpi	r24, 0x32	; 50
     9d4:	81 f1       	breq	.+96     	; 0xa36 <control_leds_admin+0xba>
     9d6:	d4 c0       	rjmp	.+424    	; 0xb80 <control_leds_admin+0x204>
     9d8:	84 33       	cpi	r24, 0x34	; 52
     9da:	09 f4       	brne	.+2      	; 0x9de <control_leds_admin+0x62>
     9dc:	7c c0       	rjmp	.+248    	; 0xad6 <control_leds_admin+0x15a>
     9de:	85 33       	cpi	r24, 0x35	; 53
     9e0:	09 f4       	brne	.+2      	; 0x9e4 <control_leds_admin+0x68>
     9e2:	a1 c0       	rjmp	.+322    	; 0xb26 <control_leds_admin+0x1aa>
     9e4:	cd c0       	rjmp	.+410    	; 0xb80 <control_leds_admin+0x204>
     9e6:	85 b3       	in	r24, 0x15	; 21
     9e8:	84 60       	ori	r24, 0x04	; 4
     9ea:	85 bb       	out	0x15, r24	; 21
     9ec:	85 b3       	in	r24, 0x15	; 21
     9ee:	87 7f       	andi	r24, 0xF7	; 247
     9f0:	85 bb       	out	0x15, r24	; 21
     9f2:	81 b3       	in	r24, 0x11	; 17
     9f4:	87 7f       	andi	r24, 0xF7	; 247
     9f6:	81 bb       	out	0x11, r24	; 17
     9f8:	81 b3       	in	r24, 0x11	; 17
     9fa:	8b 7f       	andi	r24, 0xFB	; 251
     9fc:	81 bb       	out	0x11, r24	; 17
     9fe:	8a b3       	in	r24, 0x1a	; 26
     a00:	8f 77       	andi	r24, 0x7F	; 127
     a02:	8a bb       	out	0x1a, r24	; 26
     a04:	85 b3       	in	r24, 0x15	; 21
     a06:	87 7f       	andi	r24, 0xF7	; 247
     a08:	85 bb       	out	0x15, r24	; 21
     a0a:	82 b3       	in	r24, 0x12	; 18
     a0c:	87 7f       	andi	r24, 0xF7	; 247
     a0e:	82 bb       	out	0x12, r24	; 18
     a10:	82 b3       	in	r24, 0x12	; 18
     a12:	8b 7f       	andi	r24, 0xFB	; 251
     a14:	82 bb       	out	0x12, r24	; 18
     a16:	8b b3       	in	r24, 0x1b	; 27
     a18:	8f 77       	andi	r24, 0x7F	; 127
     a1a:	8b bb       	out	0x1b, r24	; 27
     a1c:	87 ea       	ldi	r24, 0xA7	; 167
     a1e:	91 e6       	ldi	r25, 0x61	; 97
     a20:	01 97       	sbiw	r24, 0x01	; 1
     a22:	f1 f7       	brne	.-4      	; 0xa20 <control_leds_admin+0xa4>
     a24:	00 c0       	rjmp	.+0      	; 0xa26 <control_leds_admin+0xaa>
     a26:	00 00       	nop
     a28:	40 ed       	ldi	r20, 0xD0	; 208
     a2a:	52 e0       	ldi	r21, 0x02	; 2
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     a34:	a5 c0       	rjmp	.+330    	; 0xb80 <control_leds_admin+0x204>
     a36:	85 b3       	in	r24, 0x15	; 21
     a38:	88 60       	ori	r24, 0x08	; 8
     a3a:	85 bb       	out	0x15, r24	; 21
     a3c:	84 b3       	in	r24, 0x14	; 20
     a3e:	8b 7f       	andi	r24, 0xFB	; 251
     a40:	84 bb       	out	0x14, r24	; 20
     a42:	81 b3       	in	r24, 0x11	; 17
     a44:	87 7f       	andi	r24, 0xF7	; 247
     a46:	81 bb       	out	0x11, r24	; 17
     a48:	81 b3       	in	r24, 0x11	; 17
     a4a:	8b 7f       	andi	r24, 0xFB	; 251
     a4c:	81 bb       	out	0x11, r24	; 17
     a4e:	8a b3       	in	r24, 0x1a	; 26
     a50:	8f 77       	andi	r24, 0x7F	; 127
     a52:	8a bb       	out	0x1a, r24	; 26
     a54:	85 b3       	in	r24, 0x15	; 21
     a56:	8b 7f       	andi	r24, 0xFB	; 251
     a58:	85 bb       	out	0x15, r24	; 21
     a5a:	82 b3       	in	r24, 0x12	; 18
     a5c:	87 7f       	andi	r24, 0xF7	; 247
     a5e:	82 bb       	out	0x12, r24	; 18
     a60:	82 b3       	in	r24, 0x12	; 18
     a62:	8b 7f       	andi	r24, 0xFB	; 251
     a64:	82 bb       	out	0x12, r24	; 18
     a66:	8b b3       	in	r24, 0x1b	; 27
     a68:	8f 77       	andi	r24, 0x7F	; 127
     a6a:	8b bb       	out	0x1b, r24	; 27
     a6c:	87 ea       	ldi	r24, 0xA7	; 167
     a6e:	91 e6       	ldi	r25, 0x61	; 97
     a70:	01 97       	sbiw	r24, 0x01	; 1
     a72:	f1 f7       	brne	.-4      	; 0xa70 <control_leds_admin+0xf4>
     a74:	00 c0       	rjmp	.+0      	; 0xa76 <control_leds_admin+0xfa>
     a76:	00 00       	nop
     a78:	49 ed       	ldi	r20, 0xD9	; 217
     a7a:	52 e0       	ldi	r21, 0x02	; 2
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     a84:	7d c0       	rjmp	.+250    	; 0xb80 <control_leds_admin+0x204>
     a86:	82 b3       	in	r24, 0x12	; 18
     a88:	84 60       	ori	r24, 0x04	; 4
     a8a:	82 bb       	out	0x12, r24	; 18
     a8c:	84 b3       	in	r24, 0x14	; 20
     a8e:	87 7f       	andi	r24, 0xF7	; 247
     a90:	84 bb       	out	0x14, r24	; 20
     a92:	81 b3       	in	r24, 0x11	; 17
     a94:	87 7f       	andi	r24, 0xF7	; 247
     a96:	81 bb       	out	0x11, r24	; 17
     a98:	84 b3       	in	r24, 0x14	; 20
     a9a:	8b 7f       	andi	r24, 0xFB	; 251
     a9c:	84 bb       	out	0x14, r24	; 20
     a9e:	8a b3       	in	r24, 0x1a	; 26
     aa0:	8f 77       	andi	r24, 0x7F	; 127
     aa2:	8a bb       	out	0x1a, r24	; 26
     aa4:	85 b3       	in	r24, 0x15	; 21
     aa6:	87 7f       	andi	r24, 0xF7	; 247
     aa8:	85 bb       	out	0x15, r24	; 21
     aaa:	82 b3       	in	r24, 0x12	; 18
     aac:	87 7f       	andi	r24, 0xF7	; 247
     aae:	82 bb       	out	0x12, r24	; 18
     ab0:	85 b3       	in	r24, 0x15	; 21
     ab2:	8b 7f       	andi	r24, 0xFB	; 251
     ab4:	85 bb       	out	0x15, r24	; 21
     ab6:	8b b3       	in	r24, 0x1b	; 27
     ab8:	8f 77       	andi	r24, 0x7F	; 127
     aba:	8b bb       	out	0x1b, r24	; 27
     abc:	87 ea       	ldi	r24, 0xA7	; 167
     abe:	91 e6       	ldi	r25, 0x61	; 97
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <control_leds_admin+0x144>
     ac4:	00 c0       	rjmp	.+0      	; 0xac6 <control_leds_admin+0x14a>
     ac6:	00 00       	nop
     ac8:	42 ee       	ldi	r20, 0xE2	; 226
     aca:	52 e0       	ldi	r21, 0x02	; 2
     acc:	60 e0       	ldi	r22, 0x00	; 0
     ace:	80 e0       	ldi	r24, 0x00	; 0
     ad0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     ad4:	55 c0       	rjmp	.+170    	; 0xb80 <control_leds_admin+0x204>
     ad6:	82 b3       	in	r24, 0x12	; 18
     ad8:	88 60       	ori	r24, 0x08	; 8
     ada:	82 bb       	out	0x12, r24	; 18
     adc:	84 b3       	in	r24, 0x14	; 20
     ade:	87 7f       	andi	r24, 0xF7	; 247
     ae0:	84 bb       	out	0x14, r24	; 20
     ae2:	84 b3       	in	r24, 0x14	; 20
     ae4:	8b 7f       	andi	r24, 0xFB	; 251
     ae6:	84 bb       	out	0x14, r24	; 20
     ae8:	81 b3       	in	r24, 0x11	; 17
     aea:	8b 7f       	andi	r24, 0xFB	; 251
     aec:	81 bb       	out	0x11, r24	; 17
     aee:	8a b3       	in	r24, 0x1a	; 26
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	8a bb       	out	0x1a, r24	; 26
     af4:	85 b3       	in	r24, 0x15	; 21
     af6:	87 7f       	andi	r24, 0xF7	; 247
     af8:	85 bb       	out	0x15, r24	; 21
     afa:	85 b3       	in	r24, 0x15	; 21
     afc:	8b 7f       	andi	r24, 0xFB	; 251
     afe:	85 bb       	out	0x15, r24	; 21
     b00:	82 b3       	in	r24, 0x12	; 18
     b02:	8b 7f       	andi	r24, 0xFB	; 251
     b04:	82 bb       	out	0x12, r24	; 18
     b06:	8b b3       	in	r24, 0x1b	; 27
     b08:	8f 77       	andi	r24, 0x7F	; 127
     b0a:	8b bb       	out	0x1b, r24	; 27
     b0c:	87 ea       	ldi	r24, 0xA7	; 167
     b0e:	91 e6       	ldi	r25, 0x61	; 97
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	f1 f7       	brne	.-4      	; 0xb10 <control_leds_admin+0x194>
     b14:	00 c0       	rjmp	.+0      	; 0xb16 <control_leds_admin+0x19a>
     b16:	00 00       	nop
     b18:	4b ee       	ldi	r20, 0xEB	; 235
     b1a:	52 e0       	ldi	r21, 0x02	; 2
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     b24:	2d c0       	rjmp	.+90     	; 0xb80 <control_leds_admin+0x204>
     b26:	8b b3       	in	r24, 0x1b	; 27
     b28:	80 68       	ori	r24, 0x80	; 128
     b2a:	8b bb       	out	0x1b, r24	; 27
     b2c:	84 b3       	in	r24, 0x14	; 20
     b2e:	8b 7f       	andi	r24, 0xFB	; 251
     b30:	84 bb       	out	0x14, r24	; 20
     b32:	84 b3       	in	r24, 0x14	; 20
     b34:	87 7f       	andi	r24, 0xF7	; 247
     b36:	84 bb       	out	0x14, r24	; 20
     b38:	81 b3       	in	r24, 0x11	; 17
     b3a:	8b 7f       	andi	r24, 0xFB	; 251
     b3c:	81 bb       	out	0x11, r24	; 17
     b3e:	81 b3       	in	r24, 0x11	; 17
     b40:	87 7f       	andi	r24, 0xF7	; 247
     b42:	81 bb       	out	0x11, r24	; 17
     b44:	84 b3       	in	r24, 0x14	; 20
     b46:	8b 7f       	andi	r24, 0xFB	; 251
     b48:	84 bb       	out	0x14, r24	; 20
     b4a:	85 b3       	in	r24, 0x15	; 21
     b4c:	87 7f       	andi	r24, 0xF7	; 247
     b4e:	85 bb       	out	0x15, r24	; 21
     b50:	85 b3       	in	r24, 0x15	; 21
     b52:	8b 7f       	andi	r24, 0xFB	; 251
     b54:	85 bb       	out	0x15, r24	; 21
     b56:	82 b3       	in	r24, 0x12	; 18
     b58:	8b 7f       	andi	r24, 0xFB	; 251
     b5a:	82 bb       	out	0x12, r24	; 18
     b5c:	82 b3       	in	r24, 0x12	; 18
     b5e:	87 7f       	andi	r24, 0xF7	; 247
     b60:	82 bb       	out	0x12, r24	; 18
     b62:	85 b3       	in	r24, 0x15	; 21
     b64:	87 7f       	andi	r24, 0xF7	; 247
     b66:	85 bb       	out	0x15, r24	; 21
     b68:	87 ea       	ldi	r24, 0xA7	; 167
     b6a:	91 e6       	ldi	r25, 0x61	; 97
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	f1 f7       	brne	.-4      	; 0xb6c <control_leds_admin+0x1f0>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <control_leds_admin+0x1f6>
     b72:	00 00       	nop
     b74:	44 ef       	ldi	r20, 0xF4	; 244
     b76:	52 e0       	ldi	r21, 0x02	; 2
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     b80:	0f 90       	pop	r0
     b82:	df 91       	pop	r29
     b84:	cf 91       	pop	r28
     b86:	1f 91       	pop	r17
     b88:	08 95       	ret

00000b8a <control_leds_user>:
     b8a:	1f 93       	push	r17
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	1f 92       	push	r1
     b92:	cd b7       	in	r28, 0x3d	; 61
     b94:	de b7       	in	r29, 0x3e	; 62
     b96:	18 2f       	mov	r17, r24
     b98:	19 82       	std	Y+1, r1	; 0x01
     b9a:	84 b3       	in	r24, 0x14	; 20
     b9c:	8c 60       	ori	r24, 0x0C	; 12
     b9e:	84 bb       	out	0x14, r24	; 20
     ba0:	81 b3       	in	r24, 0x11	; 17
     ba2:	8c 60       	ori	r24, 0x0C	; 12
     ba4:	81 bb       	out	0x11, r24	; 17
     ba6:	8a b3       	in	r24, 0x1a	; 26
     ba8:	80 68       	ori	r24, 0x80	; 128
     baa:	8a bb       	out	0x1a, r24	; 26
     bac:	87 ea       	ldi	r24, 0xA7	; 167
     bae:	91 e6       	ldi	r25, 0x61	; 97
     bb0:	01 97       	sbiw	r24, 0x01	; 1
     bb2:	f1 f7       	brne	.-4      	; 0xbb0 <control_leds_user+0x26>
     bb4:	00 c0       	rjmp	.+0      	; 0xbb6 <control_leds_user+0x2c>
     bb6:	00 00       	nop
     bb8:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
     bbc:	41 2f       	mov	r20, r17
     bbe:	61 e4       	ldi	r22, 0x41	; 65
     bc0:	80 ea       	ldi	r24, 0xA0	; 160
     bc2:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
     bc6:	41 e4       	ldi	r20, 0x41	; 65
     bc8:	60 ea       	ldi	r22, 0xA0	; 160
     bca:	ce 01       	movw	r24, r28
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
     bd2:	89 81       	ldd	r24, Y+1	; 0x01
     bd4:	83 33       	cpi	r24, 0x33	; 51
     bd6:	09 f4       	brne	.+2      	; 0xbda <control_leds_user+0x50>
     bd8:	5d c0       	rjmp	.+186    	; 0xc94 <control_leds_user+0x10a>
     bda:	28 f4       	brcc	.+10     	; 0xbe6 <control_leds_user+0x5c>
     bdc:	81 33       	cpi	r24, 0x31	; 49
     bde:	51 f0       	breq	.+20     	; 0xbf4 <control_leds_user+0x6a>
     be0:	82 33       	cpi	r24, 0x32	; 50
     be2:	81 f1       	breq	.+96     	; 0xc44 <control_leds_user+0xba>
     be4:	d4 c0       	rjmp	.+424    	; 0xd8e <control_leds_user+0x204>
     be6:	84 33       	cpi	r24, 0x34	; 52
     be8:	09 f4       	brne	.+2      	; 0xbec <control_leds_user+0x62>
     bea:	7c c0       	rjmp	.+248    	; 0xce4 <control_leds_user+0x15a>
     bec:	85 33       	cpi	r24, 0x35	; 53
     bee:	09 f4       	brne	.+2      	; 0xbf2 <control_leds_user+0x68>
     bf0:	a1 c0       	rjmp	.+322    	; 0xd34 <control_leds_user+0x1aa>
     bf2:	cd c0       	rjmp	.+410    	; 0xd8e <control_leds_user+0x204>
     bf4:	85 b3       	in	r24, 0x15	; 21
     bf6:	84 60       	ori	r24, 0x04	; 4
     bf8:	85 bb       	out	0x15, r24	; 21
     bfa:	85 b3       	in	r24, 0x15	; 21
     bfc:	87 7f       	andi	r24, 0xF7	; 247
     bfe:	85 bb       	out	0x15, r24	; 21
     c00:	81 b3       	in	r24, 0x11	; 17
     c02:	87 7f       	andi	r24, 0xF7	; 247
     c04:	81 bb       	out	0x11, r24	; 17
     c06:	81 b3       	in	r24, 0x11	; 17
     c08:	8b 7f       	andi	r24, 0xFB	; 251
     c0a:	81 bb       	out	0x11, r24	; 17
     c0c:	8a b3       	in	r24, 0x1a	; 26
     c0e:	8f 77       	andi	r24, 0x7F	; 127
     c10:	8a bb       	out	0x1a, r24	; 26
     c12:	85 b3       	in	r24, 0x15	; 21
     c14:	87 7f       	andi	r24, 0xF7	; 247
     c16:	85 bb       	out	0x15, r24	; 21
     c18:	82 b3       	in	r24, 0x12	; 18
     c1a:	87 7f       	andi	r24, 0xF7	; 247
     c1c:	82 bb       	out	0x12, r24	; 18
     c1e:	82 b3       	in	r24, 0x12	; 18
     c20:	8b 7f       	andi	r24, 0xFB	; 251
     c22:	82 bb       	out	0x12, r24	; 18
     c24:	8b b3       	in	r24, 0x1b	; 27
     c26:	8f 77       	andi	r24, 0x7F	; 127
     c28:	8b bb       	out	0x1b, r24	; 27
     c2a:	87 ea       	ldi	r24, 0xA7	; 167
     c2c:	91 e6       	ldi	r25, 0x61	; 97
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	f1 f7       	brne	.-4      	; 0xc2e <control_leds_user+0xa4>
     c32:	00 c0       	rjmp	.+0      	; 0xc34 <control_leds_user+0xaa>
     c34:	00 00       	nop
     c36:	40 ed       	ldi	r20, 0xD0	; 208
     c38:	52 e0       	ldi	r21, 0x02	; 2
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     c42:	a5 c0       	rjmp	.+330    	; 0xd8e <control_leds_user+0x204>
     c44:	85 b3       	in	r24, 0x15	; 21
     c46:	88 60       	ori	r24, 0x08	; 8
     c48:	85 bb       	out	0x15, r24	; 21
     c4a:	84 b3       	in	r24, 0x14	; 20
     c4c:	8b 7f       	andi	r24, 0xFB	; 251
     c4e:	84 bb       	out	0x14, r24	; 20
     c50:	81 b3       	in	r24, 0x11	; 17
     c52:	87 7f       	andi	r24, 0xF7	; 247
     c54:	81 bb       	out	0x11, r24	; 17
     c56:	81 b3       	in	r24, 0x11	; 17
     c58:	8b 7f       	andi	r24, 0xFB	; 251
     c5a:	81 bb       	out	0x11, r24	; 17
     c5c:	8a b3       	in	r24, 0x1a	; 26
     c5e:	8f 77       	andi	r24, 0x7F	; 127
     c60:	8a bb       	out	0x1a, r24	; 26
     c62:	85 b3       	in	r24, 0x15	; 21
     c64:	8b 7f       	andi	r24, 0xFB	; 251
     c66:	85 bb       	out	0x15, r24	; 21
     c68:	82 b3       	in	r24, 0x12	; 18
     c6a:	87 7f       	andi	r24, 0xF7	; 247
     c6c:	82 bb       	out	0x12, r24	; 18
     c6e:	82 b3       	in	r24, 0x12	; 18
     c70:	8b 7f       	andi	r24, 0xFB	; 251
     c72:	82 bb       	out	0x12, r24	; 18
     c74:	8b b3       	in	r24, 0x1b	; 27
     c76:	8f 77       	andi	r24, 0x7F	; 127
     c78:	8b bb       	out	0x1b, r24	; 27
     c7a:	87 ea       	ldi	r24, 0xA7	; 167
     c7c:	91 e6       	ldi	r25, 0x61	; 97
     c7e:	01 97       	sbiw	r24, 0x01	; 1
     c80:	f1 f7       	brne	.-4      	; 0xc7e <control_leds_user+0xf4>
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <control_leds_user+0xfa>
     c84:	00 00       	nop
     c86:	49 ed       	ldi	r20, 0xD9	; 217
     c88:	52 e0       	ldi	r21, 0x02	; 2
     c8a:	60 e0       	ldi	r22, 0x00	; 0
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     c92:	7d c0       	rjmp	.+250    	; 0xd8e <control_leds_user+0x204>
     c94:	82 b3       	in	r24, 0x12	; 18
     c96:	84 60       	ori	r24, 0x04	; 4
     c98:	82 bb       	out	0x12, r24	; 18
     c9a:	84 b3       	in	r24, 0x14	; 20
     c9c:	87 7f       	andi	r24, 0xF7	; 247
     c9e:	84 bb       	out	0x14, r24	; 20
     ca0:	81 b3       	in	r24, 0x11	; 17
     ca2:	87 7f       	andi	r24, 0xF7	; 247
     ca4:	81 bb       	out	0x11, r24	; 17
     ca6:	84 b3       	in	r24, 0x14	; 20
     ca8:	8b 7f       	andi	r24, 0xFB	; 251
     caa:	84 bb       	out	0x14, r24	; 20
     cac:	8a b3       	in	r24, 0x1a	; 26
     cae:	8f 77       	andi	r24, 0x7F	; 127
     cb0:	8a bb       	out	0x1a, r24	; 26
     cb2:	85 b3       	in	r24, 0x15	; 21
     cb4:	87 7f       	andi	r24, 0xF7	; 247
     cb6:	85 bb       	out	0x15, r24	; 21
     cb8:	82 b3       	in	r24, 0x12	; 18
     cba:	87 7f       	andi	r24, 0xF7	; 247
     cbc:	82 bb       	out	0x12, r24	; 18
     cbe:	85 b3       	in	r24, 0x15	; 21
     cc0:	8b 7f       	andi	r24, 0xFB	; 251
     cc2:	85 bb       	out	0x15, r24	; 21
     cc4:	8b b3       	in	r24, 0x1b	; 27
     cc6:	8f 77       	andi	r24, 0x7F	; 127
     cc8:	8b bb       	out	0x1b, r24	; 27
     cca:	87 ea       	ldi	r24, 0xA7	; 167
     ccc:	91 e6       	ldi	r25, 0x61	; 97
     cce:	01 97       	sbiw	r24, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <control_leds_user+0x144>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <control_leds_user+0x14a>
     cd4:	00 00       	nop
     cd6:	42 ee       	ldi	r20, 0xE2	; 226
     cd8:	52 e0       	ldi	r21, 0x02	; 2
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     ce2:	55 c0       	rjmp	.+170    	; 0xd8e <control_leds_user+0x204>
     ce4:	82 b3       	in	r24, 0x12	; 18
     ce6:	88 60       	ori	r24, 0x08	; 8
     ce8:	82 bb       	out	0x12, r24	; 18
     cea:	84 b3       	in	r24, 0x14	; 20
     cec:	87 7f       	andi	r24, 0xF7	; 247
     cee:	84 bb       	out	0x14, r24	; 20
     cf0:	84 b3       	in	r24, 0x14	; 20
     cf2:	8b 7f       	andi	r24, 0xFB	; 251
     cf4:	84 bb       	out	0x14, r24	; 20
     cf6:	81 b3       	in	r24, 0x11	; 17
     cf8:	8b 7f       	andi	r24, 0xFB	; 251
     cfa:	81 bb       	out	0x11, r24	; 17
     cfc:	8a b3       	in	r24, 0x1a	; 26
     cfe:	8f 77       	andi	r24, 0x7F	; 127
     d00:	8a bb       	out	0x1a, r24	; 26
     d02:	85 b3       	in	r24, 0x15	; 21
     d04:	87 7f       	andi	r24, 0xF7	; 247
     d06:	85 bb       	out	0x15, r24	; 21
     d08:	85 b3       	in	r24, 0x15	; 21
     d0a:	8b 7f       	andi	r24, 0xFB	; 251
     d0c:	85 bb       	out	0x15, r24	; 21
     d0e:	82 b3       	in	r24, 0x12	; 18
     d10:	8b 7f       	andi	r24, 0xFB	; 251
     d12:	82 bb       	out	0x12, r24	; 18
     d14:	8b b3       	in	r24, 0x1b	; 27
     d16:	8f 77       	andi	r24, 0x7F	; 127
     d18:	8b bb       	out	0x1b, r24	; 27
     d1a:	87 ea       	ldi	r24, 0xA7	; 167
     d1c:	91 e6       	ldi	r25, 0x61	; 97
     d1e:	01 97       	sbiw	r24, 0x01	; 1
     d20:	f1 f7       	brne	.-4      	; 0xd1e <control_leds_user+0x194>
     d22:	00 c0       	rjmp	.+0      	; 0xd24 <control_leds_user+0x19a>
     d24:	00 00       	nop
     d26:	4b ee       	ldi	r20, 0xEB	; 235
     d28:	52 e0       	ldi	r21, 0x02	; 2
     d2a:	60 e0       	ldi	r22, 0x00	; 0
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     d32:	2d c0       	rjmp	.+90     	; 0xd8e <control_leds_user+0x204>
     d34:	8b b3       	in	r24, 0x1b	; 27
     d36:	80 68       	ori	r24, 0x80	; 128
     d38:	8b bb       	out	0x1b, r24	; 27
     d3a:	84 b3       	in	r24, 0x14	; 20
     d3c:	8b 7f       	andi	r24, 0xFB	; 251
     d3e:	84 bb       	out	0x14, r24	; 20
     d40:	84 b3       	in	r24, 0x14	; 20
     d42:	87 7f       	andi	r24, 0xF7	; 247
     d44:	84 bb       	out	0x14, r24	; 20
     d46:	81 b3       	in	r24, 0x11	; 17
     d48:	8b 7f       	andi	r24, 0xFB	; 251
     d4a:	81 bb       	out	0x11, r24	; 17
     d4c:	81 b3       	in	r24, 0x11	; 17
     d4e:	87 7f       	andi	r24, 0xF7	; 247
     d50:	81 bb       	out	0x11, r24	; 17
     d52:	84 b3       	in	r24, 0x14	; 20
     d54:	8b 7f       	andi	r24, 0xFB	; 251
     d56:	84 bb       	out	0x14, r24	; 20
     d58:	85 b3       	in	r24, 0x15	; 21
     d5a:	87 7f       	andi	r24, 0xF7	; 247
     d5c:	85 bb       	out	0x15, r24	; 21
     d5e:	85 b3       	in	r24, 0x15	; 21
     d60:	8b 7f       	andi	r24, 0xFB	; 251
     d62:	85 bb       	out	0x15, r24	; 21
     d64:	82 b3       	in	r24, 0x12	; 18
     d66:	8b 7f       	andi	r24, 0xFB	; 251
     d68:	82 bb       	out	0x12, r24	; 18
     d6a:	82 b3       	in	r24, 0x12	; 18
     d6c:	87 7f       	andi	r24, 0xF7	; 247
     d6e:	82 bb       	out	0x12, r24	; 18
     d70:	85 b3       	in	r24, 0x15	; 21
     d72:	87 7f       	andi	r24, 0xF7	; 247
     d74:	85 bb       	out	0x15, r24	; 21
     d76:	87 ea       	ldi	r24, 0xA7	; 167
     d78:	91 e6       	ldi	r25, 0x61	; 97
     d7a:	01 97       	sbiw	r24, 0x01	; 1
     d7c:	f1 f7       	brne	.-4      	; 0xd7a <control_leds_user+0x1f0>
     d7e:	00 c0       	rjmp	.+0      	; 0xd80 <control_leds_user+0x1f6>
     d80:	00 00       	nop
     d82:	44 ef       	ldi	r20, 0xF4	; 244
     d84:	52 e0       	ldi	r21, 0x02	; 2
     d86:	60 e0       	ldi	r22, 0x00	; 0
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
     d8e:	0f 90       	pop	r0
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	1f 91       	pop	r17
     d96:	08 95       	ret

00000d98 <read_data>:
     d98:	cf 92       	push	r12
     d9a:	df 92       	push	r13
     d9c:	ef 92       	push	r14
     d9e:	ff 92       	push	r15
     da0:	0f 93       	push	r16
     da2:	1f 93       	push	r17
     da4:	cf 93       	push	r28
     da6:	df 93       	push	r29
     da8:	1f 92       	push	r1
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
     dae:	6c 01       	movw	r12, r24
     db0:	7b 01       	movw	r14, r22
     db2:	04 2f       	mov	r16, r20
     db4:	19 82       	std	Y+1, r1	; 0x01
     db6:	10 e0       	ldi	r17, 0x00	; 0
     db8:	0e c0       	rjmp	.+28     	; 0xdd6 <read_data+0x3e>
     dba:	41 2f       	mov	r20, r17
     dbc:	40 0f       	add	r20, r16
     dbe:	60 ea       	ldi	r22, 0xA0	; 160
     dc0:	ce 01       	movw	r24, r28
     dc2:	01 96       	adiw	r24, 0x01	; 1
     dc4:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
     dc8:	f6 01       	movw	r30, r12
     dca:	e1 0f       	add	r30, r17
     dcc:	f1 1d       	adc	r31, r1
     dce:	89 81       	ldd	r24, Y+1	; 0x01
     dd0:	80 83       	st	Z, r24
     dd2:	1f 5f       	subi	r17, 0xFF	; 255
     dd4:	19 82       	std	Y+1, r1	; 0x01
     dd6:	14 30       	cpi	r17, 0x04	; 4
     dd8:	80 f3       	brcs	.-32     	; 0xdba <read_data+0x22>
     dda:	10 e0       	ldi	r17, 0x00	; 0
     ddc:	0e c0       	rjmp	.+28     	; 0xdfa <read_data+0x62>
     dde:	41 2f       	mov	r20, r17
     de0:	40 0f       	add	r20, r16
     de2:	60 ea       	ldi	r22, 0xA0	; 160
     de4:	ce 01       	movw	r24, r28
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
     dec:	f7 01       	movw	r30, r14
     dee:	e1 0f       	add	r30, r17
     df0:	f1 1d       	adc	r31, r1
     df2:	89 81       	ldd	r24, Y+1	; 0x01
     df4:	80 83       	st	Z, r24
     df6:	1f 5f       	subi	r17, 0xFF	; 255
     df8:	19 82       	std	Y+1, r1	; 0x01
     dfa:	14 30       	cpi	r17, 0x04	; 4
     dfc:	80 f3       	brcs	.-32     	; 0xdde <read_data+0x46>
     dfe:	0f 90       	pop	r0
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	1f 91       	pop	r17
     e06:	0f 91       	pop	r16
     e08:	ff 90       	pop	r15
     e0a:	ef 90       	pop	r14
     e0c:	df 90       	pop	r13
     e0e:	cf 90       	pop	r12
     e10:	08 95       	ret

00000e12 <user_cases>:
     e12:	10 92 57 04 	sts	0x0457, r1	; 0x800457 <i>
     e16:	21 c1       	rjmp	.+578    	; 0x105a <user_cases+0x248>
     e18:	83 2f       	mov	r24, r19
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	fc 01       	movw	r30, r24
     e1e:	e7 57       	subi	r30, 0x77	; 119
     e20:	fb 4f       	sbci	r31, 0xFB	; 251
     e22:	20 81       	ld	r18, Z
     e24:	2f 3f       	cpi	r18, 0xFF	; 255
     e26:	09 f1       	breq	.+66     	; 0xe6a <user_cases+0x58>
     e28:	fc 01       	movw	r30, r24
     e2a:	ed 59       	subi	r30, 0x9D	; 157
     e2c:	fb 4f       	sbci	r31, 0xFB	; 251
     e2e:	40 81       	ld	r20, Z
     e30:	4f 3f       	cpi	r20, 0xFF	; 255
     e32:	d9 f0       	breq	.+54     	; 0xe6a <user_cases+0x58>
     e34:	fc 01       	movw	r30, r24
     e36:	ef 56       	subi	r30, 0x6F	; 111
     e38:	fb 4f       	sbci	r31, 0xFB	; 251
     e3a:	40 81       	ld	r20, Z
     e3c:	4f 3f       	cpi	r20, 0xFF	; 255
     e3e:	a9 f0       	breq	.+42     	; 0xe6a <user_cases+0x58>
     e40:	fc 01       	movw	r30, r24
     e42:	e0 59       	subi	r30, 0x90	; 144
     e44:	fb 4f       	sbci	r31, 0xFB	; 251
     e46:	40 81       	ld	r20, Z
     e48:	4f 3f       	cpi	r20, 0xFF	; 255
     e4a:	79 f0       	breq	.+30     	; 0xe6a <user_cases+0x58>
     e4c:	fc 01       	movw	r30, r24
     e4e:	e8 58       	subi	r30, 0x88	; 136
     e50:	fb 4f       	sbci	r31, 0xFB	; 251
     e52:	40 81       	ld	r20, Z
     e54:	4f 3f       	cpi	r20, 0xFF	; 255
     e56:	49 f0       	breq	.+18     	; 0xe6a <user_cases+0x58>
     e58:	fc 01       	movw	r30, r24
     e5a:	ec 58       	subi	r30, 0x8C	; 140
     e5c:	fb 4f       	sbci	r31, 0xFB	; 251
     e5e:	40 81       	ld	r20, Z
     e60:	4f 3f       	cpi	r20, 0xFF	; 255
     e62:	19 f0       	breq	.+6      	; 0xe6a <user_cases+0x58>
     e64:	43 e3       	ldi	r20, 0x33	; 51
     e66:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     e6a:	2f 3f       	cpi	r18, 0xFF	; 255
     e6c:	09 f5       	brne	.+66     	; 0xeb0 <user_cases+0x9e>
     e6e:	fc 01       	movw	r30, r24
     e70:	ed 59       	subi	r30, 0x9D	; 157
     e72:	fb 4f       	sbci	r31, 0xFB	; 251
     e74:	40 81       	ld	r20, Z
     e76:	4f 3f       	cpi	r20, 0xFF	; 255
     e78:	d9 f4       	brne	.+54     	; 0xeb0 <user_cases+0x9e>
     e7a:	fc 01       	movw	r30, r24
     e7c:	ef 56       	subi	r30, 0x6F	; 111
     e7e:	fb 4f       	sbci	r31, 0xFB	; 251
     e80:	40 81       	ld	r20, Z
     e82:	4f 3f       	cpi	r20, 0xFF	; 255
     e84:	a9 f0       	breq	.+42     	; 0xeb0 <user_cases+0x9e>
     e86:	fc 01       	movw	r30, r24
     e88:	e0 59       	subi	r30, 0x90	; 144
     e8a:	fb 4f       	sbci	r31, 0xFB	; 251
     e8c:	40 81       	ld	r20, Z
     e8e:	4f 3f       	cpi	r20, 0xFF	; 255
     e90:	79 f0       	breq	.+30     	; 0xeb0 <user_cases+0x9e>
     e92:	fc 01       	movw	r30, r24
     e94:	e8 58       	subi	r30, 0x88	; 136
     e96:	fb 4f       	sbci	r31, 0xFB	; 251
     e98:	40 81       	ld	r20, Z
     e9a:	4f 3f       	cpi	r20, 0xFF	; 255
     e9c:	49 f0       	breq	.+18     	; 0xeb0 <user_cases+0x9e>
     e9e:	fc 01       	movw	r30, r24
     ea0:	ec 58       	subi	r30, 0x8C	; 140
     ea2:	fb 4f       	sbci	r31, 0xFB	; 251
     ea4:	40 81       	ld	r20, Z
     ea6:	4f 3f       	cpi	r20, 0xFF	; 255
     ea8:	19 f0       	breq	.+6      	; 0xeb0 <user_cases+0x9e>
     eaa:	42 e3       	ldi	r20, 0x32	; 50
     eac:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     eb0:	2f 3f       	cpi	r18, 0xFF	; 255
     eb2:	09 f1       	breq	.+66     	; 0xef6 <user_cases+0xe4>
     eb4:	fc 01       	movw	r30, r24
     eb6:	ed 59       	subi	r30, 0x9D	; 157
     eb8:	fb 4f       	sbci	r31, 0xFB	; 251
     eba:	40 81       	ld	r20, Z
     ebc:	4f 3f       	cpi	r20, 0xFF	; 255
     ebe:	d9 f0       	breq	.+54     	; 0xef6 <user_cases+0xe4>
     ec0:	fc 01       	movw	r30, r24
     ec2:	ef 56       	subi	r30, 0x6F	; 111
     ec4:	fb 4f       	sbci	r31, 0xFB	; 251
     ec6:	40 81       	ld	r20, Z
     ec8:	4f 3f       	cpi	r20, 0xFF	; 255
     eca:	a9 f4       	brne	.+42     	; 0xef6 <user_cases+0xe4>
     ecc:	fc 01       	movw	r30, r24
     ece:	e0 59       	subi	r30, 0x90	; 144
     ed0:	fb 4f       	sbci	r31, 0xFB	; 251
     ed2:	40 81       	ld	r20, Z
     ed4:	4f 3f       	cpi	r20, 0xFF	; 255
     ed6:	79 f4       	brne	.+30     	; 0xef6 <user_cases+0xe4>
     ed8:	fc 01       	movw	r30, r24
     eda:	e8 58       	subi	r30, 0x88	; 136
     edc:	fb 4f       	sbci	r31, 0xFB	; 251
     ede:	40 81       	ld	r20, Z
     ee0:	4f 3f       	cpi	r20, 0xFF	; 255
     ee2:	49 f0       	breq	.+18     	; 0xef6 <user_cases+0xe4>
     ee4:	fc 01       	movw	r30, r24
     ee6:	ec 58       	subi	r30, 0x8C	; 140
     ee8:	fb 4f       	sbci	r31, 0xFB	; 251
     eea:	40 81       	ld	r20, Z
     eec:	4f 3f       	cpi	r20, 0xFF	; 255
     eee:	19 f0       	breq	.+6      	; 0xef6 <user_cases+0xe4>
     ef0:	42 e3       	ldi	r20, 0x32	; 50
     ef2:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     ef6:	2f 3f       	cpi	r18, 0xFF	; 255
     ef8:	09 f5       	brne	.+66     	; 0xf3c <user_cases+0x12a>
     efa:	fc 01       	movw	r30, r24
     efc:	ed 59       	subi	r30, 0x9D	; 157
     efe:	fb 4f       	sbci	r31, 0xFB	; 251
     f00:	40 81       	ld	r20, Z
     f02:	4f 3f       	cpi	r20, 0xFF	; 255
     f04:	d9 f4       	brne	.+54     	; 0xf3c <user_cases+0x12a>
     f06:	fc 01       	movw	r30, r24
     f08:	ef 56       	subi	r30, 0x6F	; 111
     f0a:	fb 4f       	sbci	r31, 0xFB	; 251
     f0c:	40 81       	ld	r20, Z
     f0e:	4f 3f       	cpi	r20, 0xFF	; 255
     f10:	a9 f4       	brne	.+42     	; 0xf3c <user_cases+0x12a>
     f12:	fc 01       	movw	r30, r24
     f14:	e0 59       	subi	r30, 0x90	; 144
     f16:	fb 4f       	sbci	r31, 0xFB	; 251
     f18:	40 81       	ld	r20, Z
     f1a:	4f 3f       	cpi	r20, 0xFF	; 255
     f1c:	79 f4       	brne	.+30     	; 0xf3c <user_cases+0x12a>
     f1e:	fc 01       	movw	r30, r24
     f20:	e8 58       	subi	r30, 0x88	; 136
     f22:	fb 4f       	sbci	r31, 0xFB	; 251
     f24:	40 81       	ld	r20, Z
     f26:	4f 3f       	cpi	r20, 0xFF	; 255
     f28:	49 f0       	breq	.+18     	; 0xf3c <user_cases+0x12a>
     f2a:	fc 01       	movw	r30, r24
     f2c:	ec 58       	subi	r30, 0x8C	; 140
     f2e:	fb 4f       	sbci	r31, 0xFB	; 251
     f30:	40 81       	ld	r20, Z
     f32:	4f 3f       	cpi	r20, 0xFF	; 255
     f34:	19 f0       	breq	.+6      	; 0xf3c <user_cases+0x12a>
     f36:	41 e3       	ldi	r20, 0x31	; 49
     f38:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     f3c:	2f 3f       	cpi	r18, 0xFF	; 255
     f3e:	09 f1       	breq	.+66     	; 0xf82 <user_cases+0x170>
     f40:	fc 01       	movw	r30, r24
     f42:	ed 59       	subi	r30, 0x9D	; 157
     f44:	fb 4f       	sbci	r31, 0xFB	; 251
     f46:	40 81       	ld	r20, Z
     f48:	4f 3f       	cpi	r20, 0xFF	; 255
     f4a:	d9 f0       	breq	.+54     	; 0xf82 <user_cases+0x170>
     f4c:	fc 01       	movw	r30, r24
     f4e:	ef 56       	subi	r30, 0x6F	; 111
     f50:	fb 4f       	sbci	r31, 0xFB	; 251
     f52:	40 81       	ld	r20, Z
     f54:	4f 3f       	cpi	r20, 0xFF	; 255
     f56:	a9 f0       	breq	.+42     	; 0xf82 <user_cases+0x170>
     f58:	fc 01       	movw	r30, r24
     f5a:	e0 59       	subi	r30, 0x90	; 144
     f5c:	fb 4f       	sbci	r31, 0xFB	; 251
     f5e:	40 81       	ld	r20, Z
     f60:	4f 3f       	cpi	r20, 0xFF	; 255
     f62:	79 f0       	breq	.+30     	; 0xf82 <user_cases+0x170>
     f64:	fc 01       	movw	r30, r24
     f66:	e8 58       	subi	r30, 0x88	; 136
     f68:	fb 4f       	sbci	r31, 0xFB	; 251
     f6a:	40 81       	ld	r20, Z
     f6c:	4f 3f       	cpi	r20, 0xFF	; 255
     f6e:	49 f4       	brne	.+18     	; 0xf82 <user_cases+0x170>
     f70:	fc 01       	movw	r30, r24
     f72:	ec 58       	subi	r30, 0x8C	; 140
     f74:	fb 4f       	sbci	r31, 0xFB	; 251
     f76:	40 81       	ld	r20, Z
     f78:	4f 3f       	cpi	r20, 0xFF	; 255
     f7a:	19 f4       	brne	.+6      	; 0xf82 <user_cases+0x170>
     f7c:	42 e3       	ldi	r20, 0x32	; 50
     f7e:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     f82:	2f 3f       	cpi	r18, 0xFF	; 255
     f84:	09 f5       	brne	.+66     	; 0xfc8 <user_cases+0x1b6>
     f86:	fc 01       	movw	r30, r24
     f88:	ed 59       	subi	r30, 0x9D	; 157
     f8a:	fb 4f       	sbci	r31, 0xFB	; 251
     f8c:	40 81       	ld	r20, Z
     f8e:	4f 3f       	cpi	r20, 0xFF	; 255
     f90:	d9 f4       	brne	.+54     	; 0xfc8 <user_cases+0x1b6>
     f92:	fc 01       	movw	r30, r24
     f94:	ef 56       	subi	r30, 0x6F	; 111
     f96:	fb 4f       	sbci	r31, 0xFB	; 251
     f98:	40 81       	ld	r20, Z
     f9a:	4f 3f       	cpi	r20, 0xFF	; 255
     f9c:	a9 f0       	breq	.+42     	; 0xfc8 <user_cases+0x1b6>
     f9e:	fc 01       	movw	r30, r24
     fa0:	e0 59       	subi	r30, 0x90	; 144
     fa2:	fb 4f       	sbci	r31, 0xFB	; 251
     fa4:	40 81       	ld	r20, Z
     fa6:	4f 3f       	cpi	r20, 0xFF	; 255
     fa8:	79 f0       	breq	.+30     	; 0xfc8 <user_cases+0x1b6>
     faa:	fc 01       	movw	r30, r24
     fac:	e8 58       	subi	r30, 0x88	; 136
     fae:	fb 4f       	sbci	r31, 0xFB	; 251
     fb0:	40 81       	ld	r20, Z
     fb2:	4f 3f       	cpi	r20, 0xFF	; 255
     fb4:	49 f4       	brne	.+18     	; 0xfc8 <user_cases+0x1b6>
     fb6:	fc 01       	movw	r30, r24
     fb8:	ec 58       	subi	r30, 0x8C	; 140
     fba:	fb 4f       	sbci	r31, 0xFB	; 251
     fbc:	40 81       	ld	r20, Z
     fbe:	4f 3f       	cpi	r20, 0xFF	; 255
     fc0:	19 f4       	brne	.+6      	; 0xfc8 <user_cases+0x1b6>
     fc2:	41 e3       	ldi	r20, 0x31	; 49
     fc4:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
     fc8:	2f 3f       	cpi	r18, 0xFF	; 255
     fca:	09 f1       	breq	.+66     	; 0x100e <user_cases+0x1fc>
     fcc:	fc 01       	movw	r30, r24
     fce:	ed 59       	subi	r30, 0x9D	; 157
     fd0:	fb 4f       	sbci	r31, 0xFB	; 251
     fd2:	40 81       	ld	r20, Z
     fd4:	4f 3f       	cpi	r20, 0xFF	; 255
     fd6:	d9 f0       	breq	.+54     	; 0x100e <user_cases+0x1fc>
     fd8:	fc 01       	movw	r30, r24
     fda:	ef 56       	subi	r30, 0x6F	; 111
     fdc:	fb 4f       	sbci	r31, 0xFB	; 251
     fde:	40 81       	ld	r20, Z
     fe0:	4f 3f       	cpi	r20, 0xFF	; 255
     fe2:	a9 f4       	brne	.+42     	; 0x100e <user_cases+0x1fc>
     fe4:	fc 01       	movw	r30, r24
     fe6:	e0 59       	subi	r30, 0x90	; 144
     fe8:	fb 4f       	sbci	r31, 0xFB	; 251
     fea:	40 81       	ld	r20, Z
     fec:	4f 3f       	cpi	r20, 0xFF	; 255
     fee:	79 f4       	brne	.+30     	; 0x100e <user_cases+0x1fc>
     ff0:	fc 01       	movw	r30, r24
     ff2:	e8 58       	subi	r30, 0x88	; 136
     ff4:	fb 4f       	sbci	r31, 0xFB	; 251
     ff6:	40 81       	ld	r20, Z
     ff8:	4f 3f       	cpi	r20, 0xFF	; 255
     ffa:	49 f4       	brne	.+18     	; 0x100e <user_cases+0x1fc>
     ffc:	fc 01       	movw	r30, r24
     ffe:	ec 58       	subi	r30, 0x8C	; 140
    1000:	fb 4f       	sbci	r31, 0xFB	; 251
    1002:	40 81       	ld	r20, Z
    1004:	4f 3f       	cpi	r20, 0xFF	; 255
    1006:	19 f4       	brne	.+6      	; 0x100e <user_cases+0x1fc>
    1008:	41 e3       	ldi	r20, 0x31	; 49
    100a:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
    100e:	2f 3f       	cpi	r18, 0xFF	; 255
    1010:	09 f5       	brne	.+66     	; 0x1054 <user_cases+0x242>
    1012:	fc 01       	movw	r30, r24
    1014:	ed 59       	subi	r30, 0x9D	; 157
    1016:	fb 4f       	sbci	r31, 0xFB	; 251
    1018:	20 81       	ld	r18, Z
    101a:	2f 3f       	cpi	r18, 0xFF	; 255
    101c:	d9 f4       	brne	.+54     	; 0x1054 <user_cases+0x242>
    101e:	fc 01       	movw	r30, r24
    1020:	ef 56       	subi	r30, 0x6F	; 111
    1022:	fb 4f       	sbci	r31, 0xFB	; 251
    1024:	20 81       	ld	r18, Z
    1026:	2f 3f       	cpi	r18, 0xFF	; 255
    1028:	a9 f4       	brne	.+42     	; 0x1054 <user_cases+0x242>
    102a:	fc 01       	movw	r30, r24
    102c:	e0 59       	subi	r30, 0x90	; 144
    102e:	fb 4f       	sbci	r31, 0xFB	; 251
    1030:	20 81       	ld	r18, Z
    1032:	2f 3f       	cpi	r18, 0xFF	; 255
    1034:	79 f4       	brne	.+30     	; 0x1054 <user_cases+0x242>
    1036:	fc 01       	movw	r30, r24
    1038:	e8 58       	subi	r30, 0x88	; 136
    103a:	fb 4f       	sbci	r31, 0xFB	; 251
    103c:	20 81       	ld	r18, Z
    103e:	2f 3f       	cpi	r18, 0xFF	; 255
    1040:	49 f4       	brne	.+18     	; 0x1054 <user_cases+0x242>
    1042:	fc 01       	movw	r30, r24
    1044:	ec 58       	subi	r30, 0x8C	; 140
    1046:	fb 4f       	sbci	r31, 0xFB	; 251
    1048:	80 81       	ld	r24, Z
    104a:	8f 3f       	cpi	r24, 0xFF	; 255
    104c:	19 f4       	brne	.+6      	; 0x1054 <user_cases+0x242>
    104e:	80 e3       	ldi	r24, 0x30	; 48
    1050:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
    1054:	3f 5f       	subi	r19, 0xFF	; 255
    1056:	30 93 57 04 	sts	0x0457, r19	; 0x800457 <i>
    105a:	30 91 57 04 	lds	r19, 0x0457	; 0x800457 <i>
    105e:	34 30       	cpi	r19, 0x04	; 4
    1060:	08 f4       	brcc	.+2      	; 0x1064 <user_cases+0x252>
    1062:	da ce       	rjmp	.-588    	; 0xe18 <user_cases+0x6>
    1064:	08 95       	ret

00001066 <PWM_init>:
}
void PWM_init() {
    // Set Fast PWM mode with non-inverting output on pin OC1A (PD5)
    TCCR1A |= (1 << COM1A1) | (1 << WGM11) | (1 << WGM10);
    1066:	8f b5       	in	r24, 0x2f	; 47
    1068:	83 68       	ori	r24, 0x83	; 131
    106a:	8f bd       	out	0x2f, r24	; 47
    TCCR1B |= (1 << WGM12) | (1 << CS11); // Set prescaler to 8
    106c:	8e b5       	in	r24, 0x2e	; 46
    106e:	8a 60       	ori	r24, 0x0A	; 10
    1070:	8e bd       	out	0x2e, r24	; 46
    DDRD |= (1 << DDD5); // Set OC1A (PD5) pin as output
    1072:	81 b3       	in	r24, 0x11	; 17
    1074:	80 62       	ori	r24, 0x20	; 32
    1076:	81 bb       	out	0x11, r24	; 17
    CLEAR_BIT(DDRD,DDD4);
    1078:	81 b3       	in	r24, 0x11	; 17
    107a:	8f 7e       	andi	r24, 0xEF	; 239
    107c:	81 bb       	out	0x11, r24	; 17
    107e:	08 95       	ret

00001080 <duty_cycle_update>:
}
void duty_cycle_update(unsigned int duty_cycle)
{
	unsigned long ocrb=0;
	ocrb=(((duty_cycle*65536)/100)-1);
    1080:	a0 e0       	ldi	r26, 0x00	; 0
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	77 27       	eor	r23, r23
    1086:	66 27       	eor	r22, r22
    1088:	24 e6       	ldi	r18, 0x64	; 100
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	40 e0       	ldi	r20, 0x00	; 0
    108e:	50 e0       	ldi	r21, 0x00	; 0
    1090:	0e 94 2a 12 	call	0x2454	; 0x2454 <__divmodsi4>
    1094:	ba 01       	movw	r22, r20
    1096:	a9 01       	movw	r20, r18
    1098:	41 50       	subi	r20, 0x01	; 1
    109a:	51 09       	sbc	r21, r1
    109c:	61 09       	sbc	r22, r1
    109e:	71 09       	sbc	r23, r1
    OCR1BH=(ocrb>>8);
    10a0:	bb 27       	eor	r27, r27
    10a2:	a7 2f       	mov	r26, r23
    10a4:	96 2f       	mov	r25, r22
    10a6:	85 2f       	mov	r24, r21
    10a8:	89 bd       	out	0x29, r24	; 41
    OCR1BL=ocrb;
    10aa:	48 bd       	out	0x28, r20	; 40
    10ac:	08 95       	ret

000010ae <PWM_set_duty_cycle>:

}
void PWM_set_duty_cycle(uint16_t duty_cycle) {
    OCR1A = duty_cycle;
    10ae:	9b bd       	out	0x2b, r25	; 43
    10b0:	8a bd       	out	0x2a, r24	; 42
    10b2:	08 95       	ret

000010b4 <AC_Control>:
}
void AC_Control()
{
    10b4:	cf 92       	push	r12
    10b6:	df 92       	push	r13
    10b8:	ef 92       	push	r14
    10ba:	ff 92       	push	r15

	adcA = (int)(read_adc(5)*5.0)/1024.0;
    10bc:	85 e0       	ldi	r24, 0x05	; 5
    10be:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <read_adc>
    10c2:	bc 01       	movw	r22, r24
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__floatunsisf>
    10cc:	20 e0       	ldi	r18, 0x00	; 0
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	40 ea       	ldi	r20, 0xA0	; 160
    10d2:	50 e4       	ldi	r21, 0x40	; 64
    10d4:	0e 94 9b 11 	call	0x2336	; 0x2336 <__mulsf3>
    10d8:	0e 94 ae 10 	call	0x215c	; 0x215c <__fixsfsi>
    10dc:	07 2e       	mov	r0, r23
    10de:	00 0c       	add	r0, r0
    10e0:	88 0b       	sbc	r24, r24
    10e2:	99 0b       	sbc	r25, r25
    10e4:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__floatsisf>
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e8       	ldi	r20, 0x80	; 128
    10ee:	5a e3       	ldi	r21, 0x3A	; 58
    10f0:	0e 94 9b 11 	call	0x2336	; 0x2336 <__mulsf3>
    10f4:	60 93 4a 04 	sts	0x044A, r22	; 0x80044a <adcA>
    10f8:	70 93 4b 04 	sts	0x044B, r23	; 0x80044b <adcA+0x1>
    10fc:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <adcA+0x2>
    1100:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <adcA+0x3>
	temperature=adcA/0.01;
    1104:	2a e0       	ldi	r18, 0x0A	; 10
    1106:	37 ed       	ldi	r19, 0xD7	; 215
    1108:	43 e2       	ldi	r20, 0x23	; 35
    110a:	5c e3       	ldi	r21, 0x3C	; 60
    110c:	0e 94 3c 10 	call	0x2078	; 0x2078 <__divsf3>
    1110:	60 93 46 04 	sts	0x0446, r22	; 0x800446 <temperature>
    1114:	70 93 47 04 	sts	0x0447, r23	; 0x800447 <temperature+0x1>
    1118:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <temperature+0x2>
    111c:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <temperature+0x3>
	while(1)
	{
	LCD_IntToString((int) temperature,tempSTR);
    1120:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <temperature>
    1124:	70 91 47 04 	lds	r23, 0x0447	; 0x800447 <temperature+0x1>
    1128:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <temperature+0x2>
    112c:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <temperature+0x3>
    1130:	0e 94 ae 10 	call	0x215c	; 0x215c <__fixsfsi>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	69 e5       	ldi	r22, 0x59	; 89
    113a:	74 e0       	ldi	r23, 0x04	; 4
    113c:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_IntToString>
	LCD_Send_String_Row_Column(1,0,"Temperature");
    1140:	4d ef       	ldi	r20, 0xFD	; 253
    1142:	52 e0       	ldi	r21, 0x02	; 2
    1144:	60 e0       	ldi	r22, 0x00	; 0
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
	LCD_Send_String_Row_Column(1,13,tempSTR);
    114c:	49 e5       	ldi	r20, 0x59	; 89
    114e:	54 e0       	ldi	r21, 0x04	; 4
    1150:	6d e0       	ldi	r22, 0x0D	; 13
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
	if(temperature>28)
    1158:	c0 90 46 04 	lds	r12, 0x0446	; 0x800446 <temperature>
    115c:	d0 90 47 04 	lds	r13, 0x0447	; 0x800447 <temperature+0x1>
    1160:	e0 90 48 04 	lds	r14, 0x0448	; 0x800448 <temperature+0x2>
    1164:	f0 90 49 04 	lds	r15, 0x0449	; 0x800449 <temperature+0x3>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	40 ee       	ldi	r20, 0xE0	; 224
    116e:	51 e4       	ldi	r21, 0x41	; 65
    1170:	c7 01       	movw	r24, r14
    1172:	b6 01       	movw	r22, r12
    1174:	0e 94 96 11 	call	0x232c	; 0x232c <__gesf2>
    1178:	18 16       	cp	r1, r24
    117a:	0c f0       	brlt	.+2      	; 0x117e <AC_Control+0xca>
    117c:	42 c0       	rjmp	.+132    	; 0x1202 <AC_Control+0x14e>
	{

		//ON
		
		DDRD|=(1<<PD4);
    117e:	81 b3       	in	r24, 0x11	; 17
    1180:	80 61       	ori	r24, 0x10	; 16
    1182:	81 bb       	out	0x11, r24	; 17
		PORTD|=(1<<PD4);
    1184:	82 b3       	in	r24, 0x12	; 18
    1186:	80 61       	ori	r24, 0x10	; 16
    1188:	82 bb       	out	0x12, r24	; 18
		temperature--;
    118a:	20 e0       	ldi	r18, 0x00	; 0
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	40 e8       	ldi	r20, 0x80	; 128
    1190:	5f e3       	ldi	r21, 0x3F	; 63
    1192:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <temperature>
    1196:	70 91 47 04 	lds	r23, 0x0447	; 0x800447 <temperature+0x1>
    119a:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <temperature+0x2>
    119e:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <temperature+0x3>
    11a2:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__subsf3>
    11a6:	60 93 46 04 	sts	0x0446, r22	; 0x800446 <temperature>
    11aa:	70 93 47 04 	sts	0x0447, r23	; 0x800447 <temperature+0x1>
    11ae:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <temperature+0x2>
    11b2:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <temperature+0x3>
    11b6:	2f e9       	ldi	r18, 0x9F	; 159
    11b8:	86 e8       	ldi	r24, 0x86	; 134
    11ba:	91 e0       	ldi	r25, 0x01	; 1
    11bc:	21 50       	subi	r18, 0x01	; 1
    11be:	80 40       	sbci	r24, 0x00	; 0
    11c0:	90 40       	sbci	r25, 0x00	; 0
    11c2:	e1 f7       	brne	.-8      	; 0x11bc <AC_Control+0x108>
    11c4:	00 c0       	rjmp	.+0      	; 0x11c6 <AC_Control+0x112>
    11c6:	00 00       	nop
		_delay_ms(500);
		LCD_IntToString((int) temperature,tempSTR);
    11c8:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <temperature>
    11cc:	70 91 47 04 	lds	r23, 0x0447	; 0x800447 <temperature+0x1>
    11d0:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <temperature+0x2>
    11d4:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <temperature+0x3>
    11d8:	0e 94 ae 10 	call	0x215c	; 0x215c <__fixsfsi>
    11dc:	dc 01       	movw	r26, r24
    11de:	cb 01       	movw	r24, r22
    11e0:	69 e5       	ldi	r22, 0x59	; 89
    11e2:	74 e0       	ldi	r23, 0x04	; 4
    11e4:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_IntToString>
		LCD_Send_String_Row_Column(1,0,"Temperature");
    11e8:	4d ef       	ldi	r20, 0xFD	; 253
    11ea:	52 e0       	ldi	r21, 0x02	; 2
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		LCD_Send_String_Row_Column(1,13,tempSTR);
    11f4:	49 e5       	ldi	r20, 0x59	; 89
    11f6:	54 e0       	ldi	r21, 0x04	; 4
    11f8:	6d e0       	ldi	r22, 0x0D	; 13
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
    1200:	8f cf       	rjmp	.-226    	; 0x1120 <AC_Control+0x6c>
	}
	else if(temperature<21)
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	48 ea       	ldi	r20, 0xA8	; 168
    1208:	51 e4       	ldi	r21, 0x41	; 65
    120a:	c7 01       	movw	r24, r14
    120c:	b6 01       	movw	r22, r12
    120e:	0e 94 37 10 	call	0x206e	; 0x206e <__cmpsf2>
    1212:	88 23       	and	r24, r24
    1214:	d4 f4       	brge	.+52     	; 0x124a <AC_Control+0x196>
	{
		//OFF
		DDRD&=~(1<<PD4);
    1216:	81 b3       	in	r24, 0x11	; 17
    1218:	8f 7e       	andi	r24, 0xEF	; 239
    121a:	81 bb       	out	0x11, r24	; 17
		PORTD&=~(1<<PD4);
    121c:	82 b3       	in	r24, 0x12	; 18
    121e:	8f 7e       	andi	r24, 0xEF	; 239
    1220:	82 bb       	out	0x12, r24	; 18

		CLEAR_BIT(TCCR1A,WGM10);
    1222:	8f b5       	in	r24, 0x2f	; 47
    1224:	8e 7f       	andi	r24, 0xFE	; 254
    1226:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TCCR1A,WGM11);
    1228:	8f b5       	in	r24, 0x2f	; 47
    122a:	8d 7f       	andi	r24, 0xFD	; 253
    122c:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TCCR1B,WGM11);
    122e:	8e b5       	in	r24, 0x2e	; 46
    1230:	8d 7f       	andi	r24, 0xFD	; 253
    1232:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TCCR1B,WGM12);
    1234:	8e b5       	in	r24, 0x2e	; 46
    1236:	87 7f       	andi	r24, 0xF7	; 247
    1238:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TCCR1B,WGM13);
    123a:	8e b5       	in	r24, 0x2e	; 46
    123c:	8f 7e       	andi	r24, 0xEF	; 239
    123e:	8e bd       	out	0x2e, r24	; 46
		duty_cycle_update(0);
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	0e 94 40 08 	call	0x1080	; 0x1080 <duty_cycle_update>
		LCD_IntToString((int) temperature,tempSTR);
		LCD_Send_String_Row_Column(1,0,"Temperature");
		LCD_Send_String_Row_Column(1,13,tempSTR);
	}
	}
}
    1248:	42 c0       	rjmp	.+132    	; 0x12ce <AC_Control+0x21a>
		   break;
	}
	else
	{

		DDRD|=(1<<PD4);
    124a:	81 b3       	in	r24, 0x11	; 17
    124c:	80 61       	ori	r24, 0x10	; 16
    124e:	81 bb       	out	0x11, r24	; 17
		PORTD|=(1<<PD4);
    1250:	82 b3       	in	r24, 0x12	; 18
    1252:	80 61       	ori	r24, 0x10	; 16
    1254:	82 bb       	out	0x12, r24	; 18
		temperature--;
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	40 e8       	ldi	r20, 0x80	; 128
    125c:	5f e3       	ldi	r21, 0x3F	; 63
    125e:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <temperature>
    1262:	70 91 47 04 	lds	r23, 0x0447	; 0x800447 <temperature+0x1>
    1266:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <temperature+0x2>
    126a:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <temperature+0x3>
    126e:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__subsf3>
    1272:	60 93 46 04 	sts	0x0446, r22	; 0x800446 <temperature>
    1276:	70 93 47 04 	sts	0x0447, r23	; 0x800447 <temperature+0x1>
    127a:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <temperature+0x2>
    127e:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <temperature+0x3>
    1282:	2f e9       	ldi	r18, 0x9F	; 159
    1284:	86 e8       	ldi	r24, 0x86	; 134
    1286:	91 e0       	ldi	r25, 0x01	; 1
    1288:	21 50       	subi	r18, 0x01	; 1
    128a:	80 40       	sbci	r24, 0x00	; 0
    128c:	90 40       	sbci	r25, 0x00	; 0
    128e:	e1 f7       	brne	.-8      	; 0x1288 <AC_Control+0x1d4>
    1290:	00 c0       	rjmp	.+0      	; 0x1292 <AC_Control+0x1de>
    1292:	00 00       	nop
		_delay_ms(500);
		LCD_IntToString((int) temperature,tempSTR);
    1294:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <temperature>
    1298:	70 91 47 04 	lds	r23, 0x0447	; 0x800447 <temperature+0x1>
    129c:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <temperature+0x2>
    12a0:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <temperature+0x3>
    12a4:	0e 94 ae 10 	call	0x215c	; 0x215c <__fixsfsi>
    12a8:	dc 01       	movw	r26, r24
    12aa:	cb 01       	movw	r24, r22
    12ac:	69 e5       	ldi	r22, 0x59	; 89
    12ae:	74 e0       	ldi	r23, 0x04	; 4
    12b0:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_IntToString>
		LCD_Send_String_Row_Column(1,0,"Temperature");
    12b4:	4d ef       	ldi	r20, 0xFD	; 253
    12b6:	52 e0       	ldi	r21, 0x02	; 2
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		LCD_Send_String_Row_Column(1,13,tempSTR);
    12c0:	49 e5       	ldi	r20, 0x59	; 89
    12c2:	54 e0       	ldi	r21, 0x04	; 4
    12c4:	6d e0       	ldi	r22, 0x0D	; 13
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
    12cc:	29 cf       	rjmp	.-430    	; 0x1120 <AC_Control+0x6c>
	}
	}
}
    12ce:	ff 90       	pop	r15
    12d0:	ef 90       	pop	r14
    12d2:	df 90       	pop	r13
    12d4:	cf 90       	pop	r12
    12d6:	08 95       	ret

000012d8 <Dimmer_Control>:
void Dimmer_Control()
{PWM_init();
    12d8:	0e 94 33 08 	call	0x1066	; 0x1066 <PWM_init>
	LCD_Clear_Display();
    12dc:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
	if(admin_state==1)
    12e0:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    12e4:	81 30       	cpi	r24, 0x01	; 1
    12e6:	39 f4       	brne	.+14     	; 0x12f6 <Dimmer_Control+0x1e>
	{
		LCD_Send_String_Row_Column(0,0,"Dimmer On");
    12e8:	49 e0       	ldi	r20, 0x09	; 9
    12ea:	53 e0       	ldi	r21, 0x03	; 3
    12ec:	60 e0       	ldi	r22, 0x00	; 0
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
    12f4:	06 c0       	rjmp	.+12     	; 0x1302 <Dimmer_Control+0x2a>
	}
	else{
		LCD_Send_String_Row_Column(0,0,"Dimmer On");
    12f6:	49 e0       	ldi	r20, 0x09	; 9
    12f8:	53 e0       	ldi	r21, 0x03	; 3
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
	}
 	  while (1) {
        // Vary the brightness from 0 to 1023 and then back to 0
        for (brightness = 0; brightness < 1023; brightness++) {
    1302:	10 92 45 04 	sts	0x0445, r1	; 0x800445 <__data_end+0x1>
    1306:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <__data_end>
    130a:	11 c0       	rjmp	.+34     	; 0x132e <Dimmer_Control+0x56>
            PWM_set_duty_cycle(brightness);
    130c:	0e 94 57 08 	call	0x10ae	; 0x10ae <PWM_set_duty_cycle>
    1310:	81 ee       	ldi	r24, 0xE1	; 225
    1312:	94 e0       	ldi	r25, 0x04	; 4
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	f1 f7       	brne	.-4      	; 0x1314 <Dimmer_Control+0x3c>
    1318:	00 c0       	rjmp	.+0      	; 0x131a <Dimmer_Control+0x42>
    131a:	00 00       	nop
	else{
		LCD_Send_String_Row_Column(0,0,"Dimmer On");
	}
 	  while (1) {
        // Vary the brightness from 0 to 1023 and then back to 0
        for (brightness = 0; brightness < 1023; brightness++) {
    131c:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <__data_end>
    1320:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <__data_end+0x1>
    1324:	01 96       	adiw	r24, 0x01	; 1
    1326:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__data_end+0x1>
    132a:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <__data_end>
    132e:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <__data_end>
    1332:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <__data_end+0x1>
    1336:	8f 3f       	cpi	r24, 0xFF	; 255
    1338:	23 e0       	ldi	r18, 0x03	; 3
    133a:	92 07       	cpc	r25, r18
    133c:	3c f3       	brlt	.-50     	; 0x130c <Dimmer_Control+0x34>
            PWM_set_duty_cycle(brightness);
            _delay_ms(5); // Adjust the delay as needed for the desired brightness change speed
        }
        for (brightness = 1023; brightness > 0; brightness--) {
    133e:	8f ef       	ldi	r24, 0xFF	; 255
    1340:	93 e0       	ldi	r25, 0x03	; 3
    1342:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__data_end+0x1>
    1346:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <__data_end>
    134a:	11 c0       	rjmp	.+34     	; 0x136e <Dimmer_Control+0x96>
            PWM_set_duty_cycle(brightness);
    134c:	0e 94 57 08 	call	0x10ae	; 0x10ae <PWM_set_duty_cycle>
    1350:	81 ee       	ldi	r24, 0xE1	; 225
    1352:	94 e0       	ldi	r25, 0x04	; 4
    1354:	01 97       	sbiw	r24, 0x01	; 1
    1356:	f1 f7       	brne	.-4      	; 0x1354 <Dimmer_Control+0x7c>
    1358:	00 c0       	rjmp	.+0      	; 0x135a <Dimmer_Control+0x82>
    135a:	00 00       	nop
        // Vary the brightness from 0 to 1023 and then back to 0
        for (brightness = 0; brightness < 1023; brightness++) {
            PWM_set_duty_cycle(brightness);
            _delay_ms(5); // Adjust the delay as needed for the desired brightness change speed
        }
        for (brightness = 1023; brightness > 0; brightness--) {
    135c:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <__data_end>
    1360:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <__data_end+0x1>
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__data_end+0x1>
    136a:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <__data_end>
    136e:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <__data_end>
    1372:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <__data_end+0x1>
    1376:	18 16       	cp	r1, r24
    1378:	19 06       	cpc	r1, r25
    137a:	44 f3       	brlt	.-48     	; 0x134c <Dimmer_Control+0x74>
            PWM_set_duty_cycle(brightness);
            _delay_ms(5); // Adjust the delay as needed for the desired brightness change speed
        				}
    	CLEAR_BIT(DDRD,DDD5);
    137c:	81 b3       	in	r24, 0x11	; 17
    137e:	8f 7d       	andi	r24, 0xDF	; 223
    1380:	81 bb       	out	0x11, r24	; 17
    	LCD_Clear_Display();
    1382:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
    1386:	08 95       	ret

00001388 <buzzer>:
        	break;
		}
}
void buzzer()
{
	SET_BIT(DDRA,PA4);
    1388:	8a b3       	in	r24, 0x1a	; 26
    138a:	80 61       	ori	r24, 0x10	; 16
    138c:	8a bb       	out	0x1a, r24	; 26
	SET_BIT(PORTA,PA4);
    138e:	8b b3       	in	r24, 0x1b	; 27
    1390:	80 61       	ori	r24, 0x10	; 16
    1392:	8b bb       	out	0x1b, r24	; 27
    1394:	2f eb       	ldi	r18, 0xBF	; 191
    1396:	87 e2       	ldi	r24, 0x27	; 39
    1398:	99 e0       	ldi	r25, 0x09	; 9
    139a:	21 50       	subi	r18, 0x01	; 1
    139c:	80 40       	sbci	r24, 0x00	; 0
    139e:	90 40       	sbci	r25, 0x00	; 0
    13a0:	e1 f7       	brne	.-8      	; 0x139a <buzzer+0x12>
    13a2:	00 c0       	rjmp	.+0      	; 0x13a4 <buzzer+0x1c>
    13a4:	00 00       	nop
	_delay_ms(3000);
	//system shutdown
	CLEAR_BIT(PORTA,PA4);
    13a6:	8b b3       	in	r24, 0x1b	; 27
    13a8:	8f 7e       	andi	r24, 0xEF	; 239
    13aa:	8b bb       	out	0x1b, r24	; 27
    13ac:	08 95       	ret

000013ae <check>:
	}
}
}
}

void check(unsigned char* rec_name,unsigned char* rec_pass,unsigned char* checker,unsigned char name_add,unsigned char pass_add, unsigned char eeprom_device_address){
    13ae:	6f 92       	push	r6
    13b0:	7f 92       	push	r7
    13b2:	8f 92       	push	r8
    13b4:	9f 92       	push	r9
    13b6:	af 92       	push	r10
    13b8:	bf 92       	push	r11
    13ba:	cf 92       	push	r12
    13bc:	df 92       	push	r13
    13be:	ef 92       	push	r14
    13c0:	ff 92       	push	r15
    13c2:	0f 93       	push	r16
    13c4:	1f 93       	push	r17
    13c6:	cf 93       	push	r28
    13c8:	df 93       	push	r29
    13ca:	1f 92       	push	r1
    13cc:	cd b7       	in	r28, 0x3d	; 61
    13ce:	de b7       	in	r29, 0x3e	; 62
    13d0:	6c 01       	movw	r12, r24
    13d2:	5b 01       	movw	r10, r22
    13d4:	4a 01       	movw	r8, r20
    13d6:	f2 2e       	mov	r15, r18
    13d8:	70 2e       	mov	r7, r16
unsigned char data=0;
    13da:	19 82       	std	Y+1, r1	; 0x01
unsigned char digit=0;
unsigned char address=0;
unsigned char address_n=0;
unsigned char address_p=0;
unsigned char exist_name=0;
unsigned char exist_pass=0;
    13dc:	61 2c       	mov	r6, r1
unsigned char data=0;
unsigned char digit=0;
unsigned char address=0;
unsigned char address_n=0;
unsigned char address_p=0;
unsigned char exist_name=0;
    13de:	00 e0       	ldi	r16, 0x00	; 0
}
}

void check(unsigned char* rec_name,unsigned char* rec_pass,unsigned char* checker,unsigned char name_add,unsigned char pass_add, unsigned char eeprom_device_address){
unsigned char data=0;
unsigned char digit=0;
    13e0:	10 e0       	ldi	r17, 0x00	; 0
unsigned char address_p=0;
unsigned char exist_name=0;
unsigned char exist_pass=0;

address_n=name_add;
while(trial<3){
    13e2:	dd c0       	rjmp	.+442    	; 0x159e <check+0x1f0>
	uart_transmit_string("enter_name\r\n");
    13e4:	83 e1       	ldi	r24, 0x13	; 19
    13e6:	93 e0       	ldi	r25, 0x03	; 3
    13e8:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
	recieve_string(recieve_name);
    13ec:	8d e7       	ldi	r24, 0x7D	; 125
    13ee:	94 e0       	ldi	r25, 0x04	; 4
    13f0:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
    13f4:	2f e5       	ldi	r18, 0x5F	; 95
    13f6:	8a ee       	ldi	r24, 0xEA	; 234
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	21 50       	subi	r18, 0x01	; 1
    13fc:	80 40       	sbci	r24, 0x00	; 0
    13fe:	90 40       	sbci	r25, 0x00	; 0
    1400:	e1 f7       	brne	.-8      	; 0x13fa <check+0x4c>
    1402:	00 c0       	rjmp	.+0      	; 0x1404 <check+0x56>
    1404:	00 00       	nop
	_delay_ms(300);
	uart_transmit_string("--------------\r\n");
    1406:	89 e9       	ldi	r24, 0x99	; 153
    1408:	92 e0       	ldi	r25, 0x02	; 2
    140a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    140e:	ef e5       	ldi	r30, 0x5F	; 95
    1410:	fa ee       	ldi	r31, 0xEA	; 234
    1412:	20 e0       	ldi	r18, 0x00	; 0
    1414:	e1 50       	subi	r30, 0x01	; 1
    1416:	f0 40       	sbci	r31, 0x00	; 0
    1418:	20 40       	sbci	r18, 0x00	; 0
    141a:	e1 f7       	brne	.-8      	; 0x1414 <check+0x66>
    141c:	00 c0       	rjmp	.+0      	; 0x141e <check+0x70>
    141e:	00 00       	nop
	_delay_ms(300);
	uart_transmit_string("enter_pin_four_digit\r\n");
    1420:	80 e2       	ldi	r24, 0x20	; 32
    1422:	93 e0       	ldi	r25, 0x03	; 3
    1424:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
	recieve_string(recieve_pass);
    1428:	85 e8       	ldi	r24, 0x85	; 133
    142a:	94 e0       	ldi	r25, 0x04	; 4
    142c:	0e 94 4d 02 	call	0x49a	; 0x49a <recieve_string>
    1430:	8f e5       	ldi	r24, 0x5F	; 95
    1432:	9a ee       	ldi	r25, 0xEA	; 234
    1434:	e0 e0       	ldi	r30, 0x00	; 0
    1436:	81 50       	subi	r24, 0x01	; 1
    1438:	90 40       	sbci	r25, 0x00	; 0
    143a:	e0 40       	sbci	r30, 0x00	; 0
    143c:	e1 f7       	brne	.-8      	; 0x1436 <check+0x88>
    143e:	00 c0       	rjmp	.+0      	; 0x1440 <check+0x92>
    1440:	00 00       	nop
	_delay_ms(300);
	uart_transmit_string("--------------\r\n");
    1442:	89 e9       	ldi	r24, 0x99	; 153
    1444:	92 e0       	ldi	r25, 0x02	; 2
    1446:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    144a:	ff e5       	ldi	r31, 0x5F	; 95
    144c:	2a ee       	ldi	r18, 0xEA	; 234
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	f1 50       	subi	r31, 0x01	; 1
    1452:	20 40       	sbci	r18, 0x00	; 0
    1454:	80 40       	sbci	r24, 0x00	; 0
    1456:	e1 f7       	brne	.-8      	; 0x1450 <check+0xa2>
    1458:	00 c0       	rjmp	.+0      	; 0x145a <check+0xac>
    145a:	00 00       	nop
    145c:	10 c0       	rjmp	.+32     	; 0x147e <check+0xd0>
	_delay_ms(300);
while(digit<4){

    address=digit;
    read_fromEEPROM(&data,eeprom_device_address,(address+address_n));
    145e:	41 2f       	mov	r20, r17
    1460:	4f 0d       	add	r20, r15
    1462:	6e 2d       	mov	r22, r14
    1464:	ce 01       	movw	r24, r28
    1466:	01 96       	adiw	r24, 0x01	; 1
    1468:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
    if(data==rec_name[digit]){
    146c:	f6 01       	movw	r30, r12
    146e:	e1 0f       	add	r30, r17
    1470:	f1 1d       	adc	r31, r1
    1472:	90 81       	ld	r25, Z
    1474:	89 81       	ldd	r24, Y+1	; 0x01
    1476:	98 13       	cpse	r25, r24
    1478:	01 c0       	rjmp	.+2      	; 0x147c <check+0xce>
        exist_name++;
    147a:	0f 5f       	subi	r16, 0xFF	; 255
    }
    digit++;
    147c:	1f 5f       	subi	r17, 0xFF	; 255
	uart_transmit_string("enter_pin_four_digit\r\n");
	recieve_string(recieve_pass);
	_delay_ms(300);
	uart_transmit_string("--------------\r\n");
	_delay_ms(300);
while(digit<4){
    147e:	14 30       	cpi	r17, 0x04	; 4
    1480:	70 f3       	brcs	.-36     	; 0x145e <check+0xb0>
    1482:	10 e0       	ldi	r17, 0x00	; 0
    1484:	10 c0       	rjmp	.+32     	; 0x14a6 <check+0xf8>
address=0;
address_p=pass_add;
while(digit<4){

    address=digit;
read_fromEEPROM(&data,eeprom_device_address,(address+(address_p)));
    1486:	41 2f       	mov	r20, r17
    1488:	47 0d       	add	r20, r7
    148a:	6e 2d       	mov	r22, r14
    148c:	ce 01       	movw	r24, r28
    148e:	01 96       	adiw	r24, 0x01	; 1
    1490:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
    if(data==rec_pass[digit]){
    1494:	f5 01       	movw	r30, r10
    1496:	e1 0f       	add	r30, r17
    1498:	f1 1d       	adc	r31, r1
    149a:	90 81       	ld	r25, Z
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	98 13       	cpse	r25, r24
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <check+0xf6>
        exist_pass++;
    14a2:	63 94       	inc	r6
    }
    digit++;
    14a4:	1f 5f       	subi	r17, 0xFF	; 255
    digit++;
}
digit=0;
address=0;
address_p=pass_add;
while(digit<4){
    14a6:	14 30       	cpi	r17, 0x04	; 4
    14a8:	70 f3       	brcs	.-36     	; 0x1486 <check+0xd8>
    if(data==rec_pass[digit]){
        exist_pass++;
    }
    digit++;
}
if(exist_name==4&&exist_pass==4){
    14aa:	04 30       	cpi	r16, 0x04	; 4
    14ac:	b1 f4       	brne	.+44     	; 0x14da <check+0x12c>
    14ae:	94 e0       	ldi	r25, 0x04	; 4
    14b0:	69 12       	cpse	r6, r25
    14b2:	13 c0       	rjmp	.+38     	; 0x14da <check+0x12c>
    uart_transmit_string("Successful\r\n");
    14b4:	87 e3       	ldi	r24, 0x37	; 55
    14b6:	93 e0       	ldi	r25, 0x03	; 3
    14b8:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    *checker=1;
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	f4 01       	movw	r30, r8
    14c0:	80 83       	st	Z, r24
    14c2:	ff e3       	ldi	r31, 0x3F	; 63
    14c4:	2d e0       	ldi	r18, 0x0D	; 13
    14c6:	83 e0       	ldi	r24, 0x03	; 3
    14c8:	f1 50       	subi	r31, 0x01	; 1
    14ca:	20 40       	sbci	r18, 0x00	; 0
    14cc:	80 40       	sbci	r24, 0x00	; 0
    14ce:	e1 f7       	brne	.-8      	; 0x14c8 <check+0x11a>
    14d0:	00 c0       	rjmp	.+0      	; 0x14d2 <check+0x124>
    14d2:	00 00       	nop
    _delay_ms(1000);
    exist_name=0;
    exist_pass=0;
    digit=0;
    address=0;
    trial=0;
    14d4:	10 92 58 04 	sts	0x0458, r1	; 0x800458 <trial>
    break;
    14d8:	67 c0       	rjmp	.+206    	; 0x15a8 <check+0x1fa>
}
 if(exist_name!=4&&exist_pass==4){
    14da:	04 30       	cpi	r16, 0x04	; 4
    14dc:	f9 f0       	breq	.+62     	; 0x151c <check+0x16e>
    14de:	94 e0       	ldi	r25, 0x04	; 4
    14e0:	69 12       	cpse	r6, r25
    14e2:	1c c0       	rjmp	.+56     	; 0x151c <check+0x16e>
    uart_transmit_string("Invalid_Name\r\n");
    14e4:	84 e4       	ldi	r24, 0x44	; 68
    14e6:	93 e0       	ldi	r25, 0x03	; 3
    14e8:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
   uart_transmit_string("Please Enter Right Information\r\n");
    14ec:	83 e5       	ldi	r24, 0x53	; 83
    14ee:	93 e0       	ldi	r25, 0x03	; 3
    14f0:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    *checker=0;
    14f4:	f4 01       	movw	r30, r8
    14f6:	10 82       	st	Z, r1
    exist_name=0;
      exist_pass=0;
      digit=0;
      address=0;
      trial++;
    14f8:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <trial>
    14fc:	8f 5f       	subi	r24, 0xFF	; 255
    14fe:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <trial>
    1502:	ff e9       	ldi	r31, 0x9F	; 159
    1504:	26 e8       	ldi	r18, 0x86	; 134
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	f1 50       	subi	r31, 0x01	; 1
    150a:	20 40       	sbci	r18, 0x00	; 0
    150c:	80 40       	sbci	r24, 0x00	; 0
    150e:	e1 f7       	brne	.-8      	; 0x1508 <check+0x15a>
    1510:	00 c0       	rjmp	.+0      	; 0x1512 <check+0x164>
    1512:	00 00       	nop
 if(exist_name!=4&&exist_pass==4){
    uart_transmit_string("Invalid_Name\r\n");
   uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
      exist_pass=0;
    1514:	61 2c       	mov	r6, r1
}
 if(exist_name!=4&&exist_pass==4){
    uart_transmit_string("Invalid_Name\r\n");
   uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
    1516:	00 e0       	ldi	r16, 0x00	; 0
      exist_pass=0;
      digit=0;
    1518:	10 e0       	ldi	r17, 0x00	; 0
      address=0;
      trial++;
    _delay_ms(500);
    continue;
    151a:	41 c0       	rjmp	.+130    	; 0x159e <check+0x1f0>
}
if(exist_name==4&&exist_pass!=4){
    151c:	04 30       	cpi	r16, 0x04	; 4
    151e:	f9 f4       	brne	.+62     	; 0x155e <check+0x1b0>
    1520:	94 e0       	ldi	r25, 0x04	; 4
    1522:	69 16       	cp	r6, r25
    1524:	e1 f0       	breq	.+56     	; 0x155e <check+0x1b0>
    uart_transmit_string("Invalid_Pass\r\n");
    1526:	84 e7       	ldi	r24, 0x74	; 116
    1528:	93 e0       	ldi	r25, 0x03	; 3
    152a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    uart_transmit_string("Please Enter Right Information\r\n");
    152e:	83 e5       	ldi	r24, 0x53	; 83
    1530:	93 e0       	ldi	r25, 0x03	; 3
    1532:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    *checker=0;
    1536:	f4 01       	movw	r30, r8
    1538:	10 82       	st	Z, r1
    exist_name=0;
      exist_pass=0;
      digit=0;
      address=0;
      trial++;
    153a:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <trial>
    153e:	8f 5f       	subi	r24, 0xFF	; 255
    1540:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <trial>
    1544:	ff e9       	ldi	r31, 0x9F	; 159
    1546:	26 e8       	ldi	r18, 0x86	; 134
    1548:	81 e0       	ldi	r24, 0x01	; 1
    154a:	f1 50       	subi	r31, 0x01	; 1
    154c:	20 40       	sbci	r18, 0x00	; 0
    154e:	80 40       	sbci	r24, 0x00	; 0
    1550:	e1 f7       	brne	.-8      	; 0x154a <check+0x19c>
    1552:	00 c0       	rjmp	.+0      	; 0x1554 <check+0x1a6>
    1554:	00 00       	nop
if(exist_name==4&&exist_pass!=4){
    uart_transmit_string("Invalid_Pass\r\n");
    uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
      exist_pass=0;
    1556:	61 2c       	mov	r6, r1
}
if(exist_name==4&&exist_pass!=4){
    uart_transmit_string("Invalid_Pass\r\n");
    uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
    1558:	00 e0       	ldi	r16, 0x00	; 0
      exist_pass=0;
      digit=0;
    155a:	10 e0       	ldi	r17, 0x00	; 0
      address=0;
      trial++;
    _delay_ms(500);
    continue;
    155c:	20 c0       	rjmp	.+64     	; 0x159e <check+0x1f0>
}
if(exist_name!=4&&exist_pass!=4){
    155e:	04 30       	cpi	r16, 0x04	; 4
    1560:	f1 f0       	breq	.+60     	; 0x159e <check+0x1f0>
    1562:	94 e0       	ldi	r25, 0x04	; 4
    1564:	69 16       	cp	r6, r25
    1566:	d9 f0       	breq	.+54     	; 0x159e <check+0x1f0>
    uart_transmit_string("invlaid_name_and_pass\r\n");
    1568:	83 e8       	ldi	r24, 0x83	; 131
    156a:	93 e0       	ldi	r25, 0x03	; 3
    156c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    uart_transmit_string("Please Enter Right Information\r\n");
    1570:	83 e5       	ldi	r24, 0x53	; 83
    1572:	93 e0       	ldi	r25, 0x03	; 3
    1574:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
    *checker=0;
    1578:	f4 01       	movw	r30, r8
    157a:	10 82       	st	Z, r1
    exist_name=0;
      exist_pass=0;
      digit=0;
      address=0;
      trial++;
    157c:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <trial>
    1580:	8f 5f       	subi	r24, 0xFF	; 255
    1582:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <trial>
    1586:	ff e9       	ldi	r31, 0x9F	; 159
    1588:	26 e8       	ldi	r18, 0x86	; 134
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	f1 50       	subi	r31, 0x01	; 1
    158e:	20 40       	sbci	r18, 0x00	; 0
    1590:	80 40       	sbci	r24, 0x00	; 0
    1592:	e1 f7       	brne	.-8      	; 0x158c <check+0x1de>
    1594:	00 c0       	rjmp	.+0      	; 0x1596 <check+0x1e8>
    1596:	00 00       	nop
if(exist_name!=4&&exist_pass!=4){
    uart_transmit_string("invlaid_name_and_pass\r\n");
    uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
      exist_pass=0;
    1598:	61 2c       	mov	r6, r1
}
if(exist_name!=4&&exist_pass!=4){
    uart_transmit_string("invlaid_name_and_pass\r\n");
    uart_transmit_string("Please Enter Right Information\r\n");
    *checker=0;
    exist_name=0;
    159a:	00 e0       	ldi	r16, 0x00	; 0
      exist_pass=0;
      digit=0;
    159c:	10 e0       	ldi	r17, 0x00	; 0
unsigned char address_p=0;
unsigned char exist_name=0;
unsigned char exist_pass=0;

address_n=name_add;
while(trial<3){
    159e:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <trial>
    15a2:	83 30       	cpi	r24, 0x03	; 3
    15a4:	08 f4       	brcc	.+2      	; 0x15a8 <check+0x1fa>
    15a6:	1e cf       	rjmp	.-452    	; 0x13e4 <check+0x36>
      trial++;
    _delay_ms(500);
    continue;
}
}
if(trial>2){
    15a8:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <trial>
    15ac:	83 30       	cpi	r24, 0x03	; 3
    15ae:	40 f0       	brcs	.+16     	; 0x15c0 <check+0x212>
	uart_transmit_string("wait_5sec_for_buzzer\r\n");
    15b0:	8b e9       	ldi	r24, 0x9B	; 155
    15b2:	93 e0       	ldi	r25, 0x03	; 3
    15b4:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
	buzzer();
    15b8:	0e 94 c4 09 	call	0x1388	; 0x1388 <buzzer>
	trial=0;
    15bc:	10 92 58 04 	sts	0x0458, r1	; 0x800458 <trial>
}
}
    15c0:	0f 90       	pop	r0
    15c2:	df 91       	pop	r29
    15c4:	cf 91       	pop	r28
    15c6:	1f 91       	pop	r17
    15c8:	0f 91       	pop	r16
    15ca:	ff 90       	pop	r15
    15cc:	ef 90       	pop	r14
    15ce:	df 90       	pop	r13
    15d0:	cf 90       	pop	r12
    15d2:	bf 90       	pop	r11
    15d4:	af 90       	pop	r10
    15d6:	9f 90       	pop	r9
    15d8:	8f 90       	pop	r8
    15da:	7f 90       	pop	r7
    15dc:	6f 90       	pop	r6
    15de:	08 95       	ret

000015e0 <user_menu_data>:
	else
	{}
}
void user_menu_data()

{admin_state=0;
    15e0:	0f 93       	push	r16
    15e2:	1f 93       	push	r17
    15e4:	cf 93       	push	r28
    15e6:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <admin_state>
	int counter=0;
    15ea:	00 e0       	ldi	r16, 0x00	; 0
    15ec:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char position=0;
	while(counter<3)
    15ee:	83 c2       	rjmp	.+1286   	; 0x1af6 <user_menu_data+0x516>
	{key=key_not_pressed;
    15f0:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
	LCD_Clear_Display();
    15f4:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
		LCD_Send_String_Row_Column(0,0,"enter_name");
    15f8:	42 eb       	ldi	r20, 0xB2	; 178
    15fa:	53 e0       	ldi	r21, 0x03	; 3
    15fc:	60 e0       	ldi	r22, 0x00	; 0
    15fe:	80 e0       	ldi	r24, 0x00	; 0
    1600:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		for(position=0;position<4;position++){
    1604:	c0 e0       	ldi	r28, 0x00	; 0
    1606:	23 c0       	rjmp	.+70     	; 0x164e <user_menu_data+0x6e>
			key=key_not_pressed;
    1608:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
			do{
				key=Keypad_get_pressed_key();
    160c:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1610:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
    1614:	2f e5       	ldi	r18, 0x5F	; 95
    1616:	8a ee       	ldi	r24, 0xEA	; 234
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	21 50       	subi	r18, 0x01	; 1
    161c:	80 40       	sbci	r24, 0x00	; 0
    161e:	90 40       	sbci	r25, 0x00	; 0
    1620:	e1 f7       	brne	.-8      	; 0x161a <user_menu_data+0x3a>
    1622:	00 c0       	rjmp	.+0      	; 0x1624 <user_menu_data+0x44>
    1624:	00 00       	nop
				_delay_ms(300);
				user_mode_name[position]=key;
    1626:	ec 2f       	mov	r30, r28
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	e4 59       	subi	r30, 0x94	; 148
    162c:	fb 4f       	sbci	r31, 0xFB	; 251
    162e:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1632:	80 83       	st	Z, r24
				LCD_GoTO_Row_Column(1,position);
    1634:	6c 2f       	mov	r22, r28
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_GoTO_Row_Column>
				LCD_Send_character(key);
    163c:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1640:	0e 94 42 01 	call	0x284	; 0x284 <LCD_Send_character>

			}while(key==key_not_pressed);
    1644:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1648:	88 23       	and	r24, r24
    164a:	01 f3       	breq	.-64     	; 0x160c <user_menu_data+0x2c>
	unsigned char position=0;
	while(counter<3)
	{key=key_not_pressed;
	LCD_Clear_Display();
		LCD_Send_String_Row_Column(0,0,"enter_name");
		for(position=0;position<4;position++){
    164c:	cf 5f       	subi	r28, 0xFF	; 255
    164e:	c4 30       	cpi	r28, 0x04	; 4
    1650:	d8 f2       	brcs	.-74     	; 0x1608 <user_menu_data+0x28>
    1652:	2f e3       	ldi	r18, 0x3F	; 63
    1654:	8d e0       	ldi	r24, 0x0D	; 13
    1656:	93 e0       	ldi	r25, 0x03	; 3
    1658:	21 50       	subi	r18, 0x01	; 1
    165a:	80 40       	sbci	r24, 0x00	; 0
    165c:	90 40       	sbci	r25, 0x00	; 0
    165e:	e1 f7       	brne	.-8      	; 0x1658 <user_menu_data+0x78>
    1660:	00 c0       	rjmp	.+0      	; 0x1662 <user_menu_data+0x82>
    1662:	00 00       	nop
				LCD_Send_character(key);

			}while(key==key_not_pressed);
		}
		_delay_ms(1000);
		LCD_Clear_Display();
    1664:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
		key=key_not_pressed;
    1668:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
    166c:	2f e5       	ldi	r18, 0x5F	; 95
    166e:	8a ee       	ldi	r24, 0xEA	; 234
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	21 50       	subi	r18, 0x01	; 1
    1674:	80 40       	sbci	r24, 0x00	; 0
    1676:	90 40       	sbci	r25, 0x00	; 0
    1678:	e1 f7       	brne	.-8      	; 0x1672 <user_menu_data+0x92>
    167a:	00 c0       	rjmp	.+0      	; 0x167c <user_menu_data+0x9c>
    167c:	00 00       	nop
	_delay_ms(300);
	LCD_Send_String_Row_Column(0,0,"enter_pin_4_num");
    167e:	4d eb       	ldi	r20, 0xBD	; 189
    1680:	53 e0       	ldi	r21, 0x03	; 3
    1682:	60 e0       	ldi	r22, 0x00	; 0
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
	for(position=0;position<4;position++){
    168a:	c0 e0       	ldi	r28, 0x00	; 0
    168c:	20 c0       	rjmp	.+64     	; 0x16ce <user_menu_data+0xee>
			key=key_not_pressed;
    168e:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
			do{
				key=Keypad_get_pressed_key();
    1692:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1696:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
    169a:	8f e4       	ldi	r24, 0x4F	; 79
    169c:	93 ec       	ldi	r25, 0xC3	; 195
    169e:	01 97       	sbiw	r24, 0x01	; 1
    16a0:	f1 f7       	brne	.-4      	; 0x169e <user_menu_data+0xbe>
    16a2:	00 c0       	rjmp	.+0      	; 0x16a4 <user_menu_data+0xc4>
    16a4:	00 00       	nop
				_delay_ms(200);
				user_mode_pass[position]=key;
    16a6:	ec 2f       	mov	r30, r28
    16a8:	f0 e0       	ldi	r31, 0x00	; 0
    16aa:	ef 57       	subi	r30, 0x7F	; 127
    16ac:	fb 4f       	sbci	r31, 0xFB	; 251
    16ae:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    16b2:	80 83       	st	Z, r24
				LCD_GoTO_Row_Column(1,position);
    16b4:	6c 2f       	mov	r22, r28
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_GoTO_Row_Column>
				LCD_Send_character(key);
    16bc:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    16c0:	0e 94 42 01 	call	0x284	; 0x284 <LCD_Send_character>
			}while(key==key_not_pressed);
    16c4:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    16c8:	88 23       	and	r24, r24
    16ca:	19 f3       	breq	.-58     	; 0x1692 <user_menu_data+0xb2>
		_delay_ms(1000);
		LCD_Clear_Display();
		key=key_not_pressed;
	_delay_ms(300);
	LCD_Send_String_Row_Column(0,0,"enter_pin_4_num");
	for(position=0;position<4;position++){
    16cc:	cf 5f       	subi	r28, 0xFF	; 255
    16ce:	c4 30       	cpi	r28, 0x04	; 4
    16d0:	f0 f2       	brcs	.-68     	; 0x168e <user_menu_data+0xae>
    16d2:	9f e3       	ldi	r25, 0x3F	; 63
    16d4:	2d e0       	ldi	r18, 0x0D	; 13
    16d6:	83 e0       	ldi	r24, 0x03	; 3
    16d8:	91 50       	subi	r25, 0x01	; 1
    16da:	20 40       	sbci	r18, 0x00	; 0
    16dc:	80 40       	sbci	r24, 0x00	; 0
    16de:	e1 f7       	brne	.-8      	; 0x16d8 <user_menu_data+0xf8>
    16e0:	00 c0       	rjmp	.+0      	; 0x16e2 <user_menu_data+0x102>
    16e2:	00 00       	nop
				LCD_GoTO_Row_Column(1,position);
				LCD_Send_character(key);
			}while(key==key_not_pressed);
		}
	_delay_ms(1000);
			LCD_Clear_Display();
    16e4:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
			key=key_not_pressed;
    16e8:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>

		if(array_compare(user_mode_name,user1_name)==1 && array_compare(user_mode_pass,user1_pass))
    16ec:	69 e8       	ldi	r22, 0x89	; 137
    16ee:	74 e0       	ldi	r23, 0x04	; 4
    16f0:	8c e6       	ldi	r24, 0x6C	; 108
    16f2:	94 e0       	ldi	r25, 0x04	; 4
    16f4:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	09 f0       	breq	.+2      	; 0x16fe <user_menu_data+0x11e>
    16fc:	9a c0       	rjmp	.+308    	; 0x1832 <user_menu_data+0x252>
    16fe:	63 e6       	ldi	r22, 0x63	; 99
    1700:	74 e0       	ldi	r23, 0x04	; 4
    1702:	81 e8       	ldi	r24, 0x81	; 129
    1704:	94 e0       	ldi	r25, 0x04	; 4
    1706:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    170a:	89 2b       	or	r24, r25
    170c:	09 f4       	brne	.+2      	; 0x1710 <user_menu_data+0x130>
    170e:	91 c0       	rjmp	.+290    	; 0x1832 <user_menu_data+0x252>
		{LCD_Send_String_Row_Column(0,0,"Welcome_Home");
    1710:	4d ec       	ldi	r20, 0xCD	; 205
    1712:	53 e0       	ldi	r21, 0x03	; 3
    1714:	60 e0       	ldi	r22, 0x00	; 0
    1716:	80 e0       	ldi	r24, 0x00	; 0
    1718:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>

		user_state=1;
    171c:	81 e0       	ldi	r24, 0x01	; 1
    171e:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
    1722:	9f e3       	ldi	r25, 0x3F	; 63
    1724:	2d e0       	ldi	r18, 0x0D	; 13
    1726:	83 e0       	ldi	r24, 0x03	; 3
    1728:	91 50       	subi	r25, 0x01	; 1
    172a:	20 40       	sbci	r18, 0x00	; 0
    172c:	80 40       	sbci	r24, 0x00	; 0
    172e:	e1 f7       	brne	.-8      	; 0x1728 <user_menu_data+0x148>
    1730:	00 c0       	rjmp	.+0      	; 0x1732 <user_menu_data+0x152>
    1732:	00 00       	nop
    1734:	79 c0       	rjmp	.+242    	; 0x1828 <user_menu_data+0x248>
		_delay_ms(1000);
						while(user_state){
						LCD_Clear_Display();
    1736:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
						menu_user();
    173a:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <menu_user>
							do{
								key=Keypad_get_pressed_key();
    173e:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1742:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
    1746:	8f e4       	ldi	r24, 0x4F	; 79
    1748:	93 ec       	ldi	r25, 0xC3	; 195
    174a:	01 97       	sbiw	r24, 0x01	; 1
    174c:	f1 f7       	brne	.-4      	; 0x174a <user_menu_data+0x16a>
    174e:	00 c0       	rjmp	.+0      	; 0x1750 <user_menu_data+0x170>
    1750:	00 00       	nop
								_delay_ms(200);
							}while(key==key_not_pressed);
    1752:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1756:	88 23       	and	r24, r24
    1758:	91 f3       	breq	.-28     	; 0x173e <user_menu_data+0x15e>
    175a:	9f e3       	ldi	r25, 0x3F	; 63
    175c:	2d e0       	ldi	r18, 0x0D	; 13
    175e:	83 e0       	ldi	r24, 0x03	; 3
    1760:	91 50       	subi	r25, 0x01	; 1
    1762:	20 40       	sbci	r18, 0x00	; 0
    1764:	80 40       	sbci	r24, 0x00	; 0
    1766:	e1 f7       	brne	.-8      	; 0x1760 <user_menu_data+0x180>
    1768:	00 c0       	rjmp	.+0      	; 0x176a <user_menu_data+0x18a>
    176a:	00 00       	nop
							_delay_ms(1000);
							LCD_Clear_Display();
    176c:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
							switch (key){
    1770:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1774:	82 33       	cpi	r24, 0x32	; 50
    1776:	09 f4       	brne	.+2      	; 0x177a <user_menu_data+0x19a>
    1778:	46 c0       	rjmp	.+140    	; 0x1806 <user_menu_data+0x226>
    177a:	18 f4       	brcc	.+6      	; 0x1782 <user_menu_data+0x1a2>
    177c:	81 33       	cpi	r24, 0x31	; 49
    177e:	41 f0       	breq	.+16     	; 0x1790 <user_menu_data+0x1b0>
    1780:	51 c0       	rjmp	.+162    	; 0x1824 <user_menu_data+0x244>
    1782:	83 33       	cpi	r24, 0x33	; 51
    1784:	09 f4       	brne	.+2      	; 0x1788 <user_menu_data+0x1a8>
    1786:	44 c0       	rjmp	.+136    	; 0x1810 <user_menu_data+0x230>
    1788:	84 33       	cpi	r24, 0x34	; 52
    178a:	09 f4       	brne	.+2      	; 0x178e <user_menu_data+0x1ae>
    178c:	46 c0       	rjmp	.+140    	; 0x181a <user_menu_data+0x23a>
    178e:	4a c0       	rjmp	.+148    	; 0x1824 <user_menu_data+0x244>
							case '1':

							{admin_state=0;
    1790:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <admin_state>
								read_fromEEPROM(&data_admin_led,0xA0,led_status_ad);
    1794:	4f e3       	ldi	r20, 0x3F	; 63
    1796:	60 ea       	ldi	r22, 0xA0	; 160
    1798:	8f e4       	ldi	r24, 0x4F	; 79
    179a:	94 e0       	ldi	r25, 0x04	; 4
    179c:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
							read_fromEEPROM(&data_user_led,0xA0,led_status_u);
    17a0:	41 e4       	ldi	r20, 0x41	; 65
    17a2:	60 ea       	ldi	r22, 0xA0	; 160
    17a4:	8e e4       	ldi	r24, 0x4E	; 78
    17a6:	94 e0       	ldi	r25, 0x04	; 4
    17a8:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>

						 if(admin_state==1){
    17ac:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    17b0:	81 30       	cpi	r24, 0x01	; 1
    17b2:	89 f4       	brne	.+34     	; 0x17d6 <user_menu_data+0x1f6>
							control_leds_admin(data_admin_led);
    17b4:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <data_admin_led>
    17b8:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
							uart_transmit_string("enter led 1~5");
    17bc:	8a ed       	ldi	r24, 0xDA	; 218
    17be:	93 e0       	ldi	r25, 0x03	; 3
    17c0:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
							uart_recie(&key);
    17c4:	86 e5       	ldi	r24, 0x56	; 86
    17c6:	94 e0       	ldi	r25, 0x04	; 4
    17c8:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
							control_leds_admin(key);
    17cc:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    17d0:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
    17d4:	12 c0       	rjmp	.+36     	; 0x17fa <user_menu_data+0x21a>
						}
						else{
							control_leds_user(data_user_led);
    17d6:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <data_user_led>
    17da:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
							LCD_Send_String_Row_Column(0,0,"enter led 1~5");
    17de:	4a ed       	ldi	r20, 0xDA	; 218
    17e0:	53 e0       	ldi	r21, 0x03	; 3
    17e2:	60 e0       	ldi	r22, 0x00	; 0
    17e4:	80 e0       	ldi	r24, 0x00	; 0
    17e6:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
							do{
								key=Keypad_get_pressed_key();
    17ea:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    17ee:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
							}while(key==key_not_pressed);
    17f2:	88 23       	and	r24, r24
    17f4:	d1 f3       	breq	.-12     	; 0x17ea <user_menu_data+0x20a>
							control_leds_user(key);
    17f6:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
						}
							key=key_not_pressed;
    17fa:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
							user_state=1;
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
								break;
    1804:	11 c0       	rjmp	.+34     	; 0x1828 <user_menu_data+0x248>
							}
							case '2':
							{ 
								AC_Control();
    1806:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <AC_Control>
								key=key_not_pressed;
    180a:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
								break;
    180e:	0c c0       	rjmp	.+24     	; 0x1828 <user_menu_data+0x248>
							}
							case '3':
							{
								Dimmer_Control();
    1810:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Dimmer_Control>
								key=key_not_pressed;
    1814:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
								break;
    1818:	07 c0       	rjmp	.+14     	; 0x1828 <user_menu_data+0x248>
							}
							case '4':
							{
								user_state=0;
    181a:	10 92 50 04 	sts	0x0450, r1	; 0x800450 <user_state>
								key=key_not_pressed;
    181e:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
								break;
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <user_menu_data+0x248>
							}
							default:
							{
								key=key_not_pressed;
    1824:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
		if(array_compare(user_mode_name,user1_name)==1 && array_compare(user_mode_pass,user1_pass))
		{LCD_Send_String_Row_Column(0,0,"Welcome_Home");

		user_state=1;
		_delay_ms(1000);
						while(user_state){
    1828:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <user_state>
    182c:	81 11       	cpse	r24, r1
    182e:	83 cf       	rjmp	.-250    	; 0x1736 <user_menu_data+0x156>
    1830:	66 c1       	rjmp	.+716    	; 0x1afe <user_menu_data+0x51e>
							}
						}
						break;
						}

		else if(array_compare(user_mode_name,user2_name)==1 && array_compare(user_mode_pass,user2_pass))
    1832:	61 e9       	ldi	r22, 0x91	; 145
    1834:	74 e0       	ldi	r23, 0x04	; 4
    1836:	8c e6       	ldi	r24, 0x6C	; 108
    1838:	94 e0       	ldi	r25, 0x04	; 4
    183a:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    183e:	01 97       	sbiw	r24, 0x01	; 1
    1840:	09 f0       	breq	.+2      	; 0x1844 <user_menu_data+0x264>
    1842:	9a c0       	rjmp	.+308    	; 0x1978 <user_menu_data+0x398>
    1844:	60 e7       	ldi	r22, 0x70	; 112
    1846:	74 e0       	ldi	r23, 0x04	; 4
    1848:	81 e8       	ldi	r24, 0x81	; 129
    184a:	94 e0       	ldi	r25, 0x04	; 4
    184c:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    1850:	89 2b       	or	r24, r25
    1852:	09 f4       	brne	.+2      	; 0x1856 <user_menu_data+0x276>
    1854:	91 c0       	rjmp	.+290    	; 0x1978 <user_menu_data+0x398>
		{
			LCD_Send_String_Row_Column(0,0,"Welcome_Home");
    1856:	4d ec       	ldi	r20, 0xCD	; 205
    1858:	53 e0       	ldi	r21, 0x03	; 3
    185a:	60 e0       	ldi	r22, 0x00	; 0
    185c:	80 e0       	ldi	r24, 0x00	; 0
    185e:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
			user_state=1;
    1862:	81 e0       	ldi	r24, 0x01	; 1
    1864:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
    1868:	9f e3       	ldi	r25, 0x3F	; 63
    186a:	2d e0       	ldi	r18, 0x0D	; 13
    186c:	83 e0       	ldi	r24, 0x03	; 3
    186e:	91 50       	subi	r25, 0x01	; 1
    1870:	20 40       	sbci	r18, 0x00	; 0
    1872:	80 40       	sbci	r24, 0x00	; 0
    1874:	e1 f7       	brne	.-8      	; 0x186e <user_menu_data+0x28e>
    1876:	00 c0       	rjmp	.+0      	; 0x1878 <user_menu_data+0x298>
    1878:	00 00       	nop
    187a:	79 c0       	rjmp	.+242    	; 0x196e <user_menu_data+0x38e>
			_delay_ms(1000);
							while(user_state){
							LCD_Clear_Display();
    187c:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
							menu_user();
    1880:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <menu_user>
								do{
									key=Keypad_get_pressed_key();
    1884:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1888:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
    188c:	8f e4       	ldi	r24, 0x4F	; 79
    188e:	93 ec       	ldi	r25, 0xC3	; 195
    1890:	01 97       	sbiw	r24, 0x01	; 1
    1892:	f1 f7       	brne	.-4      	; 0x1890 <user_menu_data+0x2b0>
    1894:	00 c0       	rjmp	.+0      	; 0x1896 <user_menu_data+0x2b6>
    1896:	00 00       	nop
									_delay_ms(200);
								}while(key==key_not_pressed);
    1898:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    189c:	88 23       	and	r24, r24
    189e:	91 f3       	breq	.-28     	; 0x1884 <user_menu_data+0x2a4>
    18a0:	9f e3       	ldi	r25, 0x3F	; 63
    18a2:	2d e0       	ldi	r18, 0x0D	; 13
    18a4:	83 e0       	ldi	r24, 0x03	; 3
    18a6:	91 50       	subi	r25, 0x01	; 1
    18a8:	20 40       	sbci	r18, 0x00	; 0
    18aa:	80 40       	sbci	r24, 0x00	; 0
    18ac:	e1 f7       	brne	.-8      	; 0x18a6 <user_menu_data+0x2c6>
    18ae:	00 c0       	rjmp	.+0      	; 0x18b0 <user_menu_data+0x2d0>
    18b0:	00 00       	nop
								_delay_ms(1000);
								LCD_Clear_Display();
    18b2:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
								switch (key){
    18b6:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    18ba:	82 33       	cpi	r24, 0x32	; 50
    18bc:	09 f4       	brne	.+2      	; 0x18c0 <user_menu_data+0x2e0>
    18be:	46 c0       	rjmp	.+140    	; 0x194c <user_menu_data+0x36c>
    18c0:	18 f4       	brcc	.+6      	; 0x18c8 <user_menu_data+0x2e8>
    18c2:	81 33       	cpi	r24, 0x31	; 49
    18c4:	41 f0       	breq	.+16     	; 0x18d6 <user_menu_data+0x2f6>
    18c6:	51 c0       	rjmp	.+162    	; 0x196a <user_menu_data+0x38a>
    18c8:	83 33       	cpi	r24, 0x33	; 51
    18ca:	09 f4       	brne	.+2      	; 0x18ce <user_menu_data+0x2ee>
    18cc:	44 c0       	rjmp	.+136    	; 0x1956 <user_menu_data+0x376>
    18ce:	84 33       	cpi	r24, 0x34	; 52
    18d0:	09 f4       	brne	.+2      	; 0x18d4 <user_menu_data+0x2f4>
    18d2:	46 c0       	rjmp	.+140    	; 0x1960 <user_menu_data+0x380>
    18d4:	4a c0       	rjmp	.+148    	; 0x196a <user_menu_data+0x38a>
								case '1':

								{admin_state=0;
    18d6:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <admin_state>
									read_fromEEPROM(&data_admin_led,0xA0,led_status_ad);
    18da:	4f e3       	ldi	r20, 0x3F	; 63
    18dc:	60 ea       	ldi	r22, 0xA0	; 160
    18de:	8f e4       	ldi	r24, 0x4F	; 79
    18e0:	94 e0       	ldi	r25, 0x04	; 4
    18e2:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
								read_fromEEPROM(&data_user_led,0xA0,led_status_u);
    18e6:	41 e4       	ldi	r20, 0x41	; 65
    18e8:	60 ea       	ldi	r22, 0xA0	; 160
    18ea:	8e e4       	ldi	r24, 0x4E	; 78
    18ec:	94 e0       	ldi	r25, 0x04	; 4
    18ee:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>

							 if(admin_state==1){
    18f2:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    18f6:	81 30       	cpi	r24, 0x01	; 1
    18f8:	89 f4       	brne	.+34     	; 0x191c <user_menu_data+0x33c>
								control_leds_admin(data_admin_led);
    18fa:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <data_admin_led>
    18fe:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
								uart_transmit_string("enter led 1~5");
    1902:	8a ed       	ldi	r24, 0xDA	; 218
    1904:	93 e0       	ldi	r25, 0x03	; 3
    1906:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
								uart_recie(&key);
    190a:	86 e5       	ldi	r24, 0x56	; 86
    190c:	94 e0       	ldi	r25, 0x04	; 4
    190e:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
								control_leds_admin(key);
    1912:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1916:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
    191a:	12 c0       	rjmp	.+36     	; 0x1940 <user_menu_data+0x360>
							}
							else{
								control_leds_user(data_user_led);
    191c:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <data_user_led>
    1920:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
								LCD_Send_String_Row_Column(0,0,"enter led 1~5");
    1924:	4a ed       	ldi	r20, 0xDA	; 218
    1926:	53 e0       	ldi	r21, 0x03	; 3
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	80 e0       	ldi	r24, 0x00	; 0
    192c:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
								do{
									key=Keypad_get_pressed_key();
    1930:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1934:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
								}while(key==key_not_pressed);
    1938:	88 23       	and	r24, r24
    193a:	d1 f3       	breq	.-12     	; 0x1930 <user_menu_data+0x350>
								control_leds_user(key);
    193c:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
							}

								key=key_not_pressed;
    1940:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
								user_state=1;
    1944:	81 e0       	ldi	r24, 0x01	; 1
    1946:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
									break;
    194a:	11 c0       	rjmp	.+34     	; 0x196e <user_menu_data+0x38e>
								}
								case '2':
								{ 
									AC_Control();
    194c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <AC_Control>
									key=key_not_pressed;
    1950:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    1954:	0c c0       	rjmp	.+24     	; 0x196e <user_menu_data+0x38e>
								}
								case '3':
								{
									Dimmer_Control();
    1956:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Dimmer_Control>
									key=key_not_pressed;
    195a:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    195e:	07 c0       	rjmp	.+14     	; 0x196e <user_menu_data+0x38e>
								}
								case '4':
								{
									user_state=0;
    1960:	10 92 50 04 	sts	0x0450, r1	; 0x800450 <user_state>
									key=key_not_pressed;
    1964:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    1968:	02 c0       	rjmp	.+4      	; 0x196e <user_menu_data+0x38e>
								}
								default:
								{
									key=key_not_pressed;
    196a:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
		else if(array_compare(user_mode_name,user2_name)==1 && array_compare(user_mode_pass,user2_pass))
		{
			LCD_Send_String_Row_Column(0,0,"Welcome_Home");
			user_state=1;
			_delay_ms(1000);
							while(user_state){
    196e:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <user_state>
    1972:	81 11       	cpse	r24, r1
    1974:	83 cf       	rjmp	.-250    	; 0x187c <user_menu_data+0x29c>
    1976:	c3 c0       	rjmp	.+390    	; 0x1afe <user_menu_data+0x51e>

								}
							}
							break;
							}
		else if(array_compare(user_mode_name,user3_name)==1 && array_compare(user_mode_pass,user3_pass))
    1978:	68 e7       	ldi	r22, 0x78	; 120
    197a:	74 e0       	ldi	r23, 0x04	; 4
    197c:	8c e6       	ldi	r24, 0x6C	; 108
    197e:	94 e0       	ldi	r25, 0x04	; 4
    1980:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    1984:	01 97       	sbiw	r24, 0x01	; 1
    1986:	09 f0       	breq	.+2      	; 0x198a <user_menu_data+0x3aa>
    1988:	9a c0       	rjmp	.+308    	; 0x1abe <user_menu_data+0x4de>
    198a:	64 e7       	ldi	r22, 0x74	; 116
    198c:	74 e0       	ldi	r23, 0x04	; 4
    198e:	81 e8       	ldi	r24, 0x81	; 129
    1990:	94 e0       	ldi	r25, 0x04	; 4
    1992:	0e 94 8b 03 	call	0x716	; 0x716 <array_compare>
    1996:	89 2b       	or	r24, r25
    1998:	09 f4       	brne	.+2      	; 0x199c <user_menu_data+0x3bc>
    199a:	91 c0       	rjmp	.+290    	; 0x1abe <user_menu_data+0x4de>
		{
			LCD_Send_String_Row_Column(0,0,"Welcome_Home");
    199c:	4d ec       	ldi	r20, 0xCD	; 205
    199e:	53 e0       	ldi	r21, 0x03	; 3
    19a0:	60 e0       	ldi	r22, 0x00	; 0
    19a2:	80 e0       	ldi	r24, 0x00	; 0
    19a4:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		
			user_state=1;
    19a8:	81 e0       	ldi	r24, 0x01	; 1
    19aa:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
    19ae:	9f e3       	ldi	r25, 0x3F	; 63
    19b0:	2d e0       	ldi	r18, 0x0D	; 13
    19b2:	83 e0       	ldi	r24, 0x03	; 3
    19b4:	91 50       	subi	r25, 0x01	; 1
    19b6:	20 40       	sbci	r18, 0x00	; 0
    19b8:	80 40       	sbci	r24, 0x00	; 0
    19ba:	e1 f7       	brne	.-8      	; 0x19b4 <user_menu_data+0x3d4>
    19bc:	00 c0       	rjmp	.+0      	; 0x19be <user_menu_data+0x3de>
    19be:	00 00       	nop
    19c0:	79 c0       	rjmp	.+242    	; 0x1ab4 <user_menu_data+0x4d4>
			_delay_ms(1000);
						 while(user_state){
							LCD_Clear_Display();
    19c2:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
							menu_user();
    19c6:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <menu_user>
								do{
									key=Keypad_get_pressed_key();
    19ca:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    19ce:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
    19d2:	8f e4       	ldi	r24, 0x4F	; 79
    19d4:	93 ec       	ldi	r25, 0xC3	; 195
    19d6:	01 97       	sbiw	r24, 0x01	; 1
    19d8:	f1 f7       	brne	.-4      	; 0x19d6 <user_menu_data+0x3f6>
    19da:	00 c0       	rjmp	.+0      	; 0x19dc <user_menu_data+0x3fc>
    19dc:	00 00       	nop
									_delay_ms(200);
									
								}while(key==key_not_pressed);
    19de:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    19e2:	88 23       	and	r24, r24
    19e4:	91 f3       	breq	.-28     	; 0x19ca <user_menu_data+0x3ea>
    19e6:	9f e3       	ldi	r25, 0x3F	; 63
    19e8:	2d e0       	ldi	r18, 0x0D	; 13
    19ea:	83 e0       	ldi	r24, 0x03	; 3
    19ec:	91 50       	subi	r25, 0x01	; 1
    19ee:	20 40       	sbci	r18, 0x00	; 0
    19f0:	80 40       	sbci	r24, 0x00	; 0
    19f2:	e1 f7       	brne	.-8      	; 0x19ec <user_menu_data+0x40c>
    19f4:	00 c0       	rjmp	.+0      	; 0x19f6 <user_menu_data+0x416>
    19f6:	00 00       	nop
								_delay_ms(1000);
								LCD_Clear_Display();
    19f8:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
						    
								switch (key){
    19fc:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1a00:	82 33       	cpi	r24, 0x32	; 50
    1a02:	09 f4       	brne	.+2      	; 0x1a06 <user_menu_data+0x426>
    1a04:	46 c0       	rjmp	.+140    	; 0x1a92 <user_menu_data+0x4b2>
    1a06:	18 f4       	brcc	.+6      	; 0x1a0e <user_menu_data+0x42e>
    1a08:	81 33       	cpi	r24, 0x31	; 49
    1a0a:	41 f0       	breq	.+16     	; 0x1a1c <user_menu_data+0x43c>
    1a0c:	51 c0       	rjmp	.+162    	; 0x1ab0 <user_menu_data+0x4d0>
    1a0e:	83 33       	cpi	r24, 0x33	; 51
    1a10:	09 f4       	brne	.+2      	; 0x1a14 <user_menu_data+0x434>
    1a12:	44 c0       	rjmp	.+136    	; 0x1a9c <user_menu_data+0x4bc>
    1a14:	84 33       	cpi	r24, 0x34	; 52
    1a16:	09 f4       	brne	.+2      	; 0x1a1a <user_menu_data+0x43a>
    1a18:	46 c0       	rjmp	.+140    	; 0x1aa6 <user_menu_data+0x4c6>
    1a1a:	4a c0       	rjmp	.+148    	; 0x1ab0 <user_menu_data+0x4d0>
								case '1':

								{admin_state=0;
    1a1c:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <admin_state>
									read_fromEEPROM(&data_admin_led,0xA0,led_status_ad);
    1a20:	4f e3       	ldi	r20, 0x3F	; 63
    1a22:	60 ea       	ldi	r22, 0xA0	; 160
    1a24:	8f e4       	ldi	r24, 0x4F	; 79
    1a26:	94 e0       	ldi	r25, 0x04	; 4
    1a28:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
								read_fromEEPROM(&data_user_led,0xA0,led_status_u);
    1a2c:	41 e4       	ldi	r20, 0x41	; 65
    1a2e:	60 ea       	ldi	r22, 0xA0	; 160
    1a30:	8e e4       	ldi	r24, 0x4E	; 78
    1a32:	94 e0       	ldi	r25, 0x04	; 4
    1a34:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>

							 if(admin_state==1){
    1a38:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    1a3c:	81 30       	cpi	r24, 0x01	; 1
    1a3e:	89 f4       	brne	.+34     	; 0x1a62 <user_menu_data+0x482>
								control_leds_admin(data_admin_led);
    1a40:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <data_admin_led>
    1a44:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
								uart_transmit_string("enter led 1~5");
    1a48:	8a ed       	ldi	r24, 0xDA	; 218
    1a4a:	93 e0       	ldi	r25, 0x03	; 3
    1a4c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
								uart_recie(&key);
    1a50:	86 e5       	ldi	r24, 0x56	; 86
    1a52:	94 e0       	ldi	r25, 0x04	; 4
    1a54:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
								control_leds_admin(key);
    1a58:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1a5c:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
    1a60:	12 c0       	rjmp	.+36     	; 0x1a86 <user_menu_data+0x4a6>
							}
							else{
								control_leds_user(data_user_led);
    1a62:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <data_user_led>
    1a66:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
								LCD_Send_String_Row_Column(0,0,"enter led 1~5");
    1a6a:	4a ed       	ldi	r20, 0xDA	; 218
    1a6c:	53 e0       	ldi	r21, 0x03	; 3
    1a6e:	60 e0       	ldi	r22, 0x00	; 0
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
								do{
									key=Keypad_get_pressed_key();
    1a76:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1a7a:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
								}while(key==key_not_pressed);
    1a7e:	88 23       	and	r24, r24
    1a80:	d1 f3       	breq	.-12     	; 0x1a76 <user_menu_data+0x496>
								control_leds_user(key);
    1a82:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
							}
								//control_leds_admin(key);
								key=key_not_pressed;
    1a86:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
								user_state=1;
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <user_state>
									//key=key_not_pressed;
									break;
    1a90:	11 c0       	rjmp	.+34     	; 0x1ab4 <user_menu_data+0x4d4>
								}
								case '2':
								{ //init_fast_pwm();
									AC_Control();
    1a92:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <AC_Control>
									key=key_not_pressed;
    1a96:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    1a9a:	0c c0       	rjmp	.+24     	; 0x1ab4 <user_menu_data+0x4d4>
								}
								case '3':
								{
									Dimmer_Control();
    1a9c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Dimmer_Control>
									key=key_not_pressed;
    1aa0:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    1aa4:	07 c0       	rjmp	.+14     	; 0x1ab4 <user_menu_data+0x4d4>
								}
								case '4':
								{
									user_state=0;
    1aa6:	10 92 50 04 	sts	0x0450, r1	; 0x800450 <user_state>
									key=key_not_pressed;
    1aaa:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
									break;
    1aae:	02 c0       	rjmp	.+4      	; 0x1ab4 <user_menu_data+0x4d4>
								}
								default:
								{
									key=key_not_pressed;
    1ab0:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
		{
			LCD_Send_String_Row_Column(0,0,"Welcome_Home");
		
			user_state=1;
			_delay_ms(1000);
						 while(user_state){
    1ab4:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <user_state>
    1ab8:	81 11       	cpse	r24, r1
    1aba:	83 cf       	rjmp	.-250    	; 0x19c2 <user_menu_data+0x3e2>
    1abc:	20 c0       	rjmp	.+64     	; 0x1afe <user_menu_data+0x51e>
								}
							}
							break;
							}
		else
		{counter++;
    1abe:	0f 5f       	subi	r16, 0xFF	; 255
    1ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac2:	9f e9       	ldi	r25, 0x9F	; 159
    1ac4:	26 e8       	ldi	r18, 0x86	; 134
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	91 50       	subi	r25, 0x01	; 1
    1aca:	20 40       	sbci	r18, 0x00	; 0
    1acc:	80 40       	sbci	r24, 0x00	; 0
    1ace:	e1 f7       	brne	.-8      	; 0x1ac8 <user_menu_data+0x4e8>
    1ad0:	00 c0       	rjmp	.+0      	; 0x1ad2 <user_menu_data+0x4f2>
    1ad2:	00 00       	nop
			_delay_ms(500);
		LCD_Clear_Display();
    1ad4:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
		LCD_Send_String_Row_Column(0,0,"user_not_found");
    1ad8:	48 ee       	ldi	r20, 0xE8	; 232
    1ada:	53 e0       	ldi	r21, 0x03	; 3
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	80 e0       	ldi	r24, 0x00	; 0
    1ae0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
    1ae4:	9f e9       	ldi	r25, 0x9F	; 159
    1ae6:	26 e8       	ldi	r18, 0x86	; 134
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	91 50       	subi	r25, 0x01	; 1
    1aec:	20 40       	sbci	r18, 0x00	; 0
    1aee:	80 40       	sbci	r24, 0x00	; 0
    1af0:	e1 f7       	brne	.-8      	; 0x1aea <user_menu_data+0x50a>
    1af2:	00 c0       	rjmp	.+0      	; 0x1af4 <user_menu_data+0x514>
    1af4:	00 00       	nop
void user_menu_data()

{admin_state=0;
	int counter=0;
	unsigned char position=0;
	while(counter<3)
    1af6:	03 30       	cpi	r16, 0x03	; 3
    1af8:	11 05       	cpc	r17, r1
    1afa:	0c f4       	brge	.+2      	; 0x1afe <user_menu_data+0x51e>
    1afc:	79 cd       	rjmp	.-1294   	; 0x15f0 <user_menu_data+0x10>
		LCD_Clear_Display();
		LCD_Send_String_Row_Column(0,0,"user_not_found");
		_delay_ms(500);
		}
	}
	if(counter==3)
    1afe:	03 30       	cpi	r16, 0x03	; 3
    1b00:	11 05       	cpc	r17, r1
    1b02:	a9 f4       	brne	.+42     	; 0x1b2e <user_menu_data+0x54e>
    1b04:	9f e9       	ldi	r25, 0x9F	; 159
    1b06:	26 e8       	ldi	r18, 0x86	; 134
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	91 50       	subi	r25, 0x01	; 1
    1b0c:	20 40       	sbci	r18, 0x00	; 0
    1b0e:	80 40       	sbci	r24, 0x00	; 0
    1b10:	e1 f7       	brne	.-8      	; 0x1b0a <user_menu_data+0x52a>
    1b12:	00 c0       	rjmp	.+0      	; 0x1b14 <user_menu_data+0x534>
    1b14:	00 00       	nop

	{
		_delay_ms(500);
				LCD_Clear_Display();
    1b16:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
				LCD_Send_String_Row_Column(0,0,"system_off");
    1b1a:	47 ef       	ldi	r20, 0xF7	; 247
    1b1c:	53 e0       	ldi	r21, 0x03	; 3
    1b1e:	60 e0       	ldi	r22, 0x00	; 0
    1b20:	80 e0       	ldi	r24, 0x00	; 0
    1b22:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
				buzzer();
    1b26:	0e 94 c4 09 	call	0x1388	; 0x1388 <buzzer>
				LCD_Clear_Display();
    1b2a:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
	}
}
    1b2e:	cf 91       	pop	r28
    1b30:	1f 91       	pop	r17
    1b32:	0f 91       	pop	r16
    1b34:	08 95       	ret

00001b36 <main>:
void Dimmer_Control();
void buzzer();
void PWM_init();
void PWM_set_duty_cycle(uint16_t duty_cycle);
 int main(){
	LCD_Init();
    1b36:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_Init>
	Keypad_init();
    1b3a:	0e 94 49 00 	call	0x92	; 0x92 <Keypad_init>
    uart_init_rx(9600);
    1b3e:	80 e8       	ldi	r24, 0x80	; 128
    1b40:	95 e2       	ldi	r25, 0x25	; 37
    1b42:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <uart_init_rx>
    uart_init_tx(9600);
    1b46:	80 e8       	ldi	r24, 0x80	; 128
    1b48:	95 e2       	ldi	r25, 0x25	; 37
    1b4a:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <uart_init_tx>
    ADC_init();
    1b4e:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <ADC_init>
    i2c_init();
    1b52:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <i2c_init>
    LCD_Init();
    1b56:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_Init>
    admin_init();
    1b5a:	0e 94 44 02 	call	0x488	; 0x488 <admin_init>

    while(1){
    	names();
    1b5e:	0e 94 0f 02 	call	0x41e	; 0x41e <names>
    	uart_recie(&key);
    1b62:	86 e5       	ldi	r24, 0x56	; 86
    1b64:	94 e0       	ldi	r25, 0x04	; 4
    1b66:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
        uart_transmit_string("\r\n");
    1b6a:	86 e7       	ldi	r24, 0x76	; 118
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
switch(key){
    1b72:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1b76:	81 33       	cpi	r24, 0x31	; 49
    1b78:	21 f0       	breq	.+8      	; 0x1b82 <main+0x4c>
    1b7a:	82 33       	cpi	r24, 0x32	; 50
    1b7c:	09 f4       	brne	.+2      	; 0x1b80 <main+0x4a>
    1b7e:	e2 c0       	rjmp	.+452    	; 0x1d44 <main+0x20e>
    1b80:	ee cf       	rjmp	.-36     	; 0x1b5e <main+0x28>
case admin_mode:
LCD_Send_String_Row_Column(0,0,"admin_mode");
    1b82:	42 e0       	ldi	r20, 0x02	; 2
    1b84:	54 e0       	ldi	r21, 0x04	; 4
    1b86:	60 e0       	ldi	r22, 0x00	; 0
    1b88:	80 e0       	ldi	r24, 0x00	; 0
    1b8a:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
check(recieve_name,recieve_pass,&admin_state,name_address_ad,pass_address_ad,0xA0);
    1b8e:	0f 2e       	mov	r0, r31
    1b90:	f0 ea       	ldi	r31, 0xA0	; 160
    1b92:	ef 2e       	mov	r14, r31
    1b94:	f0 2d       	mov	r31, r0
    1b96:	06 e0       	ldi	r16, 0x06	; 6
    1b98:	22 e0       	ldi	r18, 0x02	; 2
    1b9a:	41 e5       	ldi	r20, 0x51	; 81
    1b9c:	54 e0       	ldi	r21, 0x04	; 4
    1b9e:	65 e8       	ldi	r22, 0x85	; 133
    1ba0:	74 e0       	ldi	r23, 0x04	; 4
    1ba2:	8d e7       	ldi	r24, 0x7D	; 125
    1ba4:	94 e0       	ldi	r25, 0x04	; 4
    1ba6:	0e 94 d7 09 	call	0x13ae	; 0x13ae <check>
while(admin_state==1)
    1baa:	c6 c0       	rjmp	.+396    	; 0x1d38 <main+0x202>
{
	menu_admin();
    1bac:	0e 94 b1 01 	call	0x362	; 0x362 <menu_admin>
	uart_recie(&choice);
    1bb0:	8c e7       	ldi	r24, 0x7C	; 124
    1bb2:	94 e0       	ldi	r25, 0x04	; 4
    1bb4:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
	uart_transmit_string("\r\n");
    1bb8:	86 e7       	ldi	r24, 0x76	; 118
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
	if(choice=='7')
    1bc0:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <choice>
    1bc4:	87 33       	cpi	r24, 0x37	; 55
    1bc6:	31 f4       	brne	.+12     	; 0x1bd4 <main+0x9e>
	{
		key=key_not_pressed;
    1bc8:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
		choice='0';
    1bcc:	80 e3       	ldi	r24, 0x30	; 48
    1bce:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <choice>
		break;
    1bd2:	c5 cf       	rjmp	.-118    	; 0x1b5e <main+0x28>
	}
switch (choice){
    1bd4:	83 33       	cpi	r24, 0x33	; 51
    1bd6:	09 f4       	brne	.+2      	; 0x1bda <main+0xa4>
    1bd8:	59 c0       	rjmp	.+178    	; 0x1c8c <main+0x156>
    1bda:	28 f4       	brcc	.+10     	; 0x1be6 <main+0xb0>
    1bdc:	81 33       	cpi	r24, 0x31	; 49
    1bde:	61 f0       	breq	.+24     	; 0x1bf8 <main+0xc2>
    1be0:	82 33       	cpi	r24, 0x32	; 50
    1be2:	09 f1       	breq	.+66     	; 0x1c26 <main+0xf0>
    1be4:	a2 c0       	rjmp	.+324    	; 0x1d2a <main+0x1f4>
    1be6:	85 33       	cpi	r24, 0x35	; 53
    1be8:	09 f4       	brne	.+2      	; 0x1bec <main+0xb6>
    1bea:	97 c0       	rjmp	.+302    	; 0x1d1a <main+0x1e4>
    1bec:	08 f4       	brcc	.+2      	; 0x1bf0 <main+0xba>
    1bee:	5f c0       	rjmp	.+190    	; 0x1cae <main+0x178>
    1bf0:	86 33       	cpi	r24, 0x36	; 54
    1bf2:	09 f4       	brne	.+2      	; 0x1bf6 <main+0xc0>
    1bf4:	95 c0       	rjmp	.+298    	; 0x1d20 <main+0x1ea>
    1bf6:	99 c0       	rjmp	.+306    	; 0x1d2a <main+0x1f4>
	case '1':
	{read_fromEEPROM(&ziz,0xA0,users_address_add);
    1bf8:	40 e0       	ldi	r20, 0x00	; 0
    1bfa:	60 ea       	ldi	r22, 0xA0	; 160
    1bfc:	8b e6       	ldi	r24, 0x6B	; 107
    1bfe:	94 e0       	ldi	r25, 0x04	; 4
    1c00:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
	total_users=ziz;
    1c04:	40 91 6b 04 	lds	r20, 0x046B	; 0x80046b <ziz>
    1c08:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
	write_eeprom(0xA0,users_address_add,total_users);
    1c0c:	60 e0       	ldi	r22, 0x00	; 0
    1c0e:	80 ea       	ldi	r24, 0xA0	; 160
    1c10:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
	read_fromEEPROM(&count_users,0xA0,users_address_add);
    1c14:	40 e0       	ldi	r20, 0x00	; 0
    1c16:	60 ea       	ldi	r22, 0xA0	; 160
    1c18:	82 e5       	ldi	r24, 0x52	; 82
    1c1a:	94 e0       	ldi	r25, 0x04	; 4
    1c1c:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
	add_user();
    1c20:	0e 94 79 02 	call	0x4f2	; 0x4f2 <add_user>
		break;
    1c24:	89 c0       	rjmp	.+274    	; 0x1d38 <main+0x202>
	}

	case '2':
	{	read_fromEEPROM(&ziz,0xA0,users_address_add);
    1c26:	40 e0       	ldi	r20, 0x00	; 0
    1c28:	60 ea       	ldi	r22, 0xA0	; 160
    1c2a:	8b e6       	ldi	r24, 0x6B	; 107
    1c2c:	94 e0       	ldi	r25, 0x04	; 4
    1c2e:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
	total_users=ziz;
    1c32:	40 91 6b 04 	lds	r20, 0x046B	; 0x80046b <ziz>
    1c36:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
	write_eeprom(0xA0,users_address_add,total_users);
    1c3a:	60 e0       	ldi	r22, 0x00	; 0
    1c3c:	80 ea       	ldi	r24, 0xA0	; 160
    1c3e:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
			read_data(user1_name,user1_pass,name_address_u1,pass_address_u1);
    1c42:	2e e0       	ldi	r18, 0x0E	; 14
    1c44:	4a e0       	ldi	r20, 0x0A	; 10
    1c46:	63 e6       	ldi	r22, 0x63	; 99
    1c48:	74 e0       	ldi	r23, 0x04	; 4
    1c4a:	89 e8       	ldi	r24, 0x89	; 137
    1c4c:	94 e0       	ldi	r25, 0x04	; 4
    1c4e:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
		read_data(user2_name,user2_pass,name_address_u2,pass_address_u2);
    1c52:	26 e1       	ldi	r18, 0x16	; 22
    1c54:	42 e1       	ldi	r20, 0x12	; 18
    1c56:	60 e7       	ldi	r22, 0x70	; 112
    1c58:	74 e0       	ldi	r23, 0x04	; 4
    1c5a:	81 e9       	ldi	r24, 0x91	; 145
    1c5c:	94 e0       	ldi	r25, 0x04	; 4
    1c5e:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
		read_data(user3_name,user3_pass,name_address_u3,pass_address_u3);
    1c62:	2e e1       	ldi	r18, 0x1E	; 30
    1c64:	4a e1       	ldi	r20, 0x1A	; 26
    1c66:	64 e7       	ldi	r22, 0x74	; 116
    1c68:	74 e0       	ldi	r23, 0x04	; 4
    1c6a:	88 e7       	ldi	r24, 0x78	; 120
    1c6c:	94 e0       	ldi	r25, 0x04	; 4
    1c6e:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
		//remove user
		read_fromEEPROM(&ziz,0xA0,users_address_add);
    1c72:	40 e0       	ldi	r20, 0x00	; 0
    1c74:	60 ea       	ldi	r22, 0xA0	; 160
    1c76:	8b e6       	ldi	r24, 0x6B	; 107
    1c78:	94 e0       	ldi	r25, 0x04	; 4
    1c7a:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
		total_users=ziz;
    1c7e:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <ziz>
    1c82:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <total_users>
		remove_user();
    1c86:	0e 94 e5 03 	call	0x7ca	; 0x7ca <remove_user>

		break;
    1c8a:	56 c0       	rjmp	.+172    	; 0x1d38 <main+0x202>
	}
	case '3':
	{	LCD_Send_String_Row_Column(0,0,"admin_mode");
    1c8c:	42 e0       	ldi	r20, 0x02	; 2
    1c8e:	54 e0       	ldi	r21, 0x04	; 4
    1c90:	60 e0       	ldi	r22, 0x00	; 0
    1c92:	80 e0       	ldi	r24, 0x00	; 0
    1c94:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
	LCD_Send_String_Row_Column(1,0,"door_open");
    1c98:	4d e0       	ldi	r20, 0x0D	; 13
    1c9a:	54 e0       	ldi	r21, 0x04	; 4
    1c9c:	60 e0       	ldi	r22, 0x00	; 0
    1c9e:	81 e0       	ldi	r24, 0x01	; 1
    1ca0:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		gate_control();
    1ca4:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <gate_control>
		LCD_Clear_Display();
    1ca8:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_Clear_Display>
		break;
    1cac:	45 c0       	rjmp	.+138    	; 0x1d38 <main+0x202>
	}
	case '4':


		read_fromEEPROM(&data_admin_led,0xA0,led_status_ad);
    1cae:	4f e3       	ldi	r20, 0x3F	; 63
    1cb0:	60 ea       	ldi	r22, 0xA0	; 160
    1cb2:	8f e4       	ldi	r24, 0x4F	; 79
    1cb4:	94 e0       	ldi	r25, 0x04	; 4
    1cb6:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
		read_fromEEPROM(&data_user_led,0xA0,led_status_u);
    1cba:	41 e4       	ldi	r20, 0x41	; 65
    1cbc:	60 ea       	ldi	r22, 0xA0	; 160
    1cbe:	8e e4       	ldi	r24, 0x4E	; 78
    1cc0:	94 e0       	ldi	r25, 0x04	; 4
    1cc2:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>

	{ if(admin_state==1){
    1cc6:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    1cca:	81 30       	cpi	r24, 0x01	; 1
    1ccc:	89 f4       	brne	.+34     	; 0x1cf0 <main+0x1ba>
		control_leds_admin(data_admin_led);
    1cce:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <data_admin_led>
    1cd2:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
		uart_transmit_string("enter led 1~5\r\n");
    1cd6:	87 e1       	ldi	r24, 0x17	; 23
    1cd8:	94 e0       	ldi	r25, 0x04	; 4
    1cda:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
		uart_recie(&key);
    1cde:	86 e5       	ldi	r24, 0x56	; 86
    1ce0:	94 e0       	ldi	r25, 0x04	; 4
    1ce2:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <uart_recie>
		control_leds_admin(key);
    1ce6:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <key>
    1cea:	0e 94 be 04 	call	0x97c	; 0x97c <control_leds_admin>
    1cee:	12 c0       	rjmp	.+36     	; 0x1d14 <main+0x1de>
	}
	else{
		control_leds_user(data_user_led);
    1cf0:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <data_user_led>
    1cf4:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
		LCD_Send_String_Row_Column(0,0,"enter led 1~5\r\n");
    1cf8:	47 e1       	ldi	r20, 0x17	; 23
    1cfa:	54 e0       	ldi	r21, 0x04	; 4
    1cfc:	60 e0       	ldi	r22, 0x00	; 0
    1cfe:	80 e0       	ldi	r24, 0x00	; 0
    1d00:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Send_String_Row_Column>
		do{
			key=Keypad_get_pressed_key();
    1d04:	0e 94 65 00 	call	0xca	; 0xca <Keypad_get_pressed_key>
    1d08:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <key>
		}while(key==key_not_pressed);
    1d0c:	88 23       	and	r24, r24
    1d0e:	d1 f3       	breq	.-12     	; 0x1d04 <main+0x1ce>
		control_leds_user(key);
    1d10:	0e 94 c5 05 	call	0xb8a	; 0xb8a <control_leds_user>
	}
		
		key=key_not_pressed;
    1d14:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <key>
		//control lamps
		break;
    1d18:	0f c0       	rjmp	.+30     	; 0x1d38 <main+0x202>
	}
	case '5':
	{ 
		AC_Control();
    1d1a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <AC_Control>
		//control AC
		break;
    1d1e:	0c c0       	rjmp	.+24     	; 0x1d38 <main+0x202>
	}
	case '6':
	{
		PWM_init();
    1d20:	0e 94 33 08 	call	0x1066	; 0x1066 <PWM_init>
		Dimmer_Control();
    1d24:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <Dimmer_Control>
		break;
    1d28:	07 c0       	rjmp	.+14     	; 0x1d38 <main+0x202>
	}
	default:
		choice='0';
    1d2a:	80 e3       	ldi	r24, 0x30	; 48
    1d2c:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <choice>
		uart_transmit_string("Please Enter Right Choice\r\n");
    1d30:	87 e2       	ldi	r24, 0x27	; 39
    1d32:	94 e0       	ldi	r25, 0x04	; 4
    1d34:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <uart_transmit_string>
        uart_transmit_string("\r\n");
switch(key){
case admin_mode:
LCD_Send_String_Row_Column(0,0,"admin_mode");
check(recieve_name,recieve_pass,&admin_state,name_address_ad,pass_address_ad,0xA0);
while(admin_state==1)
    1d38:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <admin_state>
    1d3c:	81 30       	cpi	r24, 0x01	; 1
    1d3e:	09 f4       	brne	.+2      	; 0x1d42 <main+0x20c>
    1d40:	35 cf       	rjmp	.-406    	; 0x1bac <main+0x76>
    1d42:	0d cf       	rjmp	.-486    	; 0x1b5e <main+0x28>

}
break;
case user_mode:
	{
	read_fromEEPROM(&ziz,0xA0,users_address_add);
    1d44:	40 e0       	ldi	r20, 0x00	; 0
    1d46:	60 ea       	ldi	r22, 0xA0	; 160
    1d48:	8b e6       	ldi	r24, 0x6B	; 107
    1d4a:	94 e0       	ldi	r25, 0x04	; 4
    1d4c:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <read_fromEEPROM>
total_users=ziz;
    1d50:	40 91 6b 04 	lds	r20, 0x046B	; 0x80046b <ziz>
    1d54:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <total_users>
write_eeprom(0xA0,users_address_add,total_users);
    1d58:	60 e0       	ldi	r22, 0x00	; 0
    1d5a:	80 ea       	ldi	r24, 0xA0	; 160
    1d5c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <write_eeprom>
		read_data(user1_name,user1_pass,name_address_u1,pass_address_u1);
    1d60:	2e e0       	ldi	r18, 0x0E	; 14
    1d62:	4a e0       	ldi	r20, 0x0A	; 10
    1d64:	63 e6       	ldi	r22, 0x63	; 99
    1d66:	74 e0       	ldi	r23, 0x04	; 4
    1d68:	89 e8       	ldi	r24, 0x89	; 137
    1d6a:	94 e0       	ldi	r25, 0x04	; 4
    1d6c:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
	read_data(user2_name,user2_pass,name_address_u2,pass_address_u2);
    1d70:	26 e1       	ldi	r18, 0x16	; 22
    1d72:	42 e1       	ldi	r20, 0x12	; 18
    1d74:	60 e7       	ldi	r22, 0x70	; 112
    1d76:	74 e0       	ldi	r23, 0x04	; 4
    1d78:	81 e9       	ldi	r24, 0x91	; 145
    1d7a:	94 e0       	ldi	r25, 0x04	; 4
    1d7c:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
	read_data(user3_name,user3_pass,name_address_u3,pass_address_u3);
    1d80:	2e e1       	ldi	r18, 0x1E	; 30
    1d82:	4a e1       	ldi	r20, 0x1A	; 26
    1d84:	64 e7       	ldi	r22, 0x74	; 116
    1d86:	74 e0       	ldi	r23, 0x04	; 4
    1d88:	88 e7       	ldi	r24, 0x78	; 120
    1d8a:	94 e0       	ldi	r25, 0x04	; 4
    1d8c:	0e 94 cc 06 	call	0xd98	; 0xd98 <read_data>
	user_cases();
    1d90:	0e 94 09 07 	call	0xe12	; 0xe12 <user_cases>

		user_menu_data();
    1d94:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <user_menu_data>
    1d98:	e2 ce       	rjmp	.-572    	; 0x1b5e <main+0x28>

00001d9a <ADC_init>:

#include<avr/io.h>
#include<util/delay.h>
void ADC_init(void)
{
	DDRA=0x0;			    /* Make ADC port as input */
    1d9a:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;			/* Enable ADC, fr/128  */
    1d9c:	87 e8       	ldi	r24, 0x87	; 135
    1d9e:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;			/* Vref: Avcc, ADC channel: 0 */
    1da0:	80 e4       	ldi	r24, 0x40	; 64
    1da2:	87 b9       	out	0x07, r24	; 7
    1da4:	08 95       	ret

00001da6 <read_adc>:

unsigned int read_adc(char channel)
{
	int Ain,AinLow;

	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
    1da6:	97 b1       	in	r25, 0x07	; 7
    1da8:	8f 70       	andi	r24, 0x0F	; 15
    1daa:	98 2b       	or	r25, r24
    1dac:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
    1dae:	86 b1       	in	r24, 0x06	; 6
    1db0:	80 64       	ori	r24, 0x40	; 64
    1db2:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
    1db4:	34 9b       	sbis	0x06, 4	; 6
    1db6:	fe cf       	rjmp	.-4      	; 0x1db4 <read_adc+0xe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1db8:	83 e0       	ldi	r24, 0x03	; 3
    1dba:	8a 95       	dec	r24
    1dbc:	f1 f7       	brne	.-4      	; 0x1dba <read_adc+0x14>
    1dbe:	00 00       	nop

	_delay_us(10);
	AinLow = (int)ADCL;		     /* Read lower byte*/
    1dc0:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)(ADCH<<8);		/* Read higher 2 bits and
    1dc2:	85 b1       	in	r24, 0x05	; 5
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	98 2f       	mov	r25, r24
    1dc8:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;
	return(Ain);			/* Return digital value*/
}
    1dca:	82 0f       	add	r24, r18
    1dcc:	91 1d       	adc	r25, r1
    1dce:	08 95       	ret

00001dd0 <i2c_write>:

    i2c_start();
    i2c_write(slave_addressLASTBIT0);
    i2c_write(dataTOslave);
    i2c_stop();
}
    1dd0:	83 b9       	out	0x03, r24	; 3
    1dd2:	84 e8       	ldi	r24, 0x84	; 132
    1dd4:	86 bf       	out	0x36, r24	; 54
    1dd6:	06 b6       	in	r0, 0x36	; 54
    1dd8:	07 fe       	sbrs	r0, 7
    1dda:	fd cf       	rjmp	.-6      	; 0x1dd6 <i2c_write+0x6>
    1ddc:	08 95       	ret

00001dde <i2c_start>:
    1dde:	84 ea       	ldi	r24, 0xA4	; 164
    1de0:	86 bf       	out	0x36, r24	; 54
    1de2:	06 b6       	in	r0, 0x36	; 54
    1de4:	07 fe       	sbrs	r0, 7
    1de6:	fd cf       	rjmp	.-6      	; 0x1de2 <i2c_start+0x4>
    1de8:	08 95       	ret

00001dea <i2c_stop>:
    1dea:	84 e9       	ldi	r24, 0x94	; 148
    1dec:	86 bf       	out	0x36, r24	; 54
    1dee:	08 95       	ret

00001df0 <i2c_read>:
    1df0:	81 11       	cpse	r24, r1
    1df2:	03 c0       	rjmp	.+6      	; 0x1dfa <i2c_read+0xa>
    1df4:	84 ec       	ldi	r24, 0xC4	; 196
    1df6:	86 bf       	out	0x36, r24	; 54
    1df8:	02 c0       	rjmp	.+4      	; 0x1dfe <i2c_read+0xe>
    1dfa:	84 e8       	ldi	r24, 0x84	; 132
    1dfc:	86 bf       	out	0x36, r24	; 54
    1dfe:	06 b6       	in	r0, 0x36	; 54
    1e00:	07 fe       	sbrs	r0, 7
    1e02:	fd cf       	rjmp	.-6      	; 0x1dfe <i2c_read+0xe>
    1e04:	83 b1       	in	r24, 0x03	; 3
    1e06:	08 95       	ret

00001e08 <i2c_init>:
    1e08:	11 b8       	out	0x01, r1	; 1
    1e0a:	82 e0       	ldi	r24, 0x02	; 2
    1e0c:	80 b9       	out	0x00, r24	; 0
    1e0e:	84 e4       	ldi	r24, 0x44	; 68
    1e10:	86 bf       	out	0x36, r24	; 54
    1e12:	08 95       	ret

00001e14 <write_eeprom>:
//***********************************************************************
void write_eeprom(unsigned char address_eepromDEVICEandLASTbitFORwrite,unsigned char locationADDRESS_eeprom,unsigned char data_onEEPROM)
 {
    1e14:	1f 93       	push	r17
    1e16:	cf 93       	push	r28
    1e18:	df 93       	push	r29
    1e1a:	18 2f       	mov	r17, r24
    1e1c:	d6 2f       	mov	r29, r22
    1e1e:	c4 2f       	mov	r28, r20
	 //write
	 i2c_start();
    1e20:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <i2c_start>
	 i2c_write(address_eepromDEVICEandLASTbitFORwrite); //eeprom device address      0xA0
    1e24:	81 2f       	mov	r24, r17
    1e26:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>
	 i2c_write(locationADDRESS_eeprom);//eeprom address register     0X01
    1e2a:	8d 2f       	mov	r24, r29
    1e2c:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>

//	 i2c_start();
//	 i2c_write(address_eepromDEVICEandLASTbitFORwrite);
	 i2c_write(data_onEEPROM);  // data
    1e30:	8c 2f       	mov	r24, r28
    1e32:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>
	 i2c_stop();
    1e36:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <i2c_stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1e3a:	83 ed       	ldi	r24, 0xD3	; 211
    1e3c:	90 e3       	ldi	r25, 0x30	; 48
    1e3e:	01 97       	sbiw	r24, 0x01	; 1
    1e40:	f1 f7       	brne	.-4      	; 0x1e3e <write_eeprom+0x2a>
    1e42:	00 c0       	rjmp	.+0      	; 0x1e44 <write_eeprom+0x30>
    1e44:	00 00       	nop
	 _delay_ms(50);
 }
    1e46:	df 91       	pop	r29
    1e48:	cf 91       	pop	r28
    1e4a:	1f 91       	pop	r17
    1e4c:	08 95       	ret

00001e4e <read_fromEEPROM>:
unsigned char read_fromEEPROM(unsigned char* data,unsigned char addressDEVICEeeprom,unsigned char locationADDRESSeeprom)
{
    1e4e:	0f 93       	push	r16
    1e50:	1f 93       	push	r17
    1e52:	cf 93       	push	r28
    1e54:	df 93       	push	r29
    1e56:	ec 01       	movw	r28, r24
    1e58:	16 2f       	mov	r17, r22
    1e5a:	04 2f       	mov	r16, r20
	//unsigned char rece_data_eeprom=0;
	//read
	//*************
	i2c_start();
    1e5c:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <i2c_start>
	i2c_write(addressDEVICEeeprom);  //last bit is to zero for write
    1e60:	81 2f       	mov	r24, r17
    1e62:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>
	i2c_write(locationADDRESSeeprom);
    1e66:	80 2f       	mov	r24, r16
    1e68:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>

	i2c_start();  //repeated start when read : no other master can pull line
    1e6c:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <i2c_start>
	//within read no other master can pull line
	i2c_write(addressDEVICEeeprom|1);  //last bit is to 1 for read
    1e70:	81 2f       	mov	r24, r17
    1e72:	81 60       	ori	r24, 0x01	; 1
    1e74:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <i2c_write>
	*data=i2c_read(1);  //1 is non ack that read only one byte
    1e78:	81 e0       	ldi	r24, 0x01	; 1
    1e7a:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <i2c_read>
    1e7e:	88 83       	st	Y, r24
	i2c_stop();
    1e80:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <i2c_stop>
	return *data;
}
    1e84:	88 81       	ld	r24, Y
    1e86:	df 91       	pop	r29
    1e88:	cf 91       	pop	r28
    1e8a:	1f 91       	pop	r17
    1e8c:	0f 91       	pop	r16
    1e8e:	08 95       	ret

00001e90 <uart_init_tx>:
}
void recieve_update(){

	char data=0;
	data=uart_recieve();
	recieve_char(data);
    1e90:	9c 01       	movw	r18, r24
    1e92:	8a b1       	in	r24, 0x0a	; 10
    1e94:	88 60       	ori	r24, 0x08	; 8
    1e96:	8a b9       	out	0x0a, r24	; 10
    1e98:	80 b5       	in	r24, 0x20	; 32
    1e9a:	8f 77       	andi	r24, 0x7F	; 127
    1e9c:	80 bd       	out	0x20, r24	; 32
    1e9e:	c9 01       	movw	r24, r18
    1ea0:	a0 e0       	ldi	r26, 0x00	; 0
    1ea2:	b0 e0       	ldi	r27, 0x00	; 0
    1ea4:	88 0f       	add	r24, r24
    1ea6:	99 1f       	adc	r25, r25
    1ea8:	aa 1f       	adc	r26, r26
    1eaa:	bb 1f       	adc	r27, r27
    1eac:	88 0f       	add	r24, r24
    1eae:	99 1f       	adc	r25, r25
    1eb0:	aa 1f       	adc	r26, r26
    1eb2:	bb 1f       	adc	r27, r27
    1eb4:	9c 01       	movw	r18, r24
    1eb6:	ad 01       	movw	r20, r26
    1eb8:	22 0f       	add	r18, r18
    1eba:	33 1f       	adc	r19, r19
    1ebc:	44 1f       	adc	r20, r20
    1ebe:	55 1f       	adc	r21, r21
    1ec0:	22 0f       	add	r18, r18
    1ec2:	33 1f       	adc	r19, r19
    1ec4:	44 1f       	adc	r20, r20
    1ec6:	55 1f       	adc	r21, r21
    1ec8:	60 e0       	ldi	r22, 0x00	; 0
    1eca:	72 e1       	ldi	r23, 0x12	; 18
    1ecc:	8a e7       	ldi	r24, 0x7A	; 122
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	0e 94 08 12 	call	0x2410	; 0x2410 <__udivmodsi4>
    1ed4:	21 50       	subi	r18, 0x01	; 1
    1ed6:	31 09       	sbc	r19, r1
    1ed8:	30 bd       	out	0x20, r19	; 32
    1eda:	29 b9       	out	0x09, r18	; 9
    1edc:	80 b5       	in	r24, 0x20	; 32
    1ede:	86 68       	ori	r24, 0x86	; 134
    1ee0:	80 bd       	out	0x20, r24	; 32
    1ee2:	80 b5       	in	r24, 0x20	; 32
    1ee4:	80 6b       	ori	r24, 0xB0	; 176
    1ee6:	80 bd       	out	0x20, r24	; 32
    1ee8:	80 b5       	in	r24, 0x20	; 32
    1eea:	80 68       	ori	r24, 0x80	; 128
    1eec:	80 bd       	out	0x20, r24	; 32
    1eee:	08 95       	ret

00001ef0 <uart_init_rx>:
    1ef0:	9c 01       	movw	r18, r24
    1ef2:	8a b1       	in	r24, 0x0a	; 10
    1ef4:	80 61       	ori	r24, 0x10	; 16
    1ef6:	8a b9       	out	0x0a, r24	; 10
    1ef8:	80 b5       	in	r24, 0x20	; 32
    1efa:	8f 77       	andi	r24, 0x7F	; 127
    1efc:	80 bd       	out	0x20, r24	; 32
    1efe:	c9 01       	movw	r24, r18
    1f00:	a0 e0       	ldi	r26, 0x00	; 0
    1f02:	b0 e0       	ldi	r27, 0x00	; 0
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	aa 1f       	adc	r26, r26
    1f0a:	bb 1f       	adc	r27, r27
    1f0c:	88 0f       	add	r24, r24
    1f0e:	99 1f       	adc	r25, r25
    1f10:	aa 1f       	adc	r26, r26
    1f12:	bb 1f       	adc	r27, r27
    1f14:	9c 01       	movw	r18, r24
    1f16:	ad 01       	movw	r20, r26
    1f18:	22 0f       	add	r18, r18
    1f1a:	33 1f       	adc	r19, r19
    1f1c:	44 1f       	adc	r20, r20
    1f1e:	55 1f       	adc	r21, r21
    1f20:	22 0f       	add	r18, r18
    1f22:	33 1f       	adc	r19, r19
    1f24:	44 1f       	adc	r20, r20
    1f26:	55 1f       	adc	r21, r21
    1f28:	60 e0       	ldi	r22, 0x00	; 0
    1f2a:	72 e1       	ldi	r23, 0x12	; 18
    1f2c:	8a e7       	ldi	r24, 0x7A	; 122
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	0e 94 08 12 	call	0x2410	; 0x2410 <__udivmodsi4>
    1f34:	21 50       	subi	r18, 0x01	; 1
    1f36:	31 09       	sbc	r19, r1
    1f38:	30 bd       	out	0x20, r19	; 32
    1f3a:	29 b9       	out	0x09, r18	; 9
    1f3c:	80 b5       	in	r24, 0x20	; 32
    1f3e:	86 68       	ori	r24, 0x86	; 134
    1f40:	80 bd       	out	0x20, r24	; 32
    1f42:	80 b5       	in	r24, 0x20	; 32
    1f44:	80 6b       	ori	r24, 0xB0	; 176
    1f46:	80 bd       	out	0x20, r24	; 32
    1f48:	80 b5       	in	r24, 0x20	; 32
    1f4a:	80 68       	ori	r24, 0x80	; 128
    1f4c:	80 bd       	out	0x20, r24	; 32
    1f4e:	08 95       	ret

00001f50 <uart_transmit>:
    1f50:	5d 9b       	sbis	0x0b, 5	; 11
    1f52:	fe cf       	rjmp	.-4      	; 0x1f50 <uart_transmit>
    1f54:	8c b9       	out	0x0c, r24	; 12
    1f56:	5e 9b       	sbis	0x0b, 6	; 11
    1f58:	fe cf       	rjmp	.-4      	; 0x1f56 <uart_transmit+0x6>
    1f5a:	08 95       	ret

00001f5c <uart_transmit_string>:
}
void uart_transmit_string(char* str){
    1f5c:	0f 93       	push	r16
    1f5e:	1f 93       	push	r17
    1f60:	cf 93       	push	r28
    1f62:	df 93       	push	r29
    1f64:	8c 01       	movw	r16, r24
	int i=0;
    1f66:	c0 e0       	ldi	r28, 0x00	; 0
    1f68:	d0 e0       	ldi	r29, 0x00	; 0
	char ss;

	while(str[i]!='\0'){
    1f6a:	03 c0       	rjmp	.+6      	; 0x1f72 <uart_transmit_string+0x16>

		uart_transmit(str[i]);
    1f6c:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <uart_transmit>
		i++;
    1f70:	21 96       	adiw	r28, 0x01	; 1
}
void uart_transmit_string(char* str){
	int i=0;
	char ss;

	while(str[i]!='\0'){
    1f72:	f8 01       	movw	r30, r16
    1f74:	ec 0f       	add	r30, r28
    1f76:	fd 1f       	adc	r31, r29
    1f78:	80 81       	ld	r24, Z
    1f7a:	81 11       	cpse	r24, r1
    1f7c:	f7 cf       	rjmp	.-18     	; 0x1f6c <uart_transmit_string+0x10>

	}



}
    1f7e:	df 91       	pop	r29
    1f80:	cf 91       	pop	r28
    1f82:	1f 91       	pop	r17
    1f84:	0f 91       	pop	r16
    1f86:	08 95       	ret

00001f88 <uart_recie>:
 unsigned char uart_recie(unsigned char*ss){
    1f88:	fc 01       	movw	r30, r24


	while(!((UCSRA>>RXC)&1));
    1f8a:	5f 9b       	sbis	0x0b, 7	; 11
    1f8c:	fe cf       	rjmp	.-4      	; 0x1f8a <uart_recie+0x2>
*ss=UDR;
    1f8e:	8c b1       	in	r24, 0x0c	; 12
    1f90:	80 83       	st	Z, r24
	return *ss;
}
    1f92:	08 95       	ret

00001f94 <__subsf3>:
    1f94:	50 58       	subi	r21, 0x80	; 128

00001f96 <__addsf3>:
    1f96:	bb 27       	eor	r27, r27
    1f98:	aa 27       	eor	r26, r26
    1f9a:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <__addsf3x>
    1f9e:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__fp_round>
    1fa2:	0e 94 4e 11 	call	0x229c	; 0x229c <__fp_pscA>
    1fa6:	38 f0       	brcs	.+14     	; 0x1fb6 <__addsf3+0x20>
    1fa8:	0e 94 55 11 	call	0x22aa	; 0x22aa <__fp_pscB>
    1fac:	20 f0       	brcs	.+8      	; 0x1fb6 <__addsf3+0x20>
    1fae:	39 f4       	brne	.+14     	; 0x1fbe <__addsf3+0x28>
    1fb0:	9f 3f       	cpi	r25, 0xFF	; 255
    1fb2:	19 f4       	brne	.+6      	; 0x1fba <__addsf3+0x24>
    1fb4:	26 f4       	brtc	.+8      	; 0x1fbe <__addsf3+0x28>
    1fb6:	0c 94 4b 11 	jmp	0x2296	; 0x2296 <__fp_nan>
    1fba:	0e f4       	brtc	.+2      	; 0x1fbe <__addsf3+0x28>
    1fbc:	e0 95       	com	r30
    1fbe:	e7 fb       	bst	r30, 7
    1fc0:	0c 94 45 11 	jmp	0x228a	; 0x228a <__fp_inf>

00001fc4 <__addsf3x>:
    1fc4:	e9 2f       	mov	r30, r25
    1fc6:	0e 94 6d 11 	call	0x22da	; 0x22da <__fp_split3>
    1fca:	58 f3       	brcs	.-42     	; 0x1fa2 <__addsf3+0xc>
    1fcc:	ba 17       	cp	r27, r26
    1fce:	62 07       	cpc	r22, r18
    1fd0:	73 07       	cpc	r23, r19
    1fd2:	84 07       	cpc	r24, r20
    1fd4:	95 07       	cpc	r25, r21
    1fd6:	20 f0       	brcs	.+8      	; 0x1fe0 <__addsf3x+0x1c>
    1fd8:	79 f4       	brne	.+30     	; 0x1ff8 <__addsf3x+0x34>
    1fda:	a6 f5       	brtc	.+104    	; 0x2044 <__addsf3x+0x80>
    1fdc:	0c 94 8f 11 	jmp	0x231e	; 0x231e <__fp_zero>
    1fe0:	0e f4       	brtc	.+2      	; 0x1fe4 <__addsf3x+0x20>
    1fe2:	e0 95       	com	r30
    1fe4:	0b 2e       	mov	r0, r27
    1fe6:	ba 2f       	mov	r27, r26
    1fe8:	a0 2d       	mov	r26, r0
    1fea:	0b 01       	movw	r0, r22
    1fec:	b9 01       	movw	r22, r18
    1fee:	90 01       	movw	r18, r0
    1ff0:	0c 01       	movw	r0, r24
    1ff2:	ca 01       	movw	r24, r20
    1ff4:	a0 01       	movw	r20, r0
    1ff6:	11 24       	eor	r1, r1
    1ff8:	ff 27       	eor	r31, r31
    1ffa:	59 1b       	sub	r21, r25
    1ffc:	99 f0       	breq	.+38     	; 0x2024 <__addsf3x+0x60>
    1ffe:	59 3f       	cpi	r21, 0xF9	; 249
    2000:	50 f4       	brcc	.+20     	; 0x2016 <__addsf3x+0x52>
    2002:	50 3e       	cpi	r21, 0xE0	; 224
    2004:	68 f1       	brcs	.+90     	; 0x2060 <__addsf3x+0x9c>
    2006:	1a 16       	cp	r1, r26
    2008:	f0 40       	sbci	r31, 0x00	; 0
    200a:	a2 2f       	mov	r26, r18
    200c:	23 2f       	mov	r18, r19
    200e:	34 2f       	mov	r19, r20
    2010:	44 27       	eor	r20, r20
    2012:	58 5f       	subi	r21, 0xF8	; 248
    2014:	f3 cf       	rjmp	.-26     	; 0x1ffc <__addsf3x+0x38>
    2016:	46 95       	lsr	r20
    2018:	37 95       	ror	r19
    201a:	27 95       	ror	r18
    201c:	a7 95       	ror	r26
    201e:	f0 40       	sbci	r31, 0x00	; 0
    2020:	53 95       	inc	r21
    2022:	c9 f7       	brne	.-14     	; 0x2016 <__addsf3x+0x52>
    2024:	7e f4       	brtc	.+30     	; 0x2044 <__addsf3x+0x80>
    2026:	1f 16       	cp	r1, r31
    2028:	ba 0b       	sbc	r27, r26
    202a:	62 0b       	sbc	r22, r18
    202c:	73 0b       	sbc	r23, r19
    202e:	84 0b       	sbc	r24, r20
    2030:	ba f0       	brmi	.+46     	; 0x2060 <__addsf3x+0x9c>
    2032:	91 50       	subi	r25, 0x01	; 1
    2034:	a1 f0       	breq	.+40     	; 0x205e <__addsf3x+0x9a>
    2036:	ff 0f       	add	r31, r31
    2038:	bb 1f       	adc	r27, r27
    203a:	66 1f       	adc	r22, r22
    203c:	77 1f       	adc	r23, r23
    203e:	88 1f       	adc	r24, r24
    2040:	c2 f7       	brpl	.-16     	; 0x2032 <__addsf3x+0x6e>
    2042:	0e c0       	rjmp	.+28     	; 0x2060 <__addsf3x+0x9c>
    2044:	ba 0f       	add	r27, r26
    2046:	62 1f       	adc	r22, r18
    2048:	73 1f       	adc	r23, r19
    204a:	84 1f       	adc	r24, r20
    204c:	48 f4       	brcc	.+18     	; 0x2060 <__addsf3x+0x9c>
    204e:	87 95       	ror	r24
    2050:	77 95       	ror	r23
    2052:	67 95       	ror	r22
    2054:	b7 95       	ror	r27
    2056:	f7 95       	ror	r31
    2058:	9e 3f       	cpi	r25, 0xFE	; 254
    205a:	08 f0       	brcs	.+2      	; 0x205e <__addsf3x+0x9a>
    205c:	b0 cf       	rjmp	.-160    	; 0x1fbe <__addsf3+0x28>
    205e:	93 95       	inc	r25
    2060:	88 0f       	add	r24, r24
    2062:	08 f0       	brcs	.+2      	; 0x2066 <__addsf3x+0xa2>
    2064:	99 27       	eor	r25, r25
    2066:	ee 0f       	add	r30, r30
    2068:	97 95       	ror	r25
    206a:	87 95       	ror	r24
    206c:	08 95       	ret

0000206e <__cmpsf2>:
    206e:	0e 94 21 11 	call	0x2242	; 0x2242 <__fp_cmp>
    2072:	08 f4       	brcc	.+2      	; 0x2076 <__cmpsf2+0x8>
    2074:	81 e0       	ldi	r24, 0x01	; 1
    2076:	08 95       	ret

00002078 <__divsf3>:
    2078:	0e 94 50 10 	call	0x20a0	; 0x20a0 <__divsf3x>
    207c:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__fp_round>
    2080:	0e 94 55 11 	call	0x22aa	; 0x22aa <__fp_pscB>
    2084:	58 f0       	brcs	.+22     	; 0x209c <__divsf3+0x24>
    2086:	0e 94 4e 11 	call	0x229c	; 0x229c <__fp_pscA>
    208a:	40 f0       	brcs	.+16     	; 0x209c <__divsf3+0x24>
    208c:	29 f4       	brne	.+10     	; 0x2098 <__divsf3+0x20>
    208e:	5f 3f       	cpi	r21, 0xFF	; 255
    2090:	29 f0       	breq	.+10     	; 0x209c <__divsf3+0x24>
    2092:	0c 94 45 11 	jmp	0x228a	; 0x228a <__fp_inf>
    2096:	51 11       	cpse	r21, r1
    2098:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__fp_szero>
    209c:	0c 94 4b 11 	jmp	0x2296	; 0x2296 <__fp_nan>

000020a0 <__divsf3x>:
    20a0:	0e 94 6d 11 	call	0x22da	; 0x22da <__fp_split3>
    20a4:	68 f3       	brcs	.-38     	; 0x2080 <__divsf3+0x8>

000020a6 <__divsf3_pse>:
    20a6:	99 23       	and	r25, r25
    20a8:	b1 f3       	breq	.-20     	; 0x2096 <__divsf3+0x1e>
    20aa:	55 23       	and	r21, r21
    20ac:	91 f3       	breq	.-28     	; 0x2092 <__divsf3+0x1a>
    20ae:	95 1b       	sub	r25, r21
    20b0:	55 0b       	sbc	r21, r21
    20b2:	bb 27       	eor	r27, r27
    20b4:	aa 27       	eor	r26, r26
    20b6:	62 17       	cp	r22, r18
    20b8:	73 07       	cpc	r23, r19
    20ba:	84 07       	cpc	r24, r20
    20bc:	38 f0       	brcs	.+14     	; 0x20cc <__divsf3_pse+0x26>
    20be:	9f 5f       	subi	r25, 0xFF	; 255
    20c0:	5f 4f       	sbci	r21, 0xFF	; 255
    20c2:	22 0f       	add	r18, r18
    20c4:	33 1f       	adc	r19, r19
    20c6:	44 1f       	adc	r20, r20
    20c8:	aa 1f       	adc	r26, r26
    20ca:	a9 f3       	breq	.-22     	; 0x20b6 <__divsf3_pse+0x10>
    20cc:	35 d0       	rcall	.+106    	; 0x2138 <__divsf3_pse+0x92>
    20ce:	0e 2e       	mov	r0, r30
    20d0:	3a f0       	brmi	.+14     	; 0x20e0 <__divsf3_pse+0x3a>
    20d2:	e0 e8       	ldi	r30, 0x80	; 128
    20d4:	32 d0       	rcall	.+100    	; 0x213a <__divsf3_pse+0x94>
    20d6:	91 50       	subi	r25, 0x01	; 1
    20d8:	50 40       	sbci	r21, 0x00	; 0
    20da:	e6 95       	lsr	r30
    20dc:	00 1c       	adc	r0, r0
    20de:	ca f7       	brpl	.-14     	; 0x20d2 <__divsf3_pse+0x2c>
    20e0:	2b d0       	rcall	.+86     	; 0x2138 <__divsf3_pse+0x92>
    20e2:	fe 2f       	mov	r31, r30
    20e4:	29 d0       	rcall	.+82     	; 0x2138 <__divsf3_pse+0x92>
    20e6:	66 0f       	add	r22, r22
    20e8:	77 1f       	adc	r23, r23
    20ea:	88 1f       	adc	r24, r24
    20ec:	bb 1f       	adc	r27, r27
    20ee:	26 17       	cp	r18, r22
    20f0:	37 07       	cpc	r19, r23
    20f2:	48 07       	cpc	r20, r24
    20f4:	ab 07       	cpc	r26, r27
    20f6:	b0 e8       	ldi	r27, 0x80	; 128
    20f8:	09 f0       	breq	.+2      	; 0x20fc <__divsf3_pse+0x56>
    20fa:	bb 0b       	sbc	r27, r27
    20fc:	80 2d       	mov	r24, r0
    20fe:	bf 01       	movw	r22, r30
    2100:	ff 27       	eor	r31, r31
    2102:	93 58       	subi	r25, 0x83	; 131
    2104:	5f 4f       	sbci	r21, 0xFF	; 255
    2106:	3a f0       	brmi	.+14     	; 0x2116 <__divsf3_pse+0x70>
    2108:	9e 3f       	cpi	r25, 0xFE	; 254
    210a:	51 05       	cpc	r21, r1
    210c:	78 f0       	brcs	.+30     	; 0x212c <__divsf3_pse+0x86>
    210e:	0c 94 45 11 	jmp	0x228a	; 0x228a <__fp_inf>
    2112:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__fp_szero>
    2116:	5f 3f       	cpi	r21, 0xFF	; 255
    2118:	e4 f3       	brlt	.-8      	; 0x2112 <__divsf3_pse+0x6c>
    211a:	98 3e       	cpi	r25, 0xE8	; 232
    211c:	d4 f3       	brlt	.-12     	; 0x2112 <__divsf3_pse+0x6c>
    211e:	86 95       	lsr	r24
    2120:	77 95       	ror	r23
    2122:	67 95       	ror	r22
    2124:	b7 95       	ror	r27
    2126:	f7 95       	ror	r31
    2128:	9f 5f       	subi	r25, 0xFF	; 255
    212a:	c9 f7       	brne	.-14     	; 0x211e <__divsf3_pse+0x78>
    212c:	88 0f       	add	r24, r24
    212e:	91 1d       	adc	r25, r1
    2130:	96 95       	lsr	r25
    2132:	87 95       	ror	r24
    2134:	97 f9       	bld	r25, 7
    2136:	08 95       	ret
    2138:	e1 e0       	ldi	r30, 0x01	; 1
    213a:	66 0f       	add	r22, r22
    213c:	77 1f       	adc	r23, r23
    213e:	88 1f       	adc	r24, r24
    2140:	bb 1f       	adc	r27, r27
    2142:	62 17       	cp	r22, r18
    2144:	73 07       	cpc	r23, r19
    2146:	84 07       	cpc	r24, r20
    2148:	ba 07       	cpc	r27, r26
    214a:	20 f0       	brcs	.+8      	; 0x2154 <__divsf3_pse+0xae>
    214c:	62 1b       	sub	r22, r18
    214e:	73 0b       	sbc	r23, r19
    2150:	84 0b       	sbc	r24, r20
    2152:	ba 0b       	sbc	r27, r26
    2154:	ee 1f       	adc	r30, r30
    2156:	88 f7       	brcc	.-30     	; 0x213a <__divsf3_pse+0x94>
    2158:	e0 95       	com	r30
    215a:	08 95       	ret

0000215c <__fixsfsi>:
    215c:	0e 94 b5 10 	call	0x216a	; 0x216a <__fixunssfsi>
    2160:	68 94       	set
    2162:	b1 11       	cpse	r27, r1
    2164:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__fp_szero>
    2168:	08 95       	ret

0000216a <__fixunssfsi>:
    216a:	0e 94 75 11 	call	0x22ea	; 0x22ea <__fp_splitA>
    216e:	88 f0       	brcs	.+34     	; 0x2192 <__fixunssfsi+0x28>
    2170:	9f 57       	subi	r25, 0x7F	; 127
    2172:	98 f0       	brcs	.+38     	; 0x219a <__fixunssfsi+0x30>
    2174:	b9 2f       	mov	r27, r25
    2176:	99 27       	eor	r25, r25
    2178:	b7 51       	subi	r27, 0x17	; 23
    217a:	b0 f0       	brcs	.+44     	; 0x21a8 <__fixunssfsi+0x3e>
    217c:	e1 f0       	breq	.+56     	; 0x21b6 <__fixunssfsi+0x4c>
    217e:	66 0f       	add	r22, r22
    2180:	77 1f       	adc	r23, r23
    2182:	88 1f       	adc	r24, r24
    2184:	99 1f       	adc	r25, r25
    2186:	1a f0       	brmi	.+6      	; 0x218e <__fixunssfsi+0x24>
    2188:	ba 95       	dec	r27
    218a:	c9 f7       	brne	.-14     	; 0x217e <__fixunssfsi+0x14>
    218c:	14 c0       	rjmp	.+40     	; 0x21b6 <__fixunssfsi+0x4c>
    218e:	b1 30       	cpi	r27, 0x01	; 1
    2190:	91 f0       	breq	.+36     	; 0x21b6 <__fixunssfsi+0x4c>
    2192:	0e 94 8f 11 	call	0x231e	; 0x231e <__fp_zero>
    2196:	b1 e0       	ldi	r27, 0x01	; 1
    2198:	08 95       	ret
    219a:	0c 94 8f 11 	jmp	0x231e	; 0x231e <__fp_zero>
    219e:	67 2f       	mov	r22, r23
    21a0:	78 2f       	mov	r23, r24
    21a2:	88 27       	eor	r24, r24
    21a4:	b8 5f       	subi	r27, 0xF8	; 248
    21a6:	39 f0       	breq	.+14     	; 0x21b6 <__fixunssfsi+0x4c>
    21a8:	b9 3f       	cpi	r27, 0xF9	; 249
    21aa:	cc f3       	brlt	.-14     	; 0x219e <__fixunssfsi+0x34>
    21ac:	86 95       	lsr	r24
    21ae:	77 95       	ror	r23
    21b0:	67 95       	ror	r22
    21b2:	b3 95       	inc	r27
    21b4:	d9 f7       	brne	.-10     	; 0x21ac <__fixunssfsi+0x42>
    21b6:	3e f4       	brtc	.+14     	; 0x21c6 <__fixunssfsi+0x5c>
    21b8:	90 95       	com	r25
    21ba:	80 95       	com	r24
    21bc:	70 95       	com	r23
    21be:	61 95       	neg	r22
    21c0:	7f 4f       	sbci	r23, 0xFF	; 255
    21c2:	8f 4f       	sbci	r24, 0xFF	; 255
    21c4:	9f 4f       	sbci	r25, 0xFF	; 255
    21c6:	08 95       	ret

000021c8 <__floatunsisf>:
    21c8:	e8 94       	clt
    21ca:	09 c0       	rjmp	.+18     	; 0x21de <__floatsisf+0x12>

000021cc <__floatsisf>:
    21cc:	97 fb       	bst	r25, 7
    21ce:	3e f4       	brtc	.+14     	; 0x21de <__floatsisf+0x12>
    21d0:	90 95       	com	r25
    21d2:	80 95       	com	r24
    21d4:	70 95       	com	r23
    21d6:	61 95       	neg	r22
    21d8:	7f 4f       	sbci	r23, 0xFF	; 255
    21da:	8f 4f       	sbci	r24, 0xFF	; 255
    21dc:	9f 4f       	sbci	r25, 0xFF	; 255
    21de:	99 23       	and	r25, r25
    21e0:	a9 f0       	breq	.+42     	; 0x220c <__floatsisf+0x40>
    21e2:	f9 2f       	mov	r31, r25
    21e4:	96 e9       	ldi	r25, 0x96	; 150
    21e6:	bb 27       	eor	r27, r27
    21e8:	93 95       	inc	r25
    21ea:	f6 95       	lsr	r31
    21ec:	87 95       	ror	r24
    21ee:	77 95       	ror	r23
    21f0:	67 95       	ror	r22
    21f2:	b7 95       	ror	r27
    21f4:	f1 11       	cpse	r31, r1
    21f6:	f8 cf       	rjmp	.-16     	; 0x21e8 <__floatsisf+0x1c>
    21f8:	fa f4       	brpl	.+62     	; 0x2238 <__floatsisf+0x6c>
    21fa:	bb 0f       	add	r27, r27
    21fc:	11 f4       	brne	.+4      	; 0x2202 <__floatsisf+0x36>
    21fe:	60 ff       	sbrs	r22, 0
    2200:	1b c0       	rjmp	.+54     	; 0x2238 <__floatsisf+0x6c>
    2202:	6f 5f       	subi	r22, 0xFF	; 255
    2204:	7f 4f       	sbci	r23, 0xFF	; 255
    2206:	8f 4f       	sbci	r24, 0xFF	; 255
    2208:	9f 4f       	sbci	r25, 0xFF	; 255
    220a:	16 c0       	rjmp	.+44     	; 0x2238 <__floatsisf+0x6c>
    220c:	88 23       	and	r24, r24
    220e:	11 f0       	breq	.+4      	; 0x2214 <__floatsisf+0x48>
    2210:	96 e9       	ldi	r25, 0x96	; 150
    2212:	11 c0       	rjmp	.+34     	; 0x2236 <__floatsisf+0x6a>
    2214:	77 23       	and	r23, r23
    2216:	21 f0       	breq	.+8      	; 0x2220 <__floatsisf+0x54>
    2218:	9e e8       	ldi	r25, 0x8E	; 142
    221a:	87 2f       	mov	r24, r23
    221c:	76 2f       	mov	r23, r22
    221e:	05 c0       	rjmp	.+10     	; 0x222a <__floatsisf+0x5e>
    2220:	66 23       	and	r22, r22
    2222:	71 f0       	breq	.+28     	; 0x2240 <__floatsisf+0x74>
    2224:	96 e8       	ldi	r25, 0x86	; 134
    2226:	86 2f       	mov	r24, r22
    2228:	70 e0       	ldi	r23, 0x00	; 0
    222a:	60 e0       	ldi	r22, 0x00	; 0
    222c:	2a f0       	brmi	.+10     	; 0x2238 <__floatsisf+0x6c>
    222e:	9a 95       	dec	r25
    2230:	66 0f       	add	r22, r22
    2232:	77 1f       	adc	r23, r23
    2234:	88 1f       	adc	r24, r24
    2236:	da f7       	brpl	.-10     	; 0x222e <__floatsisf+0x62>
    2238:	88 0f       	add	r24, r24
    223a:	96 95       	lsr	r25
    223c:	87 95       	ror	r24
    223e:	97 f9       	bld	r25, 7
    2240:	08 95       	ret

00002242 <__fp_cmp>:
    2242:	99 0f       	add	r25, r25
    2244:	00 08       	sbc	r0, r0
    2246:	55 0f       	add	r21, r21
    2248:	aa 0b       	sbc	r26, r26
    224a:	e0 e8       	ldi	r30, 0x80	; 128
    224c:	fe ef       	ldi	r31, 0xFE	; 254
    224e:	16 16       	cp	r1, r22
    2250:	17 06       	cpc	r1, r23
    2252:	e8 07       	cpc	r30, r24
    2254:	f9 07       	cpc	r31, r25
    2256:	c0 f0       	brcs	.+48     	; 0x2288 <__fp_cmp+0x46>
    2258:	12 16       	cp	r1, r18
    225a:	13 06       	cpc	r1, r19
    225c:	e4 07       	cpc	r30, r20
    225e:	f5 07       	cpc	r31, r21
    2260:	98 f0       	brcs	.+38     	; 0x2288 <__fp_cmp+0x46>
    2262:	62 1b       	sub	r22, r18
    2264:	73 0b       	sbc	r23, r19
    2266:	84 0b       	sbc	r24, r20
    2268:	95 0b       	sbc	r25, r21
    226a:	39 f4       	brne	.+14     	; 0x227a <__fp_cmp+0x38>
    226c:	0a 26       	eor	r0, r26
    226e:	61 f0       	breq	.+24     	; 0x2288 <__fp_cmp+0x46>
    2270:	23 2b       	or	r18, r19
    2272:	24 2b       	or	r18, r20
    2274:	25 2b       	or	r18, r21
    2276:	21 f4       	brne	.+8      	; 0x2280 <__fp_cmp+0x3e>
    2278:	08 95       	ret
    227a:	0a 26       	eor	r0, r26
    227c:	09 f4       	brne	.+2      	; 0x2280 <__fp_cmp+0x3e>
    227e:	a1 40       	sbci	r26, 0x01	; 1
    2280:	a6 95       	lsr	r26
    2282:	8f ef       	ldi	r24, 0xFF	; 255
    2284:	81 1d       	adc	r24, r1
    2286:	81 1d       	adc	r24, r1
    2288:	08 95       	ret

0000228a <__fp_inf>:
    228a:	97 f9       	bld	r25, 7
    228c:	9f 67       	ori	r25, 0x7F	; 127
    228e:	80 e8       	ldi	r24, 0x80	; 128
    2290:	70 e0       	ldi	r23, 0x00	; 0
    2292:	60 e0       	ldi	r22, 0x00	; 0
    2294:	08 95       	ret

00002296 <__fp_nan>:
    2296:	9f ef       	ldi	r25, 0xFF	; 255
    2298:	80 ec       	ldi	r24, 0xC0	; 192
    229a:	08 95       	ret

0000229c <__fp_pscA>:
    229c:	00 24       	eor	r0, r0
    229e:	0a 94       	dec	r0
    22a0:	16 16       	cp	r1, r22
    22a2:	17 06       	cpc	r1, r23
    22a4:	18 06       	cpc	r1, r24
    22a6:	09 06       	cpc	r0, r25
    22a8:	08 95       	ret

000022aa <__fp_pscB>:
    22aa:	00 24       	eor	r0, r0
    22ac:	0a 94       	dec	r0
    22ae:	12 16       	cp	r1, r18
    22b0:	13 06       	cpc	r1, r19
    22b2:	14 06       	cpc	r1, r20
    22b4:	05 06       	cpc	r0, r21
    22b6:	08 95       	ret

000022b8 <__fp_round>:
    22b8:	09 2e       	mov	r0, r25
    22ba:	03 94       	inc	r0
    22bc:	00 0c       	add	r0, r0
    22be:	11 f4       	brne	.+4      	; 0x22c4 <__fp_round+0xc>
    22c0:	88 23       	and	r24, r24
    22c2:	52 f0       	brmi	.+20     	; 0x22d8 <__fp_round+0x20>
    22c4:	bb 0f       	add	r27, r27
    22c6:	40 f4       	brcc	.+16     	; 0x22d8 <__fp_round+0x20>
    22c8:	bf 2b       	or	r27, r31
    22ca:	11 f4       	brne	.+4      	; 0x22d0 <__fp_round+0x18>
    22cc:	60 ff       	sbrs	r22, 0
    22ce:	04 c0       	rjmp	.+8      	; 0x22d8 <__fp_round+0x20>
    22d0:	6f 5f       	subi	r22, 0xFF	; 255
    22d2:	7f 4f       	sbci	r23, 0xFF	; 255
    22d4:	8f 4f       	sbci	r24, 0xFF	; 255
    22d6:	9f 4f       	sbci	r25, 0xFF	; 255
    22d8:	08 95       	ret

000022da <__fp_split3>:
    22da:	57 fd       	sbrc	r21, 7
    22dc:	90 58       	subi	r25, 0x80	; 128
    22de:	44 0f       	add	r20, r20
    22e0:	55 1f       	adc	r21, r21
    22e2:	59 f0       	breq	.+22     	; 0x22fa <__fp_splitA+0x10>
    22e4:	5f 3f       	cpi	r21, 0xFF	; 255
    22e6:	71 f0       	breq	.+28     	; 0x2304 <__fp_splitA+0x1a>
    22e8:	47 95       	ror	r20

000022ea <__fp_splitA>:
    22ea:	88 0f       	add	r24, r24
    22ec:	97 fb       	bst	r25, 7
    22ee:	99 1f       	adc	r25, r25
    22f0:	61 f0       	breq	.+24     	; 0x230a <__fp_splitA+0x20>
    22f2:	9f 3f       	cpi	r25, 0xFF	; 255
    22f4:	79 f0       	breq	.+30     	; 0x2314 <__fp_splitA+0x2a>
    22f6:	87 95       	ror	r24
    22f8:	08 95       	ret
    22fa:	12 16       	cp	r1, r18
    22fc:	13 06       	cpc	r1, r19
    22fe:	14 06       	cpc	r1, r20
    2300:	55 1f       	adc	r21, r21
    2302:	f2 cf       	rjmp	.-28     	; 0x22e8 <__fp_split3+0xe>
    2304:	46 95       	lsr	r20
    2306:	f1 df       	rcall	.-30     	; 0x22ea <__fp_splitA>
    2308:	08 c0       	rjmp	.+16     	; 0x231a <__fp_splitA+0x30>
    230a:	16 16       	cp	r1, r22
    230c:	17 06       	cpc	r1, r23
    230e:	18 06       	cpc	r1, r24
    2310:	99 1f       	adc	r25, r25
    2312:	f1 cf       	rjmp	.-30     	; 0x22f6 <__fp_splitA+0xc>
    2314:	86 95       	lsr	r24
    2316:	71 05       	cpc	r23, r1
    2318:	61 05       	cpc	r22, r1
    231a:	08 94       	sec
    231c:	08 95       	ret

0000231e <__fp_zero>:
    231e:	e8 94       	clt

00002320 <__fp_szero>:
    2320:	bb 27       	eor	r27, r27
    2322:	66 27       	eor	r22, r22
    2324:	77 27       	eor	r23, r23
    2326:	cb 01       	movw	r24, r22
    2328:	97 f9       	bld	r25, 7
    232a:	08 95       	ret

0000232c <__gesf2>:
    232c:	0e 94 21 11 	call	0x2242	; 0x2242 <__fp_cmp>
    2330:	08 f4       	brcc	.+2      	; 0x2334 <__gesf2+0x8>
    2332:	8f ef       	ldi	r24, 0xFF	; 255
    2334:	08 95       	ret

00002336 <__mulsf3>:
    2336:	0e 94 ae 11 	call	0x235c	; 0x235c <__mulsf3x>
    233a:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__fp_round>
    233e:	0e 94 4e 11 	call	0x229c	; 0x229c <__fp_pscA>
    2342:	38 f0       	brcs	.+14     	; 0x2352 <__mulsf3+0x1c>
    2344:	0e 94 55 11 	call	0x22aa	; 0x22aa <__fp_pscB>
    2348:	20 f0       	brcs	.+8      	; 0x2352 <__mulsf3+0x1c>
    234a:	95 23       	and	r25, r21
    234c:	11 f0       	breq	.+4      	; 0x2352 <__mulsf3+0x1c>
    234e:	0c 94 45 11 	jmp	0x228a	; 0x228a <__fp_inf>
    2352:	0c 94 4b 11 	jmp	0x2296	; 0x2296 <__fp_nan>
    2356:	11 24       	eor	r1, r1
    2358:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__fp_szero>

0000235c <__mulsf3x>:
    235c:	0e 94 6d 11 	call	0x22da	; 0x22da <__fp_split3>
    2360:	70 f3       	brcs	.-36     	; 0x233e <__mulsf3+0x8>

00002362 <__mulsf3_pse>:
    2362:	95 9f       	mul	r25, r21
    2364:	c1 f3       	breq	.-16     	; 0x2356 <__mulsf3+0x20>
    2366:	95 0f       	add	r25, r21
    2368:	50 e0       	ldi	r21, 0x00	; 0
    236a:	55 1f       	adc	r21, r21
    236c:	62 9f       	mul	r22, r18
    236e:	f0 01       	movw	r30, r0
    2370:	72 9f       	mul	r23, r18
    2372:	bb 27       	eor	r27, r27
    2374:	f0 0d       	add	r31, r0
    2376:	b1 1d       	adc	r27, r1
    2378:	63 9f       	mul	r22, r19
    237a:	aa 27       	eor	r26, r26
    237c:	f0 0d       	add	r31, r0
    237e:	b1 1d       	adc	r27, r1
    2380:	aa 1f       	adc	r26, r26
    2382:	64 9f       	mul	r22, r20
    2384:	66 27       	eor	r22, r22
    2386:	b0 0d       	add	r27, r0
    2388:	a1 1d       	adc	r26, r1
    238a:	66 1f       	adc	r22, r22
    238c:	82 9f       	mul	r24, r18
    238e:	22 27       	eor	r18, r18
    2390:	b0 0d       	add	r27, r0
    2392:	a1 1d       	adc	r26, r1
    2394:	62 1f       	adc	r22, r18
    2396:	73 9f       	mul	r23, r19
    2398:	b0 0d       	add	r27, r0
    239a:	a1 1d       	adc	r26, r1
    239c:	62 1f       	adc	r22, r18
    239e:	83 9f       	mul	r24, r19
    23a0:	a0 0d       	add	r26, r0
    23a2:	61 1d       	adc	r22, r1
    23a4:	22 1f       	adc	r18, r18
    23a6:	74 9f       	mul	r23, r20
    23a8:	33 27       	eor	r19, r19
    23aa:	a0 0d       	add	r26, r0
    23ac:	61 1d       	adc	r22, r1
    23ae:	23 1f       	adc	r18, r19
    23b0:	84 9f       	mul	r24, r20
    23b2:	60 0d       	add	r22, r0
    23b4:	21 1d       	adc	r18, r1
    23b6:	82 2f       	mov	r24, r18
    23b8:	76 2f       	mov	r23, r22
    23ba:	6a 2f       	mov	r22, r26
    23bc:	11 24       	eor	r1, r1
    23be:	9f 57       	subi	r25, 0x7F	; 127
    23c0:	50 40       	sbci	r21, 0x00	; 0
    23c2:	9a f0       	brmi	.+38     	; 0x23ea <__mulsf3_pse+0x88>
    23c4:	f1 f0       	breq	.+60     	; 0x2402 <__mulsf3_pse+0xa0>
    23c6:	88 23       	and	r24, r24
    23c8:	4a f0       	brmi	.+18     	; 0x23dc <__mulsf3_pse+0x7a>
    23ca:	ee 0f       	add	r30, r30
    23cc:	ff 1f       	adc	r31, r31
    23ce:	bb 1f       	adc	r27, r27
    23d0:	66 1f       	adc	r22, r22
    23d2:	77 1f       	adc	r23, r23
    23d4:	88 1f       	adc	r24, r24
    23d6:	91 50       	subi	r25, 0x01	; 1
    23d8:	50 40       	sbci	r21, 0x00	; 0
    23da:	a9 f7       	brne	.-22     	; 0x23c6 <__mulsf3_pse+0x64>
    23dc:	9e 3f       	cpi	r25, 0xFE	; 254
    23de:	51 05       	cpc	r21, r1
    23e0:	80 f0       	brcs	.+32     	; 0x2402 <__mulsf3_pse+0xa0>
    23e2:	0c 94 45 11 	jmp	0x228a	; 0x228a <__fp_inf>
    23e6:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__fp_szero>
    23ea:	5f 3f       	cpi	r21, 0xFF	; 255
    23ec:	e4 f3       	brlt	.-8      	; 0x23e6 <__mulsf3_pse+0x84>
    23ee:	98 3e       	cpi	r25, 0xE8	; 232
    23f0:	d4 f3       	brlt	.-12     	; 0x23e6 <__mulsf3_pse+0x84>
    23f2:	86 95       	lsr	r24
    23f4:	77 95       	ror	r23
    23f6:	67 95       	ror	r22
    23f8:	b7 95       	ror	r27
    23fa:	f7 95       	ror	r31
    23fc:	e7 95       	ror	r30
    23fe:	9f 5f       	subi	r25, 0xFF	; 255
    2400:	c1 f7       	brne	.-16     	; 0x23f2 <__mulsf3_pse+0x90>
    2402:	fe 2b       	or	r31, r30
    2404:	88 0f       	add	r24, r24
    2406:	91 1d       	adc	r25, r1
    2408:	96 95       	lsr	r25
    240a:	87 95       	ror	r24
    240c:	97 f9       	bld	r25, 7
    240e:	08 95       	ret

00002410 <__udivmodsi4>:
    2410:	a1 e2       	ldi	r26, 0x21	; 33
    2412:	1a 2e       	mov	r1, r26
    2414:	aa 1b       	sub	r26, r26
    2416:	bb 1b       	sub	r27, r27
    2418:	fd 01       	movw	r30, r26
    241a:	0d c0       	rjmp	.+26     	; 0x2436 <__udivmodsi4_ep>

0000241c <__udivmodsi4_loop>:
    241c:	aa 1f       	adc	r26, r26
    241e:	bb 1f       	adc	r27, r27
    2420:	ee 1f       	adc	r30, r30
    2422:	ff 1f       	adc	r31, r31
    2424:	a2 17       	cp	r26, r18
    2426:	b3 07       	cpc	r27, r19
    2428:	e4 07       	cpc	r30, r20
    242a:	f5 07       	cpc	r31, r21
    242c:	20 f0       	brcs	.+8      	; 0x2436 <__udivmodsi4_ep>
    242e:	a2 1b       	sub	r26, r18
    2430:	b3 0b       	sbc	r27, r19
    2432:	e4 0b       	sbc	r30, r20
    2434:	f5 0b       	sbc	r31, r21

00002436 <__udivmodsi4_ep>:
    2436:	66 1f       	adc	r22, r22
    2438:	77 1f       	adc	r23, r23
    243a:	88 1f       	adc	r24, r24
    243c:	99 1f       	adc	r25, r25
    243e:	1a 94       	dec	r1
    2440:	69 f7       	brne	.-38     	; 0x241c <__udivmodsi4_loop>
    2442:	60 95       	com	r22
    2444:	70 95       	com	r23
    2446:	80 95       	com	r24
    2448:	90 95       	com	r25
    244a:	9b 01       	movw	r18, r22
    244c:	ac 01       	movw	r20, r24
    244e:	bd 01       	movw	r22, r26
    2450:	cf 01       	movw	r24, r30
    2452:	08 95       	ret

00002454 <__divmodsi4>:
    2454:	05 2e       	mov	r0, r21
    2456:	97 fb       	bst	r25, 7
    2458:	1e f4       	brtc	.+6      	; 0x2460 <__divmodsi4+0xc>
    245a:	00 94       	com	r0
    245c:	0e 94 41 12 	call	0x2482	; 0x2482 <__negsi2>
    2460:	57 fd       	sbrc	r21, 7
    2462:	07 d0       	rcall	.+14     	; 0x2472 <__divmodsi4_neg2>
    2464:	0e 94 08 12 	call	0x2410	; 0x2410 <__udivmodsi4>
    2468:	07 fc       	sbrc	r0, 7
    246a:	03 d0       	rcall	.+6      	; 0x2472 <__divmodsi4_neg2>
    246c:	4e f4       	brtc	.+18     	; 0x2480 <__divmodsi4_exit>
    246e:	0c 94 41 12 	jmp	0x2482	; 0x2482 <__negsi2>

00002472 <__divmodsi4_neg2>:
    2472:	50 95       	com	r21
    2474:	40 95       	com	r20
    2476:	30 95       	com	r19
    2478:	21 95       	neg	r18
    247a:	3f 4f       	sbci	r19, 0xFF	; 255
    247c:	4f 4f       	sbci	r20, 0xFF	; 255
    247e:	5f 4f       	sbci	r21, 0xFF	; 255

00002480 <__divmodsi4_exit>:
    2480:	08 95       	ret

00002482 <__negsi2>:
    2482:	90 95       	com	r25
    2484:	80 95       	com	r24
    2486:	70 95       	com	r23
    2488:	61 95       	neg	r22
    248a:	7f 4f       	sbci	r23, 0xFF	; 255
    248c:	8f 4f       	sbci	r24, 0xFF	; 255
    248e:	9f 4f       	sbci	r25, 0xFF	; 255
    2490:	08 95       	ret

00002492 <__itoa_ncheck>:
    2492:	bb 27       	eor	r27, r27
    2494:	4a 30       	cpi	r20, 0x0A	; 10
    2496:	31 f4       	brne	.+12     	; 0x24a4 <__itoa_ncheck+0x12>
    2498:	99 23       	and	r25, r25
    249a:	22 f4       	brpl	.+8      	; 0x24a4 <__itoa_ncheck+0x12>
    249c:	bd e2       	ldi	r27, 0x2D	; 45
    249e:	90 95       	com	r25
    24a0:	81 95       	neg	r24
    24a2:	9f 4f       	sbci	r25, 0xFF	; 255
    24a4:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__utoa_common>

000024a8 <__utoa_ncheck>:
    24a8:	bb 27       	eor	r27, r27

000024aa <__utoa_common>:
    24aa:	fb 01       	movw	r30, r22
    24ac:	55 27       	eor	r21, r21
    24ae:	aa 27       	eor	r26, r26
    24b0:	88 0f       	add	r24, r24
    24b2:	99 1f       	adc	r25, r25
    24b4:	aa 1f       	adc	r26, r26
    24b6:	a4 17       	cp	r26, r20
    24b8:	10 f0       	brcs	.+4      	; 0x24be <__utoa_common+0x14>
    24ba:	a4 1b       	sub	r26, r20
    24bc:	83 95       	inc	r24
    24be:	50 51       	subi	r21, 0x10	; 16
    24c0:	b9 f7       	brne	.-18     	; 0x24b0 <__utoa_common+0x6>
    24c2:	a0 5d       	subi	r26, 0xD0	; 208
    24c4:	aa 33       	cpi	r26, 0x3A	; 58
    24c6:	08 f0       	brcs	.+2      	; 0x24ca <__utoa_common+0x20>
    24c8:	a9 5d       	subi	r26, 0xD9	; 217
    24ca:	a1 93       	st	Z+, r26
    24cc:	00 97       	sbiw	r24, 0x00	; 0
    24ce:	79 f7       	brne	.-34     	; 0x24ae <__utoa_common+0x4>
    24d0:	b1 11       	cpse	r27, r1
    24d2:	b1 93       	st	Z+, r27
    24d4:	11 92       	st	Z+, r1
    24d6:	cb 01       	movw	r24, r22
    24d8:	0c 94 6e 12 	jmp	0x24dc	; 0x24dc <strrev>

000024dc <strrev>:
    24dc:	dc 01       	movw	r26, r24
    24de:	fc 01       	movw	r30, r24
    24e0:	67 2f       	mov	r22, r23
    24e2:	71 91       	ld	r23, Z+
    24e4:	77 23       	and	r23, r23
    24e6:	e1 f7       	brne	.-8      	; 0x24e0 <strrev+0x4>
    24e8:	32 97       	sbiw	r30, 0x02	; 2
    24ea:	04 c0       	rjmp	.+8      	; 0x24f4 <strrev+0x18>
    24ec:	7c 91       	ld	r23, X
    24ee:	6d 93       	st	X+, r22
    24f0:	70 83       	st	Z, r23
    24f2:	62 91       	ld	r22, -Z
    24f4:	ae 17       	cp	r26, r30
    24f6:	bf 07       	cpc	r27, r31
    24f8:	c8 f3       	brcs	.-14     	; 0x24ec <strrev+0x10>
    24fa:	08 95       	ret

000024fc <_exit>:
    24fc:	f8 94       	cli

000024fe <__stop_program>:
    24fe:	ff cf       	rjmp	.-2      	; 0x24fe <__stop_program>
